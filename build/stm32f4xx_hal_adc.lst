ARM GAS  /tmp/ccYcKIRp.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
  20              		.section	.text.HAL_ADC_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_ADC_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_ADC_Init:
  28              	.LFB216:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC) peripheral:
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Peripheral Control functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Peripheral State functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Copyright (c) 2017 STMicroelectronics.
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * All rights reserved.
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * in the root directory of this software component.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
ARM GAS  /tmp/ccYcKIRp.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
ARM GAS  /tmp/ccYcKIRp.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
ARM GAS  /tmp/ccYcKIRp.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Callback registration ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      to register an interrupt callback.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and a pointer to the user callback function.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      weak function.
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
ARM GAS  /tmp/ccYcKIRp.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      and the Callback ID.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      This function allows to reset following callbacks:
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      or HAL_ADC_Init() function.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      are set to the corresponding weak functions.
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  /tmp/ccYcKIRp.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  29              		.loc 1 312 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccYcKIRp.s 			page 7


  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  45              		.loc 1 313 21
  46 0008 0023     		movs	r3, #0
  47 000a FB73     		strb	r3, [r7, #15]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  48              		.loc 1 316 5
  49 000c 7B68     		ldr	r3, [r7, #4]
  50 000e 002B     		cmp	r3, #0
  51 0010 01D1     		bne	.L2
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
  52              		.loc 1 318 12
  53 0012 0123     		movs	r3, #1
  54 0014 33E0     		b	.L3
  55              	.L2:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
  56              		.loc 1 339 10
  57 0016 7B68     		ldr	r3, [r7, #4]
  58 0018 1B6C     		ldr	r3, [r3, #64]
  59              		.loc 1 339 5
  60 001a 002B     		cmp	r3, #0
  61 001c 09D1     		bne	.L4
ARM GAS  /tmp/ccYcKIRp.s 			page 8


 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
  62              		.loc 1 357 5
  63 001e 7868     		ldr	r0, [r7, #4]
  64 0020 FFF7FEFF 		bl	HAL_ADC_MspInit
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  65              		.loc 1 361 5
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 0022     		movs	r2, #0
  68 0028 5A64     		str	r2, [r3, #68]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
  69              		.loc 1 364 16
  70 002a 7B68     		ldr	r3, [r7, #4]
  71 002c 0022     		movs	r2, #0
  72 002e 83F83C20 		strb	r2, [r3, #60]
  73              	.L4:
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
  74              		.loc 1 369 7
  75 0032 7B68     		ldr	r3, [r7, #4]
  76 0034 1B6C     		ldr	r3, [r3, #64]
  77 0036 03F01003 		and	r3, r3, #16
  78              		.loc 1 369 6
  79 003a 002B     		cmp	r3, #0
  80 003c 18D1     		bne	.L5
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  81              		.loc 1 372 5
  82 003e 7B68     		ldr	r3, [r7, #4]
  83 0040 1B6C     		ldr	r3, [r3, #64]
  84 0042 23F48853 		bic	r3, r3, #4352
  85 0046 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccYcKIRp.s 			page 9


  86 004a 43F00202 		orr	r2, r3, #2
  87 004e 7B68     		ldr	r3, [r7, #4]
  88 0050 1A64     		str	r2, [r3, #64]
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
  89              		.loc 1 377 5
  90 0052 7868     		ldr	r0, [r7, #4]
  91 0054 FFF7FEFF 		bl	ADC_Init
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  92              		.loc 1 380 5
  93 0058 7B68     		ldr	r3, [r7, #4]
  94 005a 0022     		movs	r2, #0
  95 005c 5A64     		str	r2, [r3, #68]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  96              		.loc 1 383 5
  97 005e 7B68     		ldr	r3, [r7, #4]
  98 0060 1B6C     		ldr	r3, [r3, #64]
  99 0062 23F00303 		bic	r3, r3, #3
 100 0066 43F00102 		orr	r2, r3, #1
 101 006a 7B68     		ldr	r3, [r7, #4]
 102 006c 1A64     		str	r2, [r3, #64]
 103 006e 01E0     		b	.L6
 104              	.L5:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 105              		.loc 1 389 20
 106 0070 0123     		movs	r3, #1
 107 0072 FB73     		strb	r3, [r7, #15]
 108              	.L6:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 109              		.loc 1 393 3
 110 0074 7B68     		ldr	r3, [r7, #4]
 111 0076 0022     		movs	r2, #0
 112 0078 83F83C20 		strb	r2, [r3, #60]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 113              		.loc 1 396 10
 114 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 115              	.L3:
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 116              		.loc 1 397 1
 117 007e 1846     		mov	r0, r3
ARM GAS  /tmp/ccYcKIRp.s 			page 10


 118 0080 1037     		adds	r7, r7, #16
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121 0082 BD46     		mov	sp, r7
 122              	.LCFI4:
 123              		.cfi_def_cfa_register 13
 124              		@ sp needed
 125 0084 80BD     		pop	{r7, pc}
 126              		.cfi_endproc
 127              	.LFE216:
 129              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_ADC_DeInit
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	HAL_ADC_DeInit:
 137              	.LFB217:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 138              		.loc 1 406 1
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 16
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 84B0     		sub	sp, sp, #16
 148              	.LCFI6:
 149              		.cfi_def_cfa_offset 24
 150 0004 00AF     		add	r7, sp, #0
 151              	.LCFI7:
 152              		.cfi_def_cfa_register 7
 153 0006 7860     		str	r0, [r7, #4]
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 154              		.loc 1 407 21
 155 0008 0023     		movs	r3, #0
 156 000a FB73     		strb	r3, [r7, #15]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 157              		.loc 1 410 5
 158 000c 7B68     		ldr	r3, [r7, #4]
 159 000e 002B     		cmp	r3, #0
 160 0010 01D1     		bne	.L8
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 161              		.loc 1 412 12
ARM GAS  /tmp/ccYcKIRp.s 			page 11


 162 0012 0123     		movs	r3, #1
 163 0014 22E0     		b	.L9
 164              	.L8:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 165              		.loc 1 419 3
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 1B6C     		ldr	r3, [r3, #64]
 168 001a 43F00202 		orr	r2, r3, #2
 169 001e 7B68     		ldr	r3, [r7, #4]
 170 0020 1A64     		str	r2, [r3, #64]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 171              		.loc 1 423 3
 172 0022 7B68     		ldr	r3, [r7, #4]
 173 0024 1B68     		ldr	r3, [r3]
 174 0026 9A68     		ldr	r2, [r3, #8]
 175 0028 7B68     		ldr	r3, [r7, #4]
 176 002a 1B68     		ldr	r3, [r3]
 177 002c 22F00102 		bic	r2, r2, #1
 178 0030 9A60     		str	r2, [r3, #8]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 179              		.loc 1 427 6
 180 0032 7B68     		ldr	r3, [r7, #4]
 181 0034 1B68     		ldr	r3, [r3]
 182 0036 9B68     		ldr	r3, [r3, #8]
 183 0038 03F00103 		and	r3, r3, #1
 184              		.loc 1 427 5
 185 003c 002B     		cmp	r3, #0
 186 003e 08D1     		bne	.L10
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 187              		.loc 1 439 3
 188 0040 7868     		ldr	r0, [r7, #4]
 189 0042 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccYcKIRp.s 			page 12


 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 190              		.loc 1 443 5
 191 0046 7B68     		ldr	r3, [r7, #4]
 192 0048 0022     		movs	r2, #0
 193 004a 5A64     		str	r2, [r3, #68]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 194              		.loc 1 446 17
 195 004c 7B68     		ldr	r3, [r7, #4]
 196 004e 0022     		movs	r2, #0
 197 0050 1A64     		str	r2, [r3, #64]
 198              	.L10:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 199              		.loc 1 450 3
 200 0052 7B68     		ldr	r3, [r7, #4]
 201 0054 0022     		movs	r2, #0
 202 0056 83F83C20 		strb	r2, [r3, #60]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 203              		.loc 1 453 10
 204 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 205              	.L9:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 206              		.loc 1 454 1
 207 005c 1846     		mov	r0, r3
 208 005e 1037     		adds	r7, r7, #16
 209              	.LCFI8:
 210              		.cfi_def_cfa_offset 8
 211 0060 BD46     		mov	sp, r7
 212              	.LCFI9:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0062 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE217:
 219              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 220              		.align	1
 221              		.weak	HAL_ADC_MspInit
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	HAL_ADC_MspInit:
 227              	.LFB218:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
ARM GAS  /tmp/ccYcKIRp.s 			page 13


 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (pCallback == NULL)
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
ARM GAS  /tmp/ccYcKIRp.s 			page 14


 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status = HAL_ERROR;
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
ARM GAS  /tmp/ccYcKIRp.s 			page 15


 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     switch (CallbackID)
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       default :
ARM GAS  /tmp/ccYcKIRp.s 			page 16


 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update the error code */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Return error status */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         status =  HAL_ERROR;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         break;
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update the error code */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Return error status */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     status =  HAL_ERROR;
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return status;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 228              		.loc 1 663 1
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0000 80B4     		push	{r7}
 234              	.LCFI10:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 7, -4
 237 0002 83B0     		sub	sp, sp, #12
 238              	.LCFI11:
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI12:
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 244              		.loc 1 669 1
 245 0008 00BF     		nop
 246 000a 0C37     		adds	r7, r7, #12
 247              	.LCFI13:
 248              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccYcKIRp.s 			page 17


 249 000c BD46     		mov	sp, r7
 250              	.LCFI14:
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 000e 5DF8047B 		ldr	r7, [sp], #4
 254              	.LCFI15:
 255              		.cfi_restore 7
 256              		.cfi_def_cfa_offset 0
 257 0012 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE218:
 261              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 262              		.align	1
 263              		.weak	HAL_ADC_MspDeInit
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 268              	HAL_ADC_MspDeInit:
 269              	.LFB219:
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 270              		.loc 1 678 1
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275 0000 80B4     		push	{r7}
 276              	.LCFI16:
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 83B0     		sub	sp, sp, #12
 280              	.LCFI17:
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              	.LCFI18:
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 286              		.loc 1 684 1
 287 0008 00BF     		nop
 288 000a 0C37     		adds	r7, r7, #12
 289              	.LCFI19:
 290              		.cfi_def_cfa_offset 4
 291 000c BD46     		mov	sp, r7
 292              	.LCFI20:
ARM GAS  /tmp/ccYcKIRp.s 			page 18


 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 000e 5DF8047B 		ldr	r7, [sp], #4
 296              	.LCFI21:
 297              		.cfi_restore 7
 298              		.cfi_def_cfa_offset 0
 299 0012 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE219:
 303              		.section	.text.HAL_ADC_Start,"ax",%progbits
 304              		.align	1
 305              		.global	HAL_ADC_Start
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	HAL_ADC_Start:
 311              	.LFB220:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 312              		.loc 1 717 1
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 16
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              	.LCFI22:
ARM GAS  /tmp/ccYcKIRp.s 			page 19


 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 85B0     		sub	sp, sp, #20
 322              	.LCFI23:
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              	.LCFI24:
 326              		.cfi_def_cfa_register 7
 327 0006 7860     		str	r0, [r7, #4]
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 328              		.loc 1 718 17
 329 0008 0023     		movs	r3, #0
 330 000a BB60     		str	r3, [r7, #8]
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 331              		.loc 1 726 3
 332 000c 7B68     		ldr	r3, [r7, #4]
 333 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 334 0012 012B     		cmp	r3, #1
 335 0014 01D1     		bne	.L14
 336              		.loc 1 726 3 is_stmt 0 discriminator 1
 337 0016 0223     		movs	r3, #2
 338 0018 97E0     		b	.L15
 339              	.L14:
 340              		.loc 1 726 3 discriminator 2
 341 001a 7B68     		ldr	r3, [r7, #4]
 342 001c 0122     		movs	r2, #1
 343 001e 83F83C20 		strb	r2, [r3, #60]
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 344              		.loc 1 731 11 is_stmt 1 discriminator 2
 345 0022 7B68     		ldr	r3, [r7, #4]
 346 0024 1B68     		ldr	r3, [r3]
 347              		.loc 1 731 21 discriminator 2
 348 0026 9B68     		ldr	r3, [r3, #8]
 349              		.loc 1 731 27 discriminator 2
 350 0028 03F00103 		and	r3, r3, #1
 351              		.loc 1 731 5 discriminator 2
 352 002c 012B     		cmp	r3, #1
 353 002e 18D0     		beq	.L16
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 354              		.loc 1 734 5
 355 0030 7B68     		ldr	r3, [r7, #4]
 356 0032 1B68     		ldr	r3, [r3]
 357 0034 9A68     		ldr	r2, [r3, #8]
 358 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 20


 359 0038 1B68     		ldr	r3, [r3]
 360 003a 42F00102 		orr	r2, r2, #1
 361 003e 9A60     		str	r2, [r3, #8]
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 362              		.loc 1 738 53
 363 0040 454B     		ldr	r3, .L25
 364 0042 1B68     		ldr	r3, [r3]
 365 0044 454A     		ldr	r2, .L25+4
 366 0046 A2FB0323 		umull	r2, r3, r2, r3
 367 004a 9A0C     		lsrs	r2, r3, #18
 368              		.loc 1 738 34
 369 004c 1346     		mov	r3, r2
 370 004e 5B00     		lsls	r3, r3, #1
 371 0050 1344     		add	r3, r3, r2
 372              		.loc 1 738 13
 373 0052 BB60     		str	r3, [r7, #8]
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 374              		.loc 1 739 10
 375 0054 02E0     		b	.L17
 376              	.L18:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 377              		.loc 1 741 14
 378 0056 BB68     		ldr	r3, [r7, #8]
 379 0058 013B     		subs	r3, r3, #1
 380 005a BB60     		str	r3, [r7, #8]
 381              	.L17:
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 382              		.loc 1 739 19
 383 005c BB68     		ldr	r3, [r7, #8]
 384 005e 002B     		cmp	r3, #0
 385 0060 F9D1     		bne	.L18
 386              	.L16:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 387              		.loc 1 746 6
 388 0062 7B68     		ldr	r3, [r7, #4]
 389 0064 1B68     		ldr	r3, [r3]
 390 0066 9B68     		ldr	r3, [r3, #8]
 391 0068 03F00103 		and	r3, r3, #1
 392              		.loc 1 746 5
 393 006c 012B     		cmp	r3, #1
 394 006e 5FD1     		bne	.L19
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 395              		.loc 1 751 5
 396 0070 7B68     		ldr	r3, [r7, #4]
 397 0072 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccYcKIRp.s 			page 21


 398 0074 23F4E063 		bic	r3, r3, #1792
 399 0078 23F00103 		bic	r3, r3, #1
 400 007c 43F48072 		orr	r2, r3, #256
 401 0080 7B68     		ldr	r3, [r7, #4]
 402 0082 1A64     		str	r2, [r3, #64]
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 403              		.loc 1 757 9
 404 0084 7B68     		ldr	r3, [r7, #4]
 405 0086 1B68     		ldr	r3, [r3]
 406 0088 5B68     		ldr	r3, [r3, #4]
 407 008a 03F48063 		and	r3, r3, #1024
 408              		.loc 1 757 8
 409 008e 002B     		cmp	r3, #0
 410 0090 07D0     		beq	.L20
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 411              		.loc 1 759 7
 412 0092 7B68     		ldr	r3, [r7, #4]
 413 0094 1B6C     		ldr	r3, [r3, #64]
 414 0096 23F44053 		bic	r3, r3, #12288
 415 009a 43F48052 		orr	r2, r3, #4096
 416 009e 7B68     		ldr	r3, [r7, #4]
 417 00a0 1A64     		str	r2, [r3, #64]
 418              	.L20:
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 419              		.loc 1 763 9
 420 00a2 7B68     		ldr	r3, [r7, #4]
 421 00a4 1B6C     		ldr	r3, [r3, #64]
 422 00a6 03F48053 		and	r3, r3, #4096
 423              		.loc 1 763 8
 424 00aa B3F5805F 		cmp	r3, #4096
 425 00ae 06D1     		bne	.L21
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 426              		.loc 1 766 7
 427 00b0 7B68     		ldr	r3, [r7, #4]
 428 00b2 5B6C     		ldr	r3, [r3, #68]
 429 00b4 23F00602 		bic	r2, r3, #6
 430 00b8 7B68     		ldr	r3, [r7, #4]
 431 00ba 5A64     		str	r2, [r3, #68]
 432 00bc 02E0     		b	.L22
 433              	.L21:
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 434              		.loc 1 771 7
ARM GAS  /tmp/ccYcKIRp.s 			page 22


 435 00be 7B68     		ldr	r3, [r7, #4]
 436 00c0 0022     		movs	r2, #0
 437 00c2 5A64     		str	r2, [r3, #68]
 438              	.L22:
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 439              		.loc 1 777 5
 440 00c4 7B68     		ldr	r3, [r7, #4]
 441 00c6 0022     		movs	r2, #0
 442 00c8 83F83C20 		strb	r2, [r3, #60]
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 443              		.loc 1 782 19
 444 00cc 244B     		ldr	r3, .L25+8
 445 00ce FB60     		str	r3, [r7, #12]
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 446              		.loc 1 786 5
 447 00d0 7B68     		ldr	r3, [r7, #4]
 448 00d2 1B68     		ldr	r3, [r3]
 449 00d4 6FF02202 		mvn	r2, #34
 450 00d8 1A60     		str	r2, [r3]
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 451              		.loc 1 789 8
 452 00da FB68     		ldr	r3, [r7, #12]
 453 00dc 5B68     		ldr	r3, [r3, #4]
 454 00de 03F01F03 		and	r3, r3, #31
 455              		.loc 1 789 7
 456 00e2 002B     		cmp	r3, #0
 457 00e4 0FD1     		bne	.L23
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 458              		.loc 1 797 17
 459 00e6 7B68     		ldr	r3, [r7, #4]
 460 00e8 1B68     		ldr	r3, [r3]
 461              		.loc 1 797 27
 462 00ea 9B68     		ldr	r3, [r3, #8]
 463              		.loc 1 797 33
 464 00ec 03F04053 		and	r3, r3, #805306368
 465              		.loc 1 797 11
ARM GAS  /tmp/ccYcKIRp.s 			page 23


 466 00f0 002B     		cmp	r3, #0
 467 00f2 29D1     		bne	.L24
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 468              		.loc 1 800 15
 469 00f4 7B68     		ldr	r3, [r7, #4]
 470 00f6 1B68     		ldr	r3, [r3]
 471              		.loc 1 800 25
 472 00f8 9A68     		ldr	r2, [r3, #8]
 473              		.loc 1 800 15
 474 00fa 7B68     		ldr	r3, [r7, #4]
 475 00fc 1B68     		ldr	r3, [r3]
 476              		.loc 1 800 31
 477 00fe 42F08042 		orr	r2, r2, #1073741824
 478 0102 9A60     		str	r2, [r3, #8]
 479 0104 20E0     		b	.L24
 480              	.L23:
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 481              		.loc 1 809 15
 482 0106 7B68     		ldr	r3, [r7, #4]
 483 0108 1B68     		ldr	r3, [r3]
 484              		.loc 1 809 9
 485 010a 164A     		ldr	r2, .L25+12
 486 010c 9342     		cmp	r3, r2
 487 010e 1BD1     		bne	.L24
 488              		.loc 1 809 44 discriminator 1
 489 0110 7B68     		ldr	r3, [r7, #4]
 490 0112 1B68     		ldr	r3, [r3]
 491              		.loc 1 809 54 discriminator 1
 492 0114 9B68     		ldr	r3, [r3, #8]
 493              		.loc 1 809 60 discriminator 1
 494 0116 03F04053 		and	r3, r3, #805306368
 495              		.loc 1 809 35 discriminator 1
 496 011a 002B     		cmp	r3, #0
 497 011c 14D1     		bne	.L24
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 498              		.loc 1 812 15
 499 011e 7B68     		ldr	r3, [r7, #4]
 500 0120 1B68     		ldr	r3, [r3]
 501              		.loc 1 812 25
 502 0122 9A68     		ldr	r2, [r3, #8]
 503              		.loc 1 812 15
 504 0124 7B68     		ldr	r3, [r7, #4]
 505 0126 1B68     		ldr	r3, [r3]
 506              		.loc 1 812 31
 507 0128 42F08042 		orr	r2, r2, #1073741824
ARM GAS  /tmp/ccYcKIRp.s 			page 24


 508 012c 9A60     		str	r2, [r3, #8]
 509 012e 0BE0     		b	.L24
 510              	.L19:
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 511              		.loc 1 819 5
 512 0130 7B68     		ldr	r3, [r7, #4]
 513 0132 1B6C     		ldr	r3, [r3, #64]
 514 0134 43F01002 		orr	r2, r3, #16
 515 0138 7B68     		ldr	r3, [r7, #4]
 516 013a 1A64     		str	r2, [r3, #64]
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 517              		.loc 1 822 5
 518 013c 7B68     		ldr	r3, [r7, #4]
 519 013e 5B6C     		ldr	r3, [r3, #68]
 520 0140 43F00102 		orr	r2, r3, #1
 521 0144 7B68     		ldr	r3, [r7, #4]
 522 0146 5A64     		str	r2, [r3, #68]
 523              	.L24:
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 524              		.loc 1 826 10
 525 0148 0023     		movs	r3, #0
 526              	.L15:
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 527              		.loc 1 827 1
 528 014a 1846     		mov	r0, r3
 529 014c 1437     		adds	r7, r7, #20
 530              	.LCFI25:
 531              		.cfi_def_cfa_offset 4
 532 014e BD46     		mov	sp, r7
 533              	.LCFI26:
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 0150 5DF8047B 		ldr	r7, [sp], #4
 537              	.LCFI27:
 538              		.cfi_restore 7
 539              		.cfi_def_cfa_offset 0
 540 0154 7047     		bx	lr
 541              	.L26:
 542 0156 00BF     		.align	2
 543              	.L25:
 544 0158 00000000 		.word	SystemCoreClock
 545 015c 83DE1B43 		.word	1125899907
 546 0160 00230140 		.word	1073816320
 547 0164 00200140 		.word	1073815552
 548              		.cfi_endproc
 549              	.LFE220:
ARM GAS  /tmp/ccYcKIRp.s 			page 25


 551              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 552              		.align	1
 553              		.global	HAL_ADC_Stop
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 558              	HAL_ADC_Stop:
 559              	.LFB221:
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 560              		.loc 1 840 1
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 8
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 565 0000 80B4     		push	{r7}
 566              	.LCFI28:
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 83B0     		sub	sp, sp, #12
 570              	.LCFI29:
 571              		.cfi_def_cfa_offset 16
 572 0004 00AF     		add	r7, sp, #0
 573              	.LCFI30:
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 576              		.loc 1 845 3
 577 0008 7B68     		ldr	r3, [r7, #4]
 578 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 579 000e 012B     		cmp	r3, #1
 580 0010 01D1     		bne	.L28
 581              		.loc 1 845 3 is_stmt 0 discriminator 1
 582 0012 0223     		movs	r3, #2
 583 0014 21E0     		b	.L29
 584              	.L28:
 585              		.loc 1 845 3 discriminator 2
 586 0016 7B68     		ldr	r3, [r7, #4]
 587 0018 0122     		movs	r2, #1
 588 001a 83F83C20 		strb	r2, [r3, #60]
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
ARM GAS  /tmp/ccYcKIRp.s 			page 26


 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 589              		.loc 1 849 3 is_stmt 1 discriminator 2
 590 001e 7B68     		ldr	r3, [r7, #4]
 591 0020 1B68     		ldr	r3, [r3]
 592 0022 9A68     		ldr	r2, [r3, #8]
 593 0024 7B68     		ldr	r3, [r7, #4]
 594 0026 1B68     		ldr	r3, [r3]
 595 0028 22F00102 		bic	r2, r2, #1
 596 002c 9A60     		str	r2, [r3, #8]
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 597              		.loc 1 852 6 discriminator 2
 598 002e 7B68     		ldr	r3, [r7, #4]
 599 0030 1B68     		ldr	r3, [r3]
 600 0032 9B68     		ldr	r3, [r3, #8]
 601 0034 03F00103 		and	r3, r3, #1
 602              		.loc 1 852 5 discriminator 2
 603 0038 002B     		cmp	r3, #0
 604 003a 09D1     		bne	.L30
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 605              		.loc 1 855 5
 606 003c 7B68     		ldr	r3, [r7, #4]
 607 003e 1B6C     		ldr	r3, [r3, #64]
 608 0040 23F48853 		bic	r3, r3, #4352
 609 0044 23F00103 		bic	r3, r3, #1
 610 0048 43F00102 		orr	r2, r3, #1
 611 004c 7B68     		ldr	r3, [r7, #4]
 612 004e 1A64     		str	r2, [r3, #64]
 613              	.L30:
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 614              		.loc 1 861 3
 615 0050 7B68     		ldr	r3, [r7, #4]
 616 0052 0022     		movs	r2, #0
 617 0054 83F83C20 		strb	r2, [r3, #60]
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 618              		.loc 1 864 10
 619 0058 0023     		movs	r3, #0
 620              	.L29:
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 621              		.loc 1 865 1
 622 005a 1846     		mov	r0, r3
 623 005c 0C37     		adds	r7, r7, #12
 624              	.LCFI31:
 625              		.cfi_def_cfa_offset 4
 626 005e BD46     		mov	sp, r7
 627              	.LCFI32:
ARM GAS  /tmp/ccYcKIRp.s 			page 27


 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0060 5DF8047B 		ldr	r7, [sp], #4
 631              	.LCFI33:
 632              		.cfi_restore 7
 633              		.cfi_def_cfa_offset 0
 634 0064 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE221:
 638              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 639              		.align	1
 640              		.global	HAL_ADC_PollForConversion
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	HAL_ADC_PollForConversion:
 646              	.LFB222:
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 647              		.loc 1 883 1
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 16
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 80B5     		push	{r7, lr}
 652              	.LCFI34:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 84B0     		sub	sp, sp, #16
 657              	.LCFI35:
 658              		.cfi_def_cfa_offset 24
 659 0004 00AF     		add	r7, sp, #0
 660              	.LCFI36:
 661              		.cfi_def_cfa_register 7
 662 0006 7860     		str	r0, [r7, #4]
 663 0008 3960     		str	r1, [r7]
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 664              		.loc 1 884 12
 665 000a 0023     		movs	r3, #0
 666 000c FB60     		str	r3, [r7, #12]
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
ARM GAS  /tmp/ccYcKIRp.s 			page 28


 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 667              		.loc 1 892 7
 668 000e 7B68     		ldr	r3, [r7, #4]
 669 0010 1B68     		ldr	r3, [r3]
 670 0012 9B68     		ldr	r3, [r3, #8]
 671 0014 03F48063 		and	r3, r3, #1024
 672              		.loc 1 892 6
 673 0018 B3F5806F 		cmp	r3, #1024
 674 001c 13D1     		bne	.L32
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 675              		.loc 1 893 7 discriminator 1
 676 001e 7B68     		ldr	r3, [r7, #4]
 677 0020 1B68     		ldr	r3, [r3]
 678 0022 9B68     		ldr	r3, [r3, #8]
 679 0024 03F48073 		and	r3, r3, #256
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 680              		.loc 1 892 57 discriminator 1
 681 0028 B3F5807F 		cmp	r3, #256
 682 002c 0BD1     		bne	.L32
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 683              		.loc 1 896 5
 684 002e 7B68     		ldr	r3, [r7, #4]
 685 0030 1B6C     		ldr	r3, [r3, #64]
 686 0032 43F02002 		orr	r2, r3, #32
 687 0036 7B68     		ldr	r3, [r7, #4]
 688 0038 1A64     		str	r2, [r3, #64]
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 689              		.loc 1 899 5
 690 003a 7B68     		ldr	r3, [r7, #4]
 691 003c 0022     		movs	r2, #0
 692 003e 83F83C20 		strb	r2, [r3, #60]
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 693              		.loc 1 901 12
 694 0042 0123     		movs	r3, #1
 695 0044 63E0     		b	.L33
 696              	.L32:
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 697              		.loc 1 905 15
 698 0046 FFF7FEFF 		bl	HAL_GetTick
 699 004a F860     		str	r0, [r7, #12]
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
ARM GAS  /tmp/ccYcKIRp.s 			page 29


 700              		.loc 1 908 8
 701 004c 21E0     		b	.L35
 702              	.L38:
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 703              		.loc 1 911 7
 704 004e 3B68     		ldr	r3, [r7]
 705 0050 B3F1FF3F 		cmp	r3, #-1
 706 0054 1DD0     		beq	.L35
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 707              		.loc 1 913 9
 708 0056 3B68     		ldr	r3, [r7]
 709 0058 002B     		cmp	r3, #0
 710 005a 07D0     		beq	.L36
 711              		.loc 1 913 31 discriminator 1
 712 005c FFF7FEFF 		bl	HAL_GetTick
 713 0060 0246     		mov	r2, r0
 714              		.loc 1 913 45 discriminator 1
 715 0062 FB68     		ldr	r3, [r7, #12]
 716 0064 D31A     		subs	r3, r2, r3
 717              		.loc 1 913 26 discriminator 1
 718 0066 3A68     		ldr	r2, [r7]
 719 0068 9A42     		cmp	r2, r3
 720 006a 12D2     		bcs	.L35
 721              	.L36:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 722              		.loc 1 916 14
 723 006c 7B68     		ldr	r3, [r7, #4]
 724 006e 1B68     		ldr	r3, [r3]
 725 0070 1B68     		ldr	r3, [r3]
 726 0072 03F00203 		and	r3, r3, #2
 727              		.loc 1 916 11
 728 0076 022B     		cmp	r3, #2
 729 0078 0BD0     		beq	.L35
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 730              		.loc 1 919 11
 731 007a 7B68     		ldr	r3, [r7, #4]
 732 007c 1B6C     		ldr	r3, [r3, #64]
 733 007e 43F00402 		orr	r2, r3, #4
 734 0082 7B68     		ldr	r3, [r7, #4]
 735 0084 1A64     		str	r2, [r3, #64]
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Process unlocked */
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 736              		.loc 1 922 11
 737 0086 7B68     		ldr	r3, [r7, #4]
 738 0088 0022     		movs	r2, #0
 739 008a 83F83C20 		strb	r2, [r3, #60]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           return HAL_TIMEOUT;
 740              		.loc 1 924 18
ARM GAS  /tmp/ccYcKIRp.s 			page 30


 741 008e 0323     		movs	r3, #3
 742 0090 3DE0     		b	.L33
 743              	.L35:
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 744              		.loc 1 908 11
 745 0092 7B68     		ldr	r3, [r7, #4]
 746 0094 1B68     		ldr	r3, [r3]
 747 0096 1B68     		ldr	r3, [r3]
 748 0098 03F00203 		and	r3, r3, #2
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 749              		.loc 1 908 9
 750 009c 022B     		cmp	r3, #2
 751 009e D6D1     		bne	.L38
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 752              		.loc 1 931 3
 753 00a0 7B68     		ldr	r3, [r7, #4]
 754 00a2 1B68     		ldr	r3, [r3]
 755 00a4 6FF01202 		mvn	r2, #18
 756 00a8 1A60     		str	r2, [r3]
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 757              		.loc 1 934 3
 758 00aa 7B68     		ldr	r3, [r7, #4]
 759 00ac 1B6C     		ldr	r3, [r3, #64]
 760 00ae 43F40072 		orr	r2, r3, #512
 761 00b2 7B68     		ldr	r3, [r7, #4]
 762 00b4 1A64     		str	r2, [r3, #64]
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 763              		.loc 1 942 6
 764 00b6 7B68     		ldr	r3, [r7, #4]
 765 00b8 1B68     		ldr	r3, [r3]
 766 00ba 9B68     		ldr	r3, [r3, #8]
 767 00bc 03F04053 		and	r3, r3, #805306368
 768              		.loc 1 942 5
 769 00c0 002B     		cmp	r3, #0
 770 00c2 23D1     		bne	.L39
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 771              		.loc 1 943 17 discriminator 1
 772 00c4 7B68     		ldr	r3, [r7, #4]
 773 00c6 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 774              		.loc 1 942 60 discriminator 1
 775 00c8 002B     		cmp	r3, #0
ARM GAS  /tmp/ccYcKIRp.s 			page 31


 776 00ca 1FD1     		bne	.L39
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 777              		.loc 1 944 7
 778 00cc 7B68     		ldr	r3, [r7, #4]
 779 00ce 1B68     		ldr	r3, [r3]
 780 00d0 DB6A     		ldr	r3, [r3, #44]
 781 00d2 03F47003 		and	r3, r3, #15728640
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 782              		.loc 1 943 60
 783 00d6 002B     		cmp	r3, #0
 784 00d8 06D0     		beq	.L40
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 785              		.loc 1 945 7
 786 00da 7B68     		ldr	r3, [r7, #4]
 787 00dc 1B68     		ldr	r3, [r3]
 788 00de 9B68     		ldr	r3, [r3, #8]
 789 00e0 03F48063 		and	r3, r3, #1024
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 790              		.loc 1 944 56
 791 00e4 002B     		cmp	r3, #0
 792 00e6 11D1     		bne	.L39
 793              	.L40:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 794              		.loc 1 948 5
 795 00e8 7B68     		ldr	r3, [r7, #4]
 796 00ea 1B6C     		ldr	r3, [r3, #64]
 797 00ec 23F48072 		bic	r2, r3, #256
 798 00f0 7B68     		ldr	r3, [r7, #4]
 799 00f2 1A64     		str	r2, [r3, #64]
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800              		.loc 1 950 9
 801 00f4 7B68     		ldr	r3, [r7, #4]
 802 00f6 1B6C     		ldr	r3, [r3, #64]
 803 00f8 03F48053 		and	r3, r3, #4096
 804              		.loc 1 950 8
 805 00fc 002B     		cmp	r3, #0
 806 00fe 05D1     		bne	.L39
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 807              		.loc 1 952 7
 808 0100 7B68     		ldr	r3, [r7, #4]
 809 0102 1B6C     		ldr	r3, [r3, #64]
 810 0104 43F00102 		orr	r2, r3, #1
 811 0108 7B68     		ldr	r3, [r7, #4]
 812 010a 1A64     		str	r2, [r3, #64]
 813              	.L39:
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 814              		.loc 1 957 10
 815 010c 0023     		movs	r3, #0
 816              	.L33:
ARM GAS  /tmp/ccYcKIRp.s 			page 32


 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 817              		.loc 1 958 1
 818 010e 1846     		mov	r0, r3
 819 0110 1037     		adds	r7, r7, #16
 820              	.LCFI37:
 821              		.cfi_def_cfa_offset 8
 822 0112 BD46     		mov	sp, r7
 823              	.LCFI38:
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0114 80BD     		pop	{r7, pc}
 827              		.cfi_endproc
 828              	.LFE222:
 830              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 831              		.align	1
 832              		.global	HAL_ADC_PollForEvent
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	HAL_ADC_PollForEvent:
 838              	.LFB223:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 839              		.loc 1 972 1
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 24
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 80B5     		push	{r7, lr}
 844              	.LCFI39:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 86B0     		sub	sp, sp, #24
 849              	.LCFI40:
 850              		.cfi_def_cfa_offset 32
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI41:
 853              		.cfi_def_cfa_register 7
 854 0006 F860     		str	r0, [r7, #12]
 855 0008 B960     		str	r1, [r7, #8]
 856 000a 7A60     		str	r2, [r7, #4]
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 857              		.loc 1 973 12
 858 000c 0023     		movs	r3, #0
 859 000e 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccYcKIRp.s 			page 33


 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 860              		.loc 1 980 15
 861 0010 FFF7FEFF 		bl	HAL_GetTick
 862 0014 7861     		str	r0, [r7, #20]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 863              		.loc 1 983 8
 864 0016 22E0     		b	.L43
 865              	.L47:
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 866              		.loc 1 986 7
 867 0018 7B68     		ldr	r3, [r7, #4]
 868 001a B3F1FF3F 		cmp	r3, #-1
 869 001e 1ED0     		beq	.L43
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 870              		.loc 1 988 9
 871 0020 7B68     		ldr	r3, [r7, #4]
 872 0022 002B     		cmp	r3, #0
 873 0024 07D0     		beq	.L44
 874              		.loc 1 988 31 discriminator 1
 875 0026 FFF7FEFF 		bl	HAL_GetTick
 876 002a 0246     		mov	r2, r0
 877              		.loc 1 988 45 discriminator 1
 878 002c 7B69     		ldr	r3, [r7, #20]
 879 002e D31A     		subs	r3, r2, r3
 880              		.loc 1 988 26 discriminator 1
 881 0030 7A68     		ldr	r2, [r7, #4]
 882 0032 9A42     		cmp	r2, r3
 883 0034 13D2     		bcs	.L43
 884              	.L44:
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 885              		.loc 1 991 14
 886 0036 FB68     		ldr	r3, [r7, #12]
 887 0038 1B68     		ldr	r3, [r3]
 888 003a 1A68     		ldr	r2, [r3]
 889 003c BB68     		ldr	r3, [r7, #8]
 890 003e 1340     		ands	r3, r3, r2
 891              		.loc 1 991 11
 892 0040 BA68     		ldr	r2, [r7, #8]
 893 0042 9A42     		cmp	r2, r3
 894 0044 0BD0     		beq	.L43
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 895              		.loc 1 994 11
ARM GAS  /tmp/ccYcKIRp.s 			page 34


 896 0046 FB68     		ldr	r3, [r7, #12]
 897 0048 1B6C     		ldr	r3, [r3, #64]
 898 004a 43F00402 		orr	r2, r3, #4
 899 004e FB68     		ldr	r3, [r7, #12]
 900 0050 1A64     		str	r2, [r3, #64]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Process unlocked */
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 901              		.loc 1 997 11
 902 0052 FB68     		ldr	r3, [r7, #12]
 903 0054 0022     		movs	r2, #0
 904 0056 83F83C20 		strb	r2, [r3, #60]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           return HAL_TIMEOUT;
 905              		.loc 1 999 18
 906 005a 0323     		movs	r3, #3
 907 005c 28E0     		b	.L46
 908              	.L43:
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 909              		.loc 1 983 11
 910 005e FB68     		ldr	r3, [r7, #12]
 911 0060 1B68     		ldr	r3, [r3]
 912 0062 1A68     		ldr	r2, [r3]
 913 0064 BB68     		ldr	r3, [r7, #8]
 914 0066 1340     		ands	r3, r3, r2
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 915              		.loc 1 983 9
 916 0068 BA68     		ldr	r2, [r7, #8]
 917 006a 9A42     		cmp	r2, r3
 918 006c D4D1     		bne	.L47
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 919              		.loc 1 1006 5
 920 006e BB68     		ldr	r3, [r7, #8]
 921 0070 012B     		cmp	r3, #1
 922 0072 0BD1     		bne	.L48
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 923              		.loc 1 1009 5
 924 0074 FB68     		ldr	r3, [r7, #12]
 925 0076 1B6C     		ldr	r3, [r3, #64]
 926 0078 43F48032 		orr	r2, r3, #65536
 927 007c FB68     		ldr	r3, [r7, #12]
 928 007e 1A64     		str	r2, [r3, #64]
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 929              		.loc 1 1012 5
 930 0080 FB68     		ldr	r3, [r7, #12]
 931 0082 1B68     		ldr	r3, [r3]
 932 0084 6FF00102 		mvn	r2, #1
ARM GAS  /tmp/ccYcKIRp.s 			page 35


 933 0088 1A60     		str	r2, [r3]
 934 008a 10E0     		b	.L49
 935              	.L48:
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 936              		.loc 1 1018 5
 937 008c FB68     		ldr	r3, [r7, #12]
 938 008e 1B6C     		ldr	r3, [r3, #64]
 939 0090 43F48062 		orr	r2, r3, #1024
 940 0094 FB68     		ldr	r3, [r7, #12]
 941 0096 1A64     		str	r2, [r3, #64]
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 942              		.loc 1 1020 5
 943 0098 FB68     		ldr	r3, [r7, #12]
 944 009a 5B6C     		ldr	r3, [r3, #68]
 945 009c 43F00202 		orr	r2, r3, #2
 946 00a0 FB68     		ldr	r3, [r7, #12]
 947 00a2 5A64     		str	r2, [r3, #68]
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 948              		.loc 1 1023 5
 949 00a4 FB68     		ldr	r3, [r7, #12]
 950 00a6 1B68     		ldr	r3, [r3]
 951 00a8 6FF02002 		mvn	r2, #32
 952 00ac 1A60     		str	r2, [r3]
 953              	.L49:
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 954              		.loc 1 1027 10
 955 00ae 0023     		movs	r3, #0
 956              	.L46:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 957              		.loc 1 1028 1
 958 00b0 1846     		mov	r0, r3
 959 00b2 1837     		adds	r7, r7, #24
 960              	.LCFI42:
 961              		.cfi_def_cfa_offset 8
 962 00b4 BD46     		mov	sp, r7
 963              	.LCFI43:
 964              		.cfi_def_cfa_register 13
 965              		@ sp needed
 966 00b6 80BD     		pop	{r7, pc}
 967              		.cfi_endproc
 968              	.LFE223:
 970              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 971              		.align	1
 972              		.global	HAL_ADC_Start_IT
 973              		.syntax unified
 974              		.thumb
ARM GAS  /tmp/ccYcKIRp.s 			page 36


 975              		.thumb_func
 977              	HAL_ADC_Start_IT:
 978              	.LFB224:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 979              		.loc 1 1038 1
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 16
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984 0000 80B4     		push	{r7}
 985              	.LCFI44:
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 7, -4
 988 0002 85B0     		sub	sp, sp, #20
 989              	.LCFI45:
 990              		.cfi_def_cfa_offset 24
 991 0004 00AF     		add	r7, sp, #0
 992              	.LCFI46:
 993              		.cfi_def_cfa_register 7
 994 0006 7860     		str	r0, [r7, #4]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 995              		.loc 1 1039 17
 996 0008 0023     		movs	r3, #0
 997 000a BB60     		str	r3, [r7, #8]
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 998              		.loc 1 1047 3
 999 000c 7B68     		ldr	r3, [r7, #4]
 1000 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1001 0012 012B     		cmp	r3, #1
 1002 0014 01D1     		bne	.L51
 1003              		.loc 1 1047 3 is_stmt 0 discriminator 1
 1004 0016 0223     		movs	r3, #2
 1005 0018 A1E0     		b	.L52
 1006              	.L51:
 1007              		.loc 1 1047 3 discriminator 2
 1008 001a 7B68     		ldr	r3, [r7, #4]
 1009 001c 0122     		movs	r2, #1
 1010 001e 83F83C20 		strb	r2, [r3, #60]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
ARM GAS  /tmp/ccYcKIRp.s 			page 37


1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1011              		.loc 1 1052 11 is_stmt 1 discriminator 2
 1012 0022 7B68     		ldr	r3, [r7, #4]
 1013 0024 1B68     		ldr	r3, [r3]
 1014              		.loc 1 1052 21 discriminator 2
 1015 0026 9B68     		ldr	r3, [r3, #8]
 1016              		.loc 1 1052 27 discriminator 2
 1017 0028 03F00103 		and	r3, r3, #1
 1018              		.loc 1 1052 5 discriminator 2
 1019 002c 012B     		cmp	r3, #1
 1020 002e 18D0     		beq	.L53
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1021              		.loc 1 1055 5
 1022 0030 7B68     		ldr	r3, [r7, #4]
 1023 0032 1B68     		ldr	r3, [r3]
 1024 0034 9A68     		ldr	r2, [r3, #8]
 1025 0036 7B68     		ldr	r3, [r7, #4]
 1026 0038 1B68     		ldr	r3, [r3]
 1027 003a 42F00102 		orr	r2, r2, #1
 1028 003e 9A60     		str	r2, [r3, #8]
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1029              		.loc 1 1059 53
 1030 0040 4A4B     		ldr	r3, .L62
 1031 0042 1B68     		ldr	r3, [r3]
 1032 0044 4A4A     		ldr	r2, .L62+4
 1033 0046 A2FB0323 		umull	r2, r3, r2, r3
 1034 004a 9A0C     		lsrs	r2, r3, #18
 1035              		.loc 1 1059 34
 1036 004c 1346     		mov	r3, r2
 1037 004e 5B00     		lsls	r3, r3, #1
 1038 0050 1344     		add	r3, r3, r2
 1039              		.loc 1 1059 13
 1040 0052 BB60     		str	r3, [r7, #8]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1041              		.loc 1 1060 10
 1042 0054 02E0     		b	.L54
 1043              	.L55:
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1044              		.loc 1 1062 14
 1045 0056 BB68     		ldr	r3, [r7, #8]
 1046 0058 013B     		subs	r3, r3, #1
 1047 005a BB60     		str	r3, [r7, #8]
 1048              	.L54:
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1049              		.loc 1 1060 19
 1050 005c BB68     		ldr	r3, [r7, #8]
 1051 005e 002B     		cmp	r3, #0
 1052 0060 F9D1     		bne	.L55
 1053              	.L53:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccYcKIRp.s 			page 38


1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1054              		.loc 1 1067 6
 1055 0062 7B68     		ldr	r3, [r7, #4]
 1056 0064 1B68     		ldr	r3, [r3]
 1057 0066 9B68     		ldr	r3, [r3, #8]
 1058 0068 03F00103 		and	r3, r3, #1
 1059              		.loc 1 1067 5
 1060 006c 012B     		cmp	r3, #1
 1061 006e 69D1     		bne	.L56
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1062              		.loc 1 1072 5
 1063 0070 7B68     		ldr	r3, [r7, #4]
 1064 0072 1B6C     		ldr	r3, [r3, #64]
 1065 0074 23F4E063 		bic	r3, r3, #1792
 1066 0078 23F00103 		bic	r3, r3, #1
 1067 007c 43F48072 		orr	r2, r3, #256
 1068 0080 7B68     		ldr	r3, [r7, #4]
 1069 0082 1A64     		str	r2, [r3, #64]
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1070              		.loc 1 1078 9
 1071 0084 7B68     		ldr	r3, [r7, #4]
 1072 0086 1B68     		ldr	r3, [r3]
 1073 0088 5B68     		ldr	r3, [r3, #4]
 1074 008a 03F48063 		and	r3, r3, #1024
 1075              		.loc 1 1078 8
 1076 008e 002B     		cmp	r3, #0
 1077 0090 07D0     		beq	.L57
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1078              		.loc 1 1080 7
 1079 0092 7B68     		ldr	r3, [r7, #4]
 1080 0094 1B6C     		ldr	r3, [r3, #64]
 1081 0096 23F44053 		bic	r3, r3, #12288
 1082 009a 43F48052 		orr	r2, r3, #4096
 1083 009e 7B68     		ldr	r3, [r7, #4]
 1084 00a0 1A64     		str	r2, [r3, #64]
 1085              	.L57:
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1086              		.loc 1 1084 9
 1087 00a2 7B68     		ldr	r3, [r7, #4]
 1088 00a4 1B6C     		ldr	r3, [r3, #64]
 1089 00a6 03F48053 		and	r3, r3, #4096
ARM GAS  /tmp/ccYcKIRp.s 			page 39


 1090              		.loc 1 1084 8
 1091 00aa B3F5805F 		cmp	r3, #4096
 1092 00ae 06D1     		bne	.L58
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1093              		.loc 1 1087 7
 1094 00b0 7B68     		ldr	r3, [r7, #4]
 1095 00b2 5B6C     		ldr	r3, [r3, #68]
 1096 00b4 23F00602 		bic	r2, r3, #6
 1097 00b8 7B68     		ldr	r3, [r7, #4]
 1098 00ba 5A64     		str	r2, [r3, #68]
 1099 00bc 02E0     		b	.L59
 1100              	.L58:
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1101              		.loc 1 1092 7
 1102 00be 7B68     		ldr	r3, [r7, #4]
 1103 00c0 0022     		movs	r2, #0
 1104 00c2 5A64     		str	r2, [r3, #68]
 1105              	.L59:
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1106              		.loc 1 1098 5
 1107 00c4 7B68     		ldr	r3, [r7, #4]
 1108 00c6 0022     		movs	r2, #0
 1109 00c8 83F83C20 		strb	r2, [r3, #60]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1110              		.loc 1 1103 19
 1111 00cc 294B     		ldr	r3, .L62+8
 1112 00ce FB60     		str	r3, [r7, #12]
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1113              		.loc 1 1107 5
 1114 00d0 7B68     		ldr	r3, [r7, #4]
 1115 00d2 1B68     		ldr	r3, [r3]
 1116 00d4 6FF02202 		mvn	r2, #34
 1117 00d8 1A60     		str	r2, [r3]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1118              		.loc 1 1110 5
 1119 00da 7B68     		ldr	r3, [r7, #4]
 1120 00dc 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccYcKIRp.s 			page 40


 1121 00de 5B68     		ldr	r3, [r3, #4]
 1122 00e0 7A68     		ldr	r2, [r7, #4]
 1123 00e2 1268     		ldr	r2, [r2]
 1124 00e4 43F08063 		orr	r3, r3, #67108864
 1125 00e8 43F02003 		orr	r3, r3, #32
 1126 00ec 5360     		str	r3, [r2, #4]
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1127              		.loc 1 1113 8
 1128 00ee FB68     		ldr	r3, [r7, #12]
 1129 00f0 5B68     		ldr	r3, [r3, #4]
 1130 00f2 03F01F03 		and	r3, r3, #31
 1131              		.loc 1 1113 7
 1132 00f6 002B     		cmp	r3, #0
 1133 00f8 0FD1     		bne	.L60
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1134              		.loc 1 1121 17
 1135 00fa 7B68     		ldr	r3, [r7, #4]
 1136 00fc 1B68     		ldr	r3, [r3]
 1137              		.loc 1 1121 27
 1138 00fe 9B68     		ldr	r3, [r3, #8]
 1139              		.loc 1 1121 33
 1140 0100 03F04053 		and	r3, r3, #805306368
 1141              		.loc 1 1121 11
 1142 0104 002B     		cmp	r3, #0
 1143 0106 29D1     		bne	.L61
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1144              		.loc 1 1124 15
 1145 0108 7B68     		ldr	r3, [r7, #4]
 1146 010a 1B68     		ldr	r3, [r3]
 1147              		.loc 1 1124 25
 1148 010c 9A68     		ldr	r2, [r3, #8]
 1149              		.loc 1 1124 15
 1150 010e 7B68     		ldr	r3, [r7, #4]
 1151 0110 1B68     		ldr	r3, [r3]
 1152              		.loc 1 1124 31
 1153 0112 42F08042 		orr	r2, r2, #1073741824
 1154 0116 9A60     		str	r2, [r3, #8]
 1155 0118 20E0     		b	.L61
 1156              	.L60:
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccYcKIRp.s 			page 41


1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1157              		.loc 1 1133 15
 1158 011a 7B68     		ldr	r3, [r7, #4]
 1159 011c 1B68     		ldr	r3, [r3]
 1160              		.loc 1 1133 9
 1161 011e 164A     		ldr	r2, .L62+12
 1162 0120 9342     		cmp	r3, r2
 1163 0122 1BD1     		bne	.L61
 1164              		.loc 1 1133 44 discriminator 1
 1165 0124 7B68     		ldr	r3, [r7, #4]
 1166 0126 1B68     		ldr	r3, [r3]
 1167              		.loc 1 1133 54 discriminator 1
 1168 0128 9B68     		ldr	r3, [r3, #8]
 1169              		.loc 1 1133 60 discriminator 1
 1170 012a 03F04053 		and	r3, r3, #805306368
 1171              		.loc 1 1133 35 discriminator 1
 1172 012e 002B     		cmp	r3, #0
 1173 0130 14D1     		bne	.L61
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1174              		.loc 1 1136 15
 1175 0132 7B68     		ldr	r3, [r7, #4]
 1176 0134 1B68     		ldr	r3, [r3]
 1177              		.loc 1 1136 25
 1178 0136 9A68     		ldr	r2, [r3, #8]
 1179              		.loc 1 1136 15
 1180 0138 7B68     		ldr	r3, [r7, #4]
 1181 013a 1B68     		ldr	r3, [r3]
 1182              		.loc 1 1136 31
 1183 013c 42F08042 		orr	r2, r2, #1073741824
 1184 0140 9A60     		str	r2, [r3, #8]
 1185 0142 0BE0     		b	.L61
 1186              	.L56:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1187              		.loc 1 1143 5
 1188 0144 7B68     		ldr	r3, [r7, #4]
 1189 0146 1B6C     		ldr	r3, [r3, #64]
 1190 0148 43F01002 		orr	r2, r3, #16
 1191 014c 7B68     		ldr	r3, [r7, #4]
 1192 014e 1A64     		str	r2, [r3, #64]
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1193              		.loc 1 1146 5
 1194 0150 7B68     		ldr	r3, [r7, #4]
 1195 0152 5B6C     		ldr	r3, [r3, #68]
 1196 0154 43F00102 		orr	r2, r3, #1
 1197 0158 7B68     		ldr	r3, [r7, #4]
 1198 015a 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/ccYcKIRp.s 			page 42


 1199              	.L61:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1200              		.loc 1 1150 10
 1201 015c 0023     		movs	r3, #0
 1202              	.L52:
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1203              		.loc 1 1151 1
 1204 015e 1846     		mov	r0, r3
 1205 0160 1437     		adds	r7, r7, #20
 1206              	.LCFI47:
 1207              		.cfi_def_cfa_offset 4
 1208 0162 BD46     		mov	sp, r7
 1209              	.LCFI48:
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 0164 5DF8047B 		ldr	r7, [sp], #4
 1213              	.LCFI49:
 1214              		.cfi_restore 7
 1215              		.cfi_def_cfa_offset 0
 1216 0168 7047     		bx	lr
 1217              	.L63:
 1218 016a 00BF     		.align	2
 1219              	.L62:
 1220 016c 00000000 		.word	SystemCoreClock
 1221 0170 83DE1B43 		.word	1125899907
 1222 0174 00230140 		.word	1073816320
 1223 0178 00200140 		.word	1073815552
 1224              		.cfi_endproc
 1225              	.LFE224:
 1227              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1228              		.align	1
 1229              		.global	HAL_ADC_Stop_IT
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1234              	HAL_ADC_Stop_IT:
 1235              	.LFB225:
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1236              		.loc 1 1163 1
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 8
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
ARM GAS  /tmp/ccYcKIRp.s 			page 43


 1241 0000 80B4     		push	{r7}
 1242              	.LCFI50:
 1243              		.cfi_def_cfa_offset 4
 1244              		.cfi_offset 7, -4
 1245 0002 83B0     		sub	sp, sp, #12
 1246              	.LCFI51:
 1247              		.cfi_def_cfa_offset 16
 1248 0004 00AF     		add	r7, sp, #0
 1249              	.LCFI52:
 1250              		.cfi_def_cfa_register 7
 1251 0006 7860     		str	r0, [r7, #4]
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1252              		.loc 1 1168 3
 1253 0008 7B68     		ldr	r3, [r7, #4]
 1254 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1255 000e 012B     		cmp	r3, #1
 1256 0010 01D1     		bne	.L65
 1257              		.loc 1 1168 3 is_stmt 0 discriminator 1
 1258 0012 0223     		movs	r3, #2
 1259 0014 2BE0     		b	.L66
 1260              	.L65:
 1261              		.loc 1 1168 3 discriminator 2
 1262 0016 7B68     		ldr	r3, [r7, #4]
 1263 0018 0122     		movs	r2, #1
 1264 001a 83F83C20 		strb	r2, [r3, #60]
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1265              		.loc 1 1172 3 is_stmt 1 discriminator 2
 1266 001e 7B68     		ldr	r3, [r7, #4]
 1267 0020 1B68     		ldr	r3, [r3]
 1268 0022 9A68     		ldr	r2, [r3, #8]
 1269 0024 7B68     		ldr	r3, [r7, #4]
 1270 0026 1B68     		ldr	r3, [r3]
 1271 0028 22F00102 		bic	r2, r2, #1
 1272 002c 9A60     		str	r2, [r3, #8]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1273              		.loc 1 1175 6 discriminator 2
 1274 002e 7B68     		ldr	r3, [r7, #4]
 1275 0030 1B68     		ldr	r3, [r3]
 1276 0032 9B68     		ldr	r3, [r3, #8]
 1277 0034 03F00103 		and	r3, r3, #1
 1278              		.loc 1 1175 5 discriminator 2
 1279 0038 002B     		cmp	r3, #0
 1280 003a 13D1     		bne	.L67
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1281              		.loc 1 1178 5
 1282 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 44


 1283 003e 1B68     		ldr	r3, [r3]
 1284 0040 5B68     		ldr	r3, [r3, #4]
 1285 0042 7A68     		ldr	r2, [r7, #4]
 1286 0044 1268     		ldr	r2, [r2]
 1287 0046 23F08063 		bic	r3, r3, #67108864
 1288 004a 23F02003 		bic	r3, r3, #32
 1289 004e 5360     		str	r3, [r2, #4]
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1290              		.loc 1 1181 5
 1291 0050 7B68     		ldr	r3, [r7, #4]
 1292 0052 1B6C     		ldr	r3, [r3, #64]
 1293 0054 23F48853 		bic	r3, r3, #4352
 1294 0058 23F00103 		bic	r3, r3, #1
 1295 005c 43F00102 		orr	r2, r3, #1
 1296 0060 7B68     		ldr	r3, [r7, #4]
 1297 0062 1A64     		str	r2, [r3, #64]
 1298              	.L67:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1299              		.loc 1 1187 3
 1300 0064 7B68     		ldr	r3, [r7, #4]
 1301 0066 0022     		movs	r2, #0
 1302 0068 83F83C20 		strb	r2, [r3, #60]
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1303              		.loc 1 1190 10
 1304 006c 0023     		movs	r3, #0
 1305              	.L66:
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1306              		.loc 1 1191 1
 1307 006e 1846     		mov	r0, r3
 1308 0070 0C37     		adds	r7, r7, #12
 1309              	.LCFI53:
 1310              		.cfi_def_cfa_offset 4
 1311 0072 BD46     		mov	sp, r7
 1312              	.LCFI54:
 1313              		.cfi_def_cfa_register 13
 1314              		@ sp needed
 1315 0074 5DF8047B 		ldr	r7, [sp], #4
 1316              	.LCFI55:
 1317              		.cfi_restore 7
 1318              		.cfi_def_cfa_offset 0
 1319 0078 7047     		bx	lr
 1320              		.cfi_endproc
 1321              	.LFE225:
 1323              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1324              		.align	1
 1325              		.global	HAL_ADC_IRQHandler
 1326              		.syntax unified
 1327              		.thumb
ARM GAS  /tmp/ccYcKIRp.s 			page 45


 1328              		.thumb_func
 1330              	HAL_ADC_IRQHandler:
 1331              	.LFB226:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1332              		.loc 1 1200 1
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 24
 1335              		@ frame_needed = 1, uses_anonymous_args = 0
 1336 0000 80B5     		push	{r7, lr}
 1337              	.LCFI56:
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 86B0     		sub	sp, sp, #24
 1342              	.LCFI57:
 1343              		.cfi_def_cfa_offset 32
 1344 0004 00AF     		add	r7, sp, #0
 1345              	.LCFI58:
 1346              		.cfi_def_cfa_register 7
 1347 0006 7860     		str	r0, [r7, #4]
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1348              		.loc 1 1201 12
 1349 0008 0023     		movs	r3, #0
 1350 000a 7B61     		str	r3, [r7, #20]
 1351              		.loc 1 1201 23
 1352 000c 0023     		movs	r3, #0
 1353 000e 3B61     		str	r3, [r7, #16]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp_sr = hadc->Instance->SR;
 1354              		.loc 1 1203 25
 1355 0010 7B68     		ldr	r3, [r7, #4]
 1356 0012 1B68     		ldr	r3, [r3]
 1357              		.loc 1 1203 12
 1358 0014 1B68     		ldr	r3, [r3]
 1359 0016 FB60     		str	r3, [r7, #12]
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
 1360              		.loc 1 1204 26
 1361 0018 7B68     		ldr	r3, [r7, #4]
 1362 001a 1B68     		ldr	r3, [r3]
 1363              		.loc 1 1204 12
 1364 001c 5B68     		ldr	r3, [r3, #4]
 1365 001e BB60     		str	r3, [r7, #8]
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_EOC;
ARM GAS  /tmp/ccYcKIRp.s 			page 46


 1366              		.loc 1 1211 8
 1367 0020 FB68     		ldr	r3, [r7, #12]
 1368 0022 03F00203 		and	r3, r3, #2
 1369 0026 7B61     		str	r3, [r7, #20]
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_EOC;
 1370              		.loc 1 1212 8
 1371 0028 BB68     		ldr	r3, [r7, #8]
 1372 002a 03F02003 		and	r3, r3, #32
 1373 002e 3B61     		str	r3, [r7, #16]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1374              		.loc 1 1214 5
 1375 0030 7B69     		ldr	r3, [r7, #20]
 1376 0032 002B     		cmp	r3, #0
 1377 0034 49D0     		beq	.L69
 1378              		.loc 1 1214 11 discriminator 1
 1379 0036 3B69     		ldr	r3, [r7, #16]
 1380 0038 002B     		cmp	r3, #0
 1381 003a 46D0     		beq	.L69
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1382              		.loc 1 1217 9
 1383 003c 7B68     		ldr	r3, [r7, #4]
 1384 003e 1B6C     		ldr	r3, [r3, #64]
 1385 0040 03F01003 		and	r3, r3, #16
 1386              		.loc 1 1217 8
 1387 0044 002B     		cmp	r3, #0
 1388 0046 05D1     		bne	.L70
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 1389              		.loc 1 1220 7
 1390 0048 7B68     		ldr	r3, [r7, #4]
 1391 004a 1B6C     		ldr	r3, [r3, #64]
 1392 004c 43F40072 		orr	r2, r3, #512
 1393 0050 7B68     		ldr	r3, [r7, #4]
 1394 0052 1A64     		str	r2, [r3, #64]
 1395              	.L70:
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 1396              		.loc 1 1229 8
 1397 0054 7B68     		ldr	r3, [r7, #4]
 1398 0056 1B68     		ldr	r3, [r3]
 1399 0058 9B68     		ldr	r3, [r3, #8]
 1400 005a 03F04053 		and	r3, r3, #805306368
 1401              		.loc 1 1229 7
 1402 005e 002B     		cmp	r3, #0
 1403 0060 2BD1     		bne	.L71
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
ARM GAS  /tmp/ccYcKIRp.s 			page 47


 1404              		.loc 1 1230 19 discriminator 1
 1405 0062 7B68     		ldr	r3, [r7, #4]
 1406 0064 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1407              		.loc 1 1229 62 discriminator 1
 1408 0066 002B     		cmp	r3, #0
 1409 0068 27D1     		bne	.L71
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1410              		.loc 1 1231 9
 1411 006a 7B68     		ldr	r3, [r7, #4]
 1412 006c 1B68     		ldr	r3, [r3]
 1413 006e DB6A     		ldr	r3, [r3, #44]
 1414 0070 03F47003 		and	r3, r3, #15728640
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1415              		.loc 1 1230 62
 1416 0074 002B     		cmp	r3, #0
 1417 0076 06D0     		beq	.L72
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1418              		.loc 1 1232 9
 1419 0078 7B68     		ldr	r3, [r7, #4]
 1420 007a 1B68     		ldr	r3, [r3]
 1421 007c 9B68     		ldr	r3, [r3, #8]
 1422 007e 03F48063 		and	r3, r3, #1024
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1423              		.loc 1 1231 58
 1424 0082 002B     		cmp	r3, #0
 1425 0084 19D1     		bne	.L71
 1426              	.L72:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1427              		.loc 1 1238 7
 1428 0086 7B68     		ldr	r3, [r7, #4]
 1429 0088 1B68     		ldr	r3, [r3]
 1430 008a 5A68     		ldr	r2, [r3, #4]
 1431 008c 7B68     		ldr	r3, [r7, #4]
 1432 008e 1B68     		ldr	r3, [r3]
 1433 0090 22F02002 		bic	r2, r2, #32
 1434 0094 5A60     		str	r2, [r3, #4]
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1435              		.loc 1 1241 7
 1436 0096 7B68     		ldr	r3, [r7, #4]
 1437 0098 1B6C     		ldr	r3, [r3, #64]
 1438 009a 23F48072 		bic	r2, r3, #256
 1439 009e 7B68     		ldr	r3, [r7, #4]
 1440 00a0 1A64     		str	r2, [r3, #64]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1441              		.loc 1 1243 11
 1442 00a2 7B68     		ldr	r3, [r7, #4]
 1443 00a4 1B6C     		ldr	r3, [r3, #64]
 1444 00a6 03F48053 		and	r3, r3, #4096
ARM GAS  /tmp/ccYcKIRp.s 			page 48


 1445              		.loc 1 1243 10
 1446 00aa 002B     		cmp	r3, #0
 1447 00ac 05D1     		bne	.L71
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1448              		.loc 1 1245 9
 1449 00ae 7B68     		ldr	r3, [r7, #4]
 1450 00b0 1B6C     		ldr	r3, [r3, #64]
 1451 00b2 43F00102 		orr	r2, r3, #1
 1452 00b6 7B68     		ldr	r3, [r7, #4]
 1453 00b8 1A64     		str	r2, [r3, #64]
 1454              	.L71:
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 1455              		.loc 1 1253 5
 1456 00ba 7868     		ldr	r0, [r7, #4]
 1457 00bc FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1458              		.loc 1 1257 5
 1459 00c0 7B68     		ldr	r3, [r7, #4]
 1460 00c2 1B68     		ldr	r3, [r3]
 1461 00c4 6FF01202 		mvn	r2, #18
 1462 00c8 1A60     		str	r2, [r3]
 1463              	.L69:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_JEOC;
 1464              		.loc 1 1260 8
 1465 00ca FB68     		ldr	r3, [r7, #12]
 1466 00cc 03F00403 		and	r3, r3, #4
 1467 00d0 7B61     		str	r3, [r7, #20]
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_JEOC;
 1468              		.loc 1 1261 8
 1469 00d2 BB68     		ldr	r3, [r7, #8]
 1470 00d4 03F08003 		and	r3, r3, #128
 1471 00d8 3B61     		str	r3, [r7, #16]
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1472              		.loc 1 1263 5
 1473 00da 7B69     		ldr	r3, [r7, #20]
 1474 00dc 002B     		cmp	r3, #0
 1475 00de 57D0     		beq	.L73
 1476              		.loc 1 1263 11 discriminator 1
 1477 00e0 3B69     		ldr	r3, [r7, #16]
 1478 00e2 002B     		cmp	r3, #0
 1479 00e4 54D0     		beq	.L73
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  /tmp/ccYcKIRp.s 			page 49


1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1480              		.loc 1 1266 9
 1481 00e6 7B68     		ldr	r3, [r7, #4]
 1482 00e8 1B6C     		ldr	r3, [r3, #64]
 1483 00ea 03F01003 		and	r3, r3, #16
 1484              		.loc 1 1266 8
 1485 00ee 002B     		cmp	r3, #0
 1486 00f0 05D1     		bne	.L74
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1487              		.loc 1 1269 7
 1488 00f2 7B68     		ldr	r3, [r7, #4]
 1489 00f4 1B6C     		ldr	r3, [r3, #64]
 1490 00f6 43F40052 		orr	r2, r3, #8192
 1491 00fa 7B68     		ldr	r3, [r7, #4]
 1492 00fc 1A64     		str	r2, [r3, #64]
 1493              	.L74:
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 1494              		.loc 1 1276 8
 1495 00fe 7B68     		ldr	r3, [r7, #4]
 1496 0100 1B68     		ldr	r3, [r3]
 1497 0102 9B68     		ldr	r3, [r3, #8]
 1498 0104 03F44013 		and	r3, r3, #3145728
 1499              		.loc 1 1276 7
 1500 0108 002B     		cmp	r3, #0
 1501 010a 39D1     		bne	.L75
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1502              		.loc 1 1277 9 discriminator 1
 1503 010c 7B68     		ldr	r3, [r7, #4]
 1504 010e 1B68     		ldr	r3, [r3]
 1505 0110 9B6B     		ldr	r3, [r3, #56]
 1506 0112 03F44013 		and	r3, r3, #3145728
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1507              		.loc 1 1276 64 discriminator 1
 1508 0116 002B     		cmp	r3, #0
 1509 0118 06D0     		beq	.L76
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1510              		.loc 1 1278 9
 1511 011a 7B68     		ldr	r3, [r7, #4]
 1512 011c 1B68     		ldr	r3, [r3]
 1513 011e 9B68     		ldr	r3, [r3, #8]
 1514 0120 03F48063 		and	r3, r3, #1024
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1515              		.loc 1 1277 60
 1516 0124 002B     		cmp	r3, #0
 1517 0126 2BD1     		bne	.L75
 1518              	.L76:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1519              		.loc 1 1279 9
 1520 0128 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 50


 1521 012a 1B68     		ldr	r3, [r3]
 1522 012c 5B68     		ldr	r3, [r3, #4]
 1523 012e 03F48063 		and	r3, r3, #1024
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1524              		.loc 1 1278 64
 1525 0132 002B     		cmp	r3, #0
 1526 0134 24D1     		bne	.L75
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1527              		.loc 1 1280 10
 1528 0136 7B68     		ldr	r3, [r7, #4]
 1529 0138 1B68     		ldr	r3, [r3]
 1530 013a 9B68     		ldr	r3, [r3, #8]
 1531 013c 03F04053 		and	r3, r3, #805306368
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1532              		.loc 1 1279 60
 1533 0140 002B     		cmp	r3, #0
 1534 0142 1DD1     		bne	.L75
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1535              		.loc 1 1281 20
 1536 0144 7B68     		ldr	r3, [r7, #4]
 1537 0146 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1538              		.loc 1 1280 52
 1539 0148 002B     		cmp	r3, #0
 1540 014a 19D1     		bne	.L75
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1541              		.loc 1 1284 7
 1542 014c 7B68     		ldr	r3, [r7, #4]
 1543 014e 1B68     		ldr	r3, [r3]
 1544 0150 5A68     		ldr	r2, [r3, #4]
 1545 0152 7B68     		ldr	r3, [r7, #4]
 1546 0154 1B68     		ldr	r3, [r3]
 1547 0156 22F08002 		bic	r2, r2, #128
 1548 015a 5A60     		str	r2, [r3, #4]
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 1549              		.loc 1 1287 7
 1550 015c 7B68     		ldr	r3, [r7, #4]
 1551 015e 1B6C     		ldr	r3, [r3, #64]
 1552 0160 23F48052 		bic	r2, r3, #4096
 1553 0164 7B68     		ldr	r3, [r7, #4]
 1554 0166 1A64     		str	r2, [r3, #64]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1555              		.loc 1 1289 11
 1556 0168 7B68     		ldr	r3, [r7, #4]
 1557 016a 1B6C     		ldr	r3, [r3, #64]
 1558 016c 03F48073 		and	r3, r3, #256
 1559              		.loc 1 1289 10
 1560 0170 002B     		cmp	r3, #0
 1561 0172 05D1     		bne	.L75
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1562              		.loc 1 1291 9
ARM GAS  /tmp/ccYcKIRp.s 			page 51


 1563 0174 7B68     		ldr	r3, [r7, #4]
 1564 0176 1B6C     		ldr	r3, [r3, #64]
 1565 0178 43F00102 		orr	r2, r3, #1
 1566 017c 7B68     		ldr	r3, [r7, #4]
 1567 017e 1A64     		str	r2, [r3, #64]
 1568              	.L75:
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
 1569              		.loc 1 1300 7
 1570 0180 7868     		ldr	r0, [r7, #4]
 1571 0182 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 1572              		.loc 1 1304 5
 1573 0186 7B68     		ldr	r3, [r7, #4]
 1574 0188 1B68     		ldr	r3, [r3]
 1575 018a 6FF00C02 		mvn	r2, #12
 1576 018e 1A60     		str	r2, [r3]
 1577              	.L73:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_AWD;
 1578              		.loc 1 1307 8
 1579 0190 FB68     		ldr	r3, [r7, #12]
 1580 0192 03F00103 		and	r3, r3, #1
 1581 0196 7B61     		str	r3, [r7, #20]
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_AWD;
 1582              		.loc 1 1308 8
 1583 0198 BB68     		ldr	r3, [r7, #8]
 1584 019a 03F04003 		and	r3, r3, #64
 1585 019e 3B61     		str	r3, [r7, #16]
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1586              		.loc 1 1310 5
 1587 01a0 7B69     		ldr	r3, [r7, #20]
 1588 01a2 002B     		cmp	r3, #0
 1589 01a4 17D0     		beq	.L77
 1590              		.loc 1 1310 11 discriminator 1
 1591 01a6 3B69     		ldr	r3, [r7, #16]
 1592 01a8 002B     		cmp	r3, #0
 1593 01aa 14D0     		beq	.L77
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 1594              		.loc 1 1312 8
 1595 01ac 7B68     		ldr	r3, [r7, #4]
 1596 01ae 1B68     		ldr	r3, [r3]
 1597 01b0 1B68     		ldr	r3, [r3]
 1598 01b2 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccYcKIRp.s 			page 52


 1599              		.loc 1 1312 7
 1600 01b6 012B     		cmp	r3, #1
 1601 01b8 0DD1     		bne	.L77
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1602              		.loc 1 1315 7
 1603 01ba 7B68     		ldr	r3, [r7, #4]
 1604 01bc 1B6C     		ldr	r3, [r3, #64]
 1605 01be 43F48032 		orr	r2, r3, #65536
 1606 01c2 7B68     		ldr	r3, [r7, #4]
 1607 01c4 1A64     		str	r2, [r3, #64]
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 1608              		.loc 1 1321 7
 1609 01c6 7868     		ldr	r0, [r7, #4]
 1610 01c8 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1611              		.loc 1 1325 7
 1612 01cc 7B68     		ldr	r3, [r7, #4]
 1613 01ce 1B68     		ldr	r3, [r3]
 1614 01d0 6FF00102 		mvn	r2, #1
 1615 01d4 1A60     		str	r2, [r3]
 1616              	.L77:
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = tmp_sr & ADC_FLAG_OVR;
 1617              		.loc 1 1329 8
 1618 01d6 FB68     		ldr	r3, [r7, #12]
 1619 01d8 03F02003 		and	r3, r3, #32
 1620 01dc 7B61     		str	r3, [r7, #20]
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = tmp_cr1 & ADC_IT_OVR;
 1621              		.loc 1 1330 8
 1622 01de BB68     		ldr	r3, [r7, #8]
 1623 01e0 03F08063 		and	r3, r3, #67108864
 1624 01e4 3B61     		str	r3, [r7, #16]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1625              		.loc 1 1332 5
 1626 01e6 7B69     		ldr	r3, [r7, #20]
 1627 01e8 002B     		cmp	r3, #0
 1628 01ea 15D0     		beq	.L79
 1629              		.loc 1 1332 11 discriminator 1
 1630 01ec 3B69     		ldr	r3, [r7, #16]
 1631 01ee 002B     		cmp	r3, #0
 1632 01f0 12D0     		beq	.L79
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
ARM GAS  /tmp/ccYcKIRp.s 			page 53


1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1633              		.loc 1 1339 5
 1634 01f2 7B68     		ldr	r3, [r7, #4]
 1635 01f4 5B6C     		ldr	r3, [r3, #68]
 1636 01f6 43F00202 		orr	r2, r3, #2
 1637 01fa 7B68     		ldr	r3, [r7, #4]
 1638 01fc 5A64     		str	r2, [r3, #68]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1639              		.loc 1 1342 5
 1640 01fe 7B68     		ldr	r3, [r7, #4]
 1641 0200 1B68     		ldr	r3, [r3]
 1642 0202 6FF02002 		mvn	r2, #32
 1643 0206 1A60     		str	r2, [r3]
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
 1644              		.loc 1 1348 7
 1645 0208 7868     		ldr	r0, [r7, #4]
 1646 020a FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1647              		.loc 1 1352 5
 1648 020e 7B68     		ldr	r3, [r7, #4]
 1649 0210 1B68     		ldr	r3, [r3]
 1650 0212 6FF02002 		mvn	r2, #32
 1651 0216 1A60     		str	r2, [r3]
 1652              	.L79:
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1653              		.loc 1 1354 1
 1654 0218 00BF     		nop
 1655 021a 1837     		adds	r7, r7, #24
 1656              	.LCFI59:
 1657              		.cfi_def_cfa_offset 8
 1658 021c BD46     		mov	sp, r7
 1659              	.LCFI60:
 1660              		.cfi_def_cfa_register 13
 1661              		@ sp needed
 1662 021e 80BD     		pop	{r7, pc}
 1663              		.cfi_endproc
 1664              	.LFE226:
 1666              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1667              		.align	1
 1668              		.global	HAL_ADC_Start_DMA
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
ARM GAS  /tmp/ccYcKIRp.s 			page 54


 1673              	HAL_ADC_Start_DMA:
 1674              	.LFB227:
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1675              		.loc 1 1365 1
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 24
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679 0000 80B5     		push	{r7, lr}
 1680              	.LCFI61:
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 86B0     		sub	sp, sp, #24
 1685              	.LCFI62:
 1686              		.cfi_def_cfa_offset 32
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI63:
 1689              		.cfi_def_cfa_register 7
 1690 0006 F860     		str	r0, [r7, #12]
 1691 0008 B960     		str	r1, [r7, #8]
 1692 000a 7A60     		str	r2, [r7, #4]
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1693              		.loc 1 1366 17
 1694 000c 0023     		movs	r3, #0
 1695 000e 3B61     		str	r3, [r7, #16]
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1696              		.loc 1 1374 3
 1697 0010 FB68     		ldr	r3, [r7, #12]
 1698 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1699 0016 012B     		cmp	r3, #1
 1700 0018 01D1     		bne	.L81
 1701              		.loc 1 1374 3 is_stmt 0 discriminator 1
 1702 001a 0223     		movs	r3, #2
 1703 001c CEE0     		b	.L82
 1704              	.L81:
 1705              		.loc 1 1374 3 discriminator 2
 1706 001e FB68     		ldr	r3, [r7, #12]
 1707 0020 0122     		movs	r2, #1
 1708 0022 83F83C20 		strb	r2, [r3, #60]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccYcKIRp.s 			page 55


1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1709              		.loc 1 1379 11 is_stmt 1 discriminator 2
 1710 0026 FB68     		ldr	r3, [r7, #12]
 1711 0028 1B68     		ldr	r3, [r3]
 1712              		.loc 1 1379 21 discriminator 2
 1713 002a 9B68     		ldr	r3, [r3, #8]
 1714              		.loc 1 1379 27 discriminator 2
 1715 002c 03F00103 		and	r3, r3, #1
 1716              		.loc 1 1379 5 discriminator 2
 1717 0030 012B     		cmp	r3, #1
 1718 0032 18D0     		beq	.L83
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1719              		.loc 1 1382 5
 1720 0034 FB68     		ldr	r3, [r7, #12]
 1721 0036 1B68     		ldr	r3, [r3]
 1722 0038 9A68     		ldr	r2, [r3, #8]
 1723 003a FB68     		ldr	r3, [r7, #12]
 1724 003c 1B68     		ldr	r3, [r3]
 1725 003e 42F00102 		orr	r2, r2, #1
 1726 0042 9A60     		str	r2, [r3, #8]
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1727              		.loc 1 1386 53
 1728 0044 5F4B     		ldr	r3, .L93
 1729 0046 1B68     		ldr	r3, [r3]
 1730 0048 5F4A     		ldr	r2, .L93+4
 1731 004a A2FB0323 		umull	r2, r3, r2, r3
 1732 004e 9A0C     		lsrs	r2, r3, #18
 1733              		.loc 1 1386 34
 1734 0050 1346     		mov	r3, r2
 1735 0052 5B00     		lsls	r3, r3, #1
 1736 0054 1344     		add	r3, r3, r2
 1737              		.loc 1 1386 13
 1738 0056 3B61     		str	r3, [r7, #16]
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1739              		.loc 1 1387 10
 1740 0058 02E0     		b	.L84
 1741              	.L85:
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1742              		.loc 1 1389 14
 1743 005a 3B69     		ldr	r3, [r7, #16]
 1744 005c 013B     		subs	r3, r3, #1
 1745 005e 3B61     		str	r3, [r7, #16]
 1746              	.L84:
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1747              		.loc 1 1387 19
 1748 0060 3B69     		ldr	r3, [r7, #16]
 1749 0062 002B     		cmp	r3, #0
 1750 0064 F9D1     		bne	.L85
ARM GAS  /tmp/ccYcKIRp.s 			page 56


 1751              	.L83:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC DMA Mode                                                     */
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* - disable the DMA Mode if it is already enabled                        */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 1752              		.loc 1 1395 11
 1753 0066 FB68     		ldr	r3, [r7, #12]
 1754 0068 1B68     		ldr	r3, [r3]
 1755              		.loc 1 1395 21
 1756 006a 9B68     		ldr	r3, [r3, #8]
 1757              		.loc 1 1395 27
 1758 006c 03F48073 		and	r3, r3, #256
 1759              		.loc 1 1395 5
 1760 0070 B3F5807F 		cmp	r3, #256
 1761 0074 07D1     		bne	.L86
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1762              		.loc 1 1397 5
 1763 0076 FB68     		ldr	r3, [r7, #12]
 1764 0078 1B68     		ldr	r3, [r3]
 1765 007a 9A68     		ldr	r2, [r3, #8]
 1766 007c FB68     		ldr	r3, [r7, #12]
 1767 007e 1B68     		ldr	r3, [r3]
 1768 0080 22F48072 		bic	r2, r2, #256
 1769 0084 9A60     		str	r2, [r3, #8]
 1770              	.L86:
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1771              		.loc 1 1401 6
 1772 0086 FB68     		ldr	r3, [r7, #12]
 1773 0088 1B68     		ldr	r3, [r3]
 1774 008a 9B68     		ldr	r3, [r3, #8]
 1775 008c 03F00103 		and	r3, r3, #1
 1776              		.loc 1 1401 5
 1777 0090 012B     		cmp	r3, #1
 1778 0092 40F08680 		bne	.L87
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1779              		.loc 1 1406 5
 1780 0096 FB68     		ldr	r3, [r7, #12]
 1781 0098 1B6C     		ldr	r3, [r3, #64]
 1782 009a 23F4E063 		bic	r3, r3, #1792
 1783 009e 23F00103 		bic	r3, r3, #1
 1784 00a2 43F48072 		orr	r2, r3, #256
 1785 00a6 FB68     		ldr	r3, [r7, #12]
 1786 00a8 1A64     		str	r2, [r3, #64]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
ARM GAS  /tmp/ccYcKIRp.s 			page 57


1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1787              		.loc 1 1412 9
 1788 00aa FB68     		ldr	r3, [r7, #12]
 1789 00ac 1B68     		ldr	r3, [r3]
 1790 00ae 5B68     		ldr	r3, [r3, #4]
 1791 00b0 03F48063 		and	r3, r3, #1024
 1792              		.loc 1 1412 8
 1793 00b4 002B     		cmp	r3, #0
 1794 00b6 07D0     		beq	.L88
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1795              		.loc 1 1414 7
 1796 00b8 FB68     		ldr	r3, [r7, #12]
 1797 00ba 1B6C     		ldr	r3, [r3, #64]
 1798 00bc 23F44053 		bic	r3, r3, #12288
 1799 00c0 43F48052 		orr	r2, r3, #4096
 1800 00c4 FB68     		ldr	r3, [r7, #12]
 1801 00c6 1A64     		str	r2, [r3, #64]
 1802              	.L88:
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1803              		.loc 1 1418 9
 1804 00c8 FB68     		ldr	r3, [r7, #12]
 1805 00ca 1B6C     		ldr	r3, [r3, #64]
 1806 00cc 03F48053 		and	r3, r3, #4096
 1807              		.loc 1 1418 8
 1808 00d0 B3F5805F 		cmp	r3, #4096
 1809 00d4 06D1     		bne	.L89
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1810              		.loc 1 1421 7
 1811 00d6 FB68     		ldr	r3, [r7, #12]
 1812 00d8 5B6C     		ldr	r3, [r3, #68]
 1813 00da 23F00602 		bic	r2, r3, #6
 1814 00de FB68     		ldr	r3, [r7, #12]
 1815 00e0 5A64     		str	r2, [r3, #68]
 1816 00e2 02E0     		b	.L90
 1817              	.L89:
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1818              		.loc 1 1426 7
 1819 00e4 FB68     		ldr	r3, [r7, #12]
 1820 00e6 0022     		movs	r2, #0
 1821 00e8 5A64     		str	r2, [r3, #68]
 1822              	.L90:
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
ARM GAS  /tmp/ccYcKIRp.s 			page 58


1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
 1823              		.loc 1 1432 5
 1824 00ea FB68     		ldr	r3, [r7, #12]
 1825 00ec 0022     		movs	r2, #0
 1826 00ee 83F83C20 		strb	r2, [r3, #60]
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1827              		.loc 1 1437 19
 1828 00f2 364B     		ldr	r3, .L93+8
 1829 00f4 7B61     		str	r3, [r7, #20]
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1830              		.loc 1 1440 9
 1831 00f6 FB68     		ldr	r3, [r7, #12]
 1832 00f8 9B6B     		ldr	r3, [r3, #56]
 1833              		.loc 1 1440 40
 1834 00fa 354A     		ldr	r2, .L93+12
 1835 00fc DA63     		str	r2, [r3, #60]
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1836              		.loc 1 1443 9
 1837 00fe FB68     		ldr	r3, [r7, #12]
 1838 0100 9B6B     		ldr	r3, [r3, #56]
 1839              		.loc 1 1443 44
 1840 0102 344A     		ldr	r2, .L93+16
 1841 0104 1A64     		str	r2, [r3, #64]
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1842              		.loc 1 1446 9
 1843 0106 FB68     		ldr	r3, [r7, #12]
 1844 0108 9B6B     		ldr	r3, [r3, #56]
 1845              		.loc 1 1446 41
 1846 010a 334A     		ldr	r2, .L93+20
 1847 010c DA64     		str	r2, [r3, #76]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1848              		.loc 1 1454 5
 1849 010e FB68     		ldr	r3, [r7, #12]
 1850 0110 1B68     		ldr	r3, [r3]
 1851 0112 6FF02202 		mvn	r2, #34
 1852 0116 1A60     		str	r2, [r3]
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1853              		.loc 1 1457 5
ARM GAS  /tmp/ccYcKIRp.s 			page 59


 1854 0118 FB68     		ldr	r3, [r7, #12]
 1855 011a 1B68     		ldr	r3, [r3]
 1856 011c 5A68     		ldr	r2, [r3, #4]
 1857 011e FB68     		ldr	r3, [r7, #12]
 1858 0120 1B68     		ldr	r3, [r3]
 1859 0122 42F08062 		orr	r2, r2, #67108864
 1860 0126 5A60     		str	r2, [r3, #4]
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
 1861              		.loc 1 1460 9
 1862 0128 FB68     		ldr	r3, [r7, #12]
 1863 012a 1B68     		ldr	r3, [r3]
 1864              		.loc 1 1460 19
 1865 012c 9A68     		ldr	r2, [r3, #8]
 1866              		.loc 1 1460 9
 1867 012e FB68     		ldr	r3, [r7, #12]
 1868 0130 1B68     		ldr	r3, [r3]
 1869              		.loc 1 1460 25
 1870 0132 42F48072 		orr	r2, r2, #256
 1871 0136 9A60     		str	r2, [r3, #8]
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1872              		.loc 1 1463 5
 1873 0138 FB68     		ldr	r3, [r7, #12]
 1874 013a 986B     		ldr	r0, [r3, #56]
 1875              		.loc 1 1463 55
 1876 013c FB68     		ldr	r3, [r7, #12]
 1877 013e 1B68     		ldr	r3, [r3]
 1878              		.loc 1 1463 50
 1879 0140 4C33     		adds	r3, r3, #76
 1880              		.loc 1 1463 5
 1881 0142 1946     		mov	r1, r3
 1882 0144 BA68     		ldr	r2, [r7, #8]
 1883 0146 7B68     		ldr	r3, [r7, #4]
 1884 0148 FFF7FEFF 		bl	HAL_DMA_Start_IT
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1885              		.loc 1 1466 8
 1886 014c 7B69     		ldr	r3, [r7, #20]
 1887 014e 5B68     		ldr	r3, [r3, #4]
 1888 0150 03F01F03 		and	r3, r3, #31
 1889              		.loc 1 1466 7
 1890 0154 002B     		cmp	r3, #0
 1891 0156 0FD1     		bne	.L91
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                                   || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) <
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* if no external trigger present enable software conversion of regular channels */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1892              		.loc 1 1474 17
 1893 0158 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccYcKIRp.s 			page 60


 1894 015a 1B68     		ldr	r3, [r3]
 1895              		.loc 1 1474 27
 1896 015c 9B68     		ldr	r3, [r3, #8]
 1897              		.loc 1 1474 33
 1898 015e 03F04053 		and	r3, r3, #805306368
 1899              		.loc 1 1474 11
 1900 0162 002B     		cmp	r3, #0
 1901 0164 29D1     		bne	.L92
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* Enable the selected ADC software conversion for regular group */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1902              		.loc 1 1477 15
 1903 0166 FB68     		ldr	r3, [r7, #12]
 1904 0168 1B68     		ldr	r3, [r3]
 1905              		.loc 1 1477 25
 1906 016a 9A68     		ldr	r2, [r3, #8]
 1907              		.loc 1 1477 15
 1908 016c FB68     		ldr	r3, [r7, #12]
 1909 016e 1B68     		ldr	r3, [r3]
 1910              		.loc 1 1477 31
 1911 0170 42F08042 		orr	r2, r2, #1073741824
 1912 0174 9A60     		str	r2, [r3, #8]
 1913 0176 20E0     		b	.L92
 1914              	.L91:
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if defined(ADC2) && defined(ADC3)
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* ADC2 || ADC3 */
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1915              		.loc 1 1486 15
 1916 0178 FB68     		ldr	r3, [r7, #12]
 1917 017a 1B68     		ldr	r3, [r3]
 1918              		.loc 1 1486 9
 1919 017c 174A     		ldr	r2, .L93+24
 1920 017e 9342     		cmp	r3, r2
 1921 0180 1BD1     		bne	.L92
 1922              		.loc 1 1486 44 discriminator 1
 1923 0182 FB68     		ldr	r3, [r7, #12]
 1924 0184 1B68     		ldr	r3, [r3]
 1925              		.loc 1 1486 54 discriminator 1
 1926 0186 9B68     		ldr	r3, [r3, #8]
 1927              		.loc 1 1486 60 discriminator 1
 1928 0188 03F04053 		and	r3, r3, #805306368
 1929              		.loc 1 1486 35 discriminator 1
 1930 018c 002B     		cmp	r3, #0
 1931 018e 14D1     		bne	.L92
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1932              		.loc 1 1489 15
 1933 0190 FB68     		ldr	r3, [r7, #12]
 1934 0192 1B68     		ldr	r3, [r3]
 1935              		.loc 1 1489 25
ARM GAS  /tmp/ccYcKIRp.s 			page 61


 1936 0194 9A68     		ldr	r2, [r3, #8]
 1937              		.loc 1 1489 15
 1938 0196 FB68     		ldr	r3, [r7, #12]
 1939 0198 1B68     		ldr	r3, [r3]
 1940              		.loc 1 1489 31
 1941 019a 42F08042 		orr	r2, r2, #1073741824
 1942 019e 9A60     		str	r2, [r3, #8]
 1943 01a0 0BE0     		b	.L92
 1944              	.L87:
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1945              		.loc 1 1496 5
 1946 01a2 FB68     		ldr	r3, [r7, #12]
 1947 01a4 1B6C     		ldr	r3, [r3, #64]
 1948 01a6 43F01002 		orr	r2, r3, #16
 1949 01aa FB68     		ldr	r3, [r7, #12]
 1950 01ac 1A64     		str	r2, [r3, #64]
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to ADC IP internal error */
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1951              		.loc 1 1499 5
 1952 01ae FB68     		ldr	r3, [r7, #12]
 1953 01b0 5B6C     		ldr	r3, [r3, #68]
 1954 01b2 43F00102 		orr	r2, r3, #1
 1955 01b6 FB68     		ldr	r3, [r7, #12]
 1956 01b8 5A64     		str	r2, [r3, #68]
 1957              	.L92:
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1958              		.loc 1 1503 10
 1959 01ba 0023     		movs	r3, #0
 1960              	.L82:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1961              		.loc 1 1504 1
 1962 01bc 1846     		mov	r0, r3
 1963 01be 1837     		adds	r7, r7, #24
 1964              	.LCFI64:
 1965              		.cfi_def_cfa_offset 8
 1966 01c0 BD46     		mov	sp, r7
 1967              	.LCFI65:
 1968              		.cfi_def_cfa_register 13
 1969              		@ sp needed
 1970 01c2 80BD     		pop	{r7, pc}
 1971              	.L94:
 1972              		.align	2
 1973              	.L93:
 1974 01c4 00000000 		.word	SystemCoreClock
 1975 01c8 83DE1B43 		.word	1125899907
 1976 01cc 00230140 		.word	1073816320
 1977 01d0 00000000 		.word	ADC_DMAConvCplt
ARM GAS  /tmp/ccYcKIRp.s 			page 62


 1978 01d4 00000000 		.word	ADC_DMAHalfConvCplt
 1979 01d8 00000000 		.word	ADC_DMAError
 1980 01dc 00200140 		.word	1073815552
 1981              		.cfi_endproc
 1982              	.LFE227:
 1984              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1985              		.align	1
 1986              		.global	HAL_ADC_Stop_DMA
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1991              	HAL_ADC_Stop_DMA:
 1992              	.LFB228:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1993              		.loc 1 1513 1
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 16
 1996              		@ frame_needed = 1, uses_anonymous_args = 0
 1997 0000 80B5     		push	{r7, lr}
 1998              	.LCFI66:
 1999              		.cfi_def_cfa_offset 8
 2000              		.cfi_offset 7, -8
 2001              		.cfi_offset 14, -4
 2002 0002 84B0     		sub	sp, sp, #16
 2003              	.LCFI67:
 2004              		.cfi_def_cfa_offset 24
 2005 0004 00AF     		add	r7, sp, #0
 2006              	.LCFI68:
 2007              		.cfi_def_cfa_register 7
 2008 0006 7860     		str	r0, [r7, #4]
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2009              		.loc 1 1514 21
 2010 0008 0023     		movs	r3, #0
 2011 000a FB73     		strb	r3, [r7, #15]
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2012              		.loc 1 1520 3
 2013 000c 7B68     		ldr	r3, [r7, #4]
 2014 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2015 0012 012B     		cmp	r3, #1
 2016 0014 01D1     		bne	.L96
 2017              		.loc 1 1520 3 is_stmt 0 discriminator 1
 2018 0016 0223     		movs	r3, #2
 2019 0018 48E0     		b	.L97
 2020              	.L96:
ARM GAS  /tmp/ccYcKIRp.s 			page 63


 2021              		.loc 1 1520 3 discriminator 2
 2022 001a 7B68     		ldr	r3, [r7, #4]
 2023 001c 0122     		movs	r2, #1
 2024 001e 83F83C20 		strb	r2, [r3, #60]
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 2025              		.loc 1 1524 3 is_stmt 1 discriminator 2
 2026 0022 7B68     		ldr	r3, [r7, #4]
 2027 0024 1B68     		ldr	r3, [r3]
 2028 0026 9A68     		ldr	r2, [r3, #8]
 2029 0028 7B68     		ldr	r3, [r7, #4]
 2030 002a 1B68     		ldr	r3, [r3]
 2031 002c 22F00102 		bic	r2, r2, #1
 2032 0030 9A60     		str	r2, [r3, #8]
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 2033              		.loc 1 1527 6 discriminator 2
 2034 0032 7B68     		ldr	r3, [r7, #4]
 2035 0034 1B68     		ldr	r3, [r3]
 2036 0036 9B68     		ldr	r3, [r3, #8]
 2037 0038 03F00103 		and	r3, r3, #1
 2038              		.loc 1 1527 5 discriminator 2
 2039 003c 002B     		cmp	r3, #0
 2040 003e 30D1     		bne	.L98
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 2041              		.loc 1 1530 9
 2042 0040 7B68     		ldr	r3, [r7, #4]
 2043 0042 1B68     		ldr	r3, [r3]
 2044              		.loc 1 1530 19
 2045 0044 9A68     		ldr	r2, [r3, #8]
 2046              		.loc 1 1530 9
 2047 0046 7B68     		ldr	r3, [r7, #4]
 2048 0048 1B68     		ldr	r3, [r3]
 2049              		.loc 1 1530 25
 2050 004a 22F48072 		bic	r2, r2, #256
 2051 004e 9A60     		str	r2, [r3, #8]
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
 2052              		.loc 1 1534 13
 2053 0050 7B68     		ldr	r3, [r7, #4]
 2054 0052 9B6B     		ldr	r3, [r3, #56]
 2055              		.loc 1 1534 25
 2056 0054 93F83530 		ldrb	r3, [r3, #53]
 2057 0058 DBB2     		uxtb	r3, r3
 2058              		.loc 1 1534 8
 2059 005a 022B     		cmp	r3, #2
 2060 005c 0FD1     		bne	.L99
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2061              		.loc 1 1536 24
ARM GAS  /tmp/ccYcKIRp.s 			page 64


 2062 005e 7B68     		ldr	r3, [r7, #4]
 2063 0060 9B6B     		ldr	r3, [r3, #56]
 2064 0062 1846     		mov	r0, r3
 2065 0064 FFF7FEFF 		bl	HAL_DMA_Abort
 2066 0068 0346     		mov	r3, r0
 2067 006a FB73     		strb	r3, [r7, #15]
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
 2068              		.loc 1 1539 10
 2069 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2070 006e 002B     		cmp	r3, #0
 2071 0070 05D0     		beq	.L99
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to error */
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2072              		.loc 1 1542 9
 2073 0072 7B68     		ldr	r3, [r7, #4]
 2074 0074 1B6C     		ldr	r3, [r3, #64]
 2075 0076 43F04002 		orr	r2, r3, #64
 2076 007a 7B68     		ldr	r3, [r7, #4]
 2077 007c 1A64     		str	r2, [r3, #64]
 2078              	.L99:
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2079              		.loc 1 1547 5
 2080 007e 7B68     		ldr	r3, [r7, #4]
 2081 0080 1B68     		ldr	r3, [r3]
 2082 0082 5A68     		ldr	r2, [r3, #4]
 2083 0084 7B68     		ldr	r3, [r7, #4]
 2084 0086 1B68     		ldr	r3, [r3]
 2085 0088 22F08062 		bic	r2, r2, #67108864
 2086 008c 5A60     		str	r2, [r3, #4]
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 2087              		.loc 1 1550 5
 2088 008e 7B68     		ldr	r3, [r7, #4]
 2089 0090 1B6C     		ldr	r3, [r3, #64]
 2090 0092 23F48853 		bic	r3, r3, #4352
 2091 0096 23F00103 		bic	r3, r3, #1
 2092 009a 43F00102 		orr	r2, r3, #1
 2093 009e 7B68     		ldr	r3, [r7, #4]
 2094 00a0 1A64     		str	r2, [r3, #64]
 2095              	.L98:
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2096              		.loc 1 1556 3
 2097 00a2 7B68     		ldr	r3, [r7, #4]
 2098 00a4 0022     		movs	r2, #0
ARM GAS  /tmp/ccYcKIRp.s 			page 65


 2099 00a6 83F83C20 		strb	r2, [r3, #60]
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 2100              		.loc 1 1559 10
 2101 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2102              	.L97:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2103              		.loc 1 1560 1
 2104 00ac 1846     		mov	r0, r3
 2105 00ae 1037     		adds	r7, r7, #16
 2106              	.LCFI69:
 2107              		.cfi_def_cfa_offset 8
 2108 00b0 BD46     		mov	sp, r7
 2109              	.LCFI70:
 2110              		.cfi_def_cfa_register 13
 2111              		@ sp needed
 2112 00b2 80BD     		pop	{r7, pc}
 2113              		.cfi_endproc
 2114              	.LFE228:
 2116              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2117              		.align	1
 2118              		.global	HAL_ADC_GetValue
 2119              		.syntax unified
 2120              		.thumb
 2121              		.thumb_func
 2123              	HAL_ADC_GetValue:
 2124              	.LFB229:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 2125              		.loc 1 1569 1
 2126              		.cfi_startproc
 2127              		@ args = 0, pretend = 0, frame = 8
 2128              		@ frame_needed = 1, uses_anonymous_args = 0
 2129              		@ link register save eliminated.
 2130 0000 80B4     		push	{r7}
 2131              	.LCFI71:
 2132              		.cfi_def_cfa_offset 4
 2133              		.cfi_offset 7, -4
 2134 0002 83B0     		sub	sp, sp, #12
 2135              	.LCFI72:
 2136              		.cfi_def_cfa_offset 16
 2137 0004 00AF     		add	r7, sp, #0
 2138              	.LCFI73:
 2139              		.cfi_def_cfa_register 7
 2140 0006 7860     		str	r0, [r7, #4]
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 2141              		.loc 1 1571 14
 2142 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 66


 2143 000a 1B68     		ldr	r3, [r3]
 2144              		.loc 1 1571 24
 2145 000c DB6C     		ldr	r3, [r3, #76]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2146              		.loc 1 1572 1
 2147 000e 1846     		mov	r0, r3
 2148 0010 0C37     		adds	r7, r7, #12
 2149              	.LCFI74:
 2150              		.cfi_def_cfa_offset 4
 2151 0012 BD46     		mov	sp, r7
 2152              	.LCFI75:
 2153              		.cfi_def_cfa_register 13
 2154              		@ sp needed
 2155 0014 5DF8047B 		ldr	r7, [sp], #4
 2156              	.LCFI76:
 2157              		.cfi_restore 7
 2158              		.cfi_def_cfa_offset 0
 2159 0018 7047     		bx	lr
 2160              		.cfi_endproc
 2161              	.LFE229:
 2163              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2164              		.align	1
 2165              		.weak	HAL_ADC_ConvCpltCallback
 2166              		.syntax unified
 2167              		.thumb
 2168              		.thumb_func
 2170              	HAL_ADC_ConvCpltCallback:
 2171              	.LFB230:
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2172              		.loc 1 1581 1
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 8
 2175              		@ frame_needed = 1, uses_anonymous_args = 0
 2176              		@ link register save eliminated.
 2177 0000 80B4     		push	{r7}
 2178              	.LCFI77:
 2179              		.cfi_def_cfa_offset 4
 2180              		.cfi_offset 7, -4
 2181 0002 83B0     		sub	sp, sp, #12
 2182              	.LCFI78:
 2183              		.cfi_def_cfa_offset 16
 2184 0004 00AF     		add	r7, sp, #0
 2185              	.LCFI79:
 2186              		.cfi_def_cfa_register 7
 2187 0006 7860     		str	r0, [r7, #4]
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
ARM GAS  /tmp/ccYcKIRp.s 			page 67


1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2188              		.loc 1 1587 1
 2189 0008 00BF     		nop
 2190 000a 0C37     		adds	r7, r7, #12
 2191              	.LCFI80:
 2192              		.cfi_def_cfa_offset 4
 2193 000c BD46     		mov	sp, r7
 2194              	.LCFI81:
 2195              		.cfi_def_cfa_register 13
 2196              		@ sp needed
 2197 000e 5DF8047B 		ldr	r7, [sp], #4
 2198              	.LCFI82:
 2199              		.cfi_restore 7
 2200              		.cfi_def_cfa_offset 0
 2201 0012 7047     		bx	lr
 2202              		.cfi_endproc
 2203              	.LFE230:
 2205              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2206              		.align	1
 2207              		.weak	HAL_ADC_ConvHalfCpltCallback
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2212              	HAL_ADC_ConvHalfCpltCallback:
 2213              	.LFB231:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2214              		.loc 1 1596 1
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 8
 2217              		@ frame_needed = 1, uses_anonymous_args = 0
 2218              		@ link register save eliminated.
 2219 0000 80B4     		push	{r7}
 2220              	.LCFI83:
 2221              		.cfi_def_cfa_offset 4
 2222              		.cfi_offset 7, -4
 2223 0002 83B0     		sub	sp, sp, #12
 2224              	.LCFI84:
 2225              		.cfi_def_cfa_offset 16
 2226 0004 00AF     		add	r7, sp, #0
 2227              	.LCFI85:
 2228              		.cfi_def_cfa_register 7
 2229 0006 7860     		str	r0, [r7, #4]
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
ARM GAS  /tmp/ccYcKIRp.s 			page 68


 2230              		.loc 1 1602 1
 2231 0008 00BF     		nop
 2232 000a 0C37     		adds	r7, r7, #12
 2233              	.LCFI86:
 2234              		.cfi_def_cfa_offset 4
 2235 000c BD46     		mov	sp, r7
 2236              	.LCFI87:
 2237              		.cfi_def_cfa_register 13
 2238              		@ sp needed
 2239 000e 5DF8047B 		ldr	r7, [sp], #4
 2240              	.LCFI88:
 2241              		.cfi_restore 7
 2242              		.cfi_def_cfa_offset 0
 2243 0012 7047     		bx	lr
 2244              		.cfi_endproc
 2245              	.LFE231:
 2247              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2248              		.align	1
 2249              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2250              		.syntax unified
 2251              		.thumb
 2252              		.thumb_func
 2254              	HAL_ADC_LevelOutOfWindowCallback:
 2255              	.LFB232:
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2256              		.loc 1 1611 1
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 8
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261 0000 80B4     		push	{r7}
 2262              	.LCFI89:
 2263              		.cfi_def_cfa_offset 4
 2264              		.cfi_offset 7, -4
 2265 0002 83B0     		sub	sp, sp, #12
 2266              	.LCFI90:
 2267              		.cfi_def_cfa_offset 16
 2268 0004 00AF     		add	r7, sp, #0
 2269              	.LCFI91:
 2270              		.cfi_def_cfa_register 7
 2271 0006 7860     		str	r0, [r7, #4]
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2272              		.loc 1 1617 1
 2273 0008 00BF     		nop
ARM GAS  /tmp/ccYcKIRp.s 			page 69


 2274 000a 0C37     		adds	r7, r7, #12
 2275              	.LCFI92:
 2276              		.cfi_def_cfa_offset 4
 2277 000c BD46     		mov	sp, r7
 2278              	.LCFI93:
 2279              		.cfi_def_cfa_register 13
 2280              		@ sp needed
 2281 000e 5DF8047B 		ldr	r7, [sp], #4
 2282              	.LCFI94:
 2283              		.cfi_restore 7
 2284              		.cfi_def_cfa_offset 0
 2285 0012 7047     		bx	lr
 2286              		.cfi_endproc
 2287              	.LFE232:
 2289              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2290              		.align	1
 2291              		.weak	HAL_ADC_ErrorCallback
 2292              		.syntax unified
 2293              		.thumb
 2294              		.thumb_func
 2296              	HAL_ADC_ErrorCallback:
 2297              	.LFB233:
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2298              		.loc 1 1632 1
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 8
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302              		@ link register save eliminated.
 2303 0000 80B4     		push	{r7}
 2304              	.LCFI95:
 2305              		.cfi_def_cfa_offset 4
 2306              		.cfi_offset 7, -4
 2307 0002 83B0     		sub	sp, sp, #12
 2308              	.LCFI96:
 2309              		.cfi_def_cfa_offset 16
 2310 0004 00AF     		add	r7, sp, #0
 2311              	.LCFI97:
 2312              		.cfi_def_cfa_register 7
 2313 0006 7860     		str	r0, [r7, #4]
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
ARM GAS  /tmp/ccYcKIRp.s 			page 70


1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2314              		.loc 1 1638 1
 2315 0008 00BF     		nop
 2316 000a 0C37     		adds	r7, r7, #12
 2317              	.LCFI98:
 2318              		.cfi_def_cfa_offset 4
 2319 000c BD46     		mov	sp, r7
 2320              	.LCFI99:
 2321              		.cfi_def_cfa_register 13
 2322              		@ sp needed
 2323 000e 5DF8047B 		ldr	r7, [sp], #4
 2324              	.LCFI100:
 2325              		.cfi_restore 7
 2326              		.cfi_def_cfa_offset 0
 2327 0012 7047     		bx	lr
 2328              		.cfi_endproc
 2329              	.LFE233:
 2331              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2332              		.align	1
 2333              		.global	HAL_ADC_ConfigChannel
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2338              	HAL_ADC_ConfigChannel:
 2339              	.LFB234:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
ARM GAS  /tmp/ccYcKIRp.s 			page 71


1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2340              		.loc 1 1670 1
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 16
 2343              		@ frame_needed = 1, uses_anonymous_args = 0
 2344              		@ link register save eliminated.
 2345 0000 80B4     		push	{r7}
 2346              	.LCFI101:
 2347              		.cfi_def_cfa_offset 4
 2348              		.cfi_offset 7, -4
 2349 0002 85B0     		sub	sp, sp, #20
 2350              	.LCFI102:
 2351              		.cfi_def_cfa_offset 24
 2352 0004 00AF     		add	r7, sp, #0
 2353              	.LCFI103:
 2354              		.cfi_def_cfa_register 7
 2355 0006 7860     		str	r0, [r7, #4]
 2356 0008 3960     		str	r1, [r7]
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2357              		.loc 1 1671 17
 2358 000a 0023     		movs	r3, #0
 2359 000c BB60     		str	r3, [r7, #8]
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2360              		.loc 1 1680 3
 2361 000e 7B68     		ldr	r3, [r7, #4]
 2362 0010 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2363 0014 012B     		cmp	r3, #1
 2364 0016 01D1     		bne	.L107
 2365              		.loc 1 1680 3 is_stmt 0 discriminator 1
 2366 0018 0223     		movs	r3, #2
 2367 001a 13E1     		b	.L108
 2368              	.L107:
 2369              		.loc 1 1680 3 discriminator 2
 2370 001c 7B68     		ldr	r3, [r7, #4]
 2371 001e 0122     		movs	r2, #1
 2372 0020 83F83C20 		strb	r2, [r3, #60]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 2373              		.loc 1 1683 14 is_stmt 1 discriminator 2
 2374 0024 3B68     		ldr	r3, [r7]
 2375 0026 1B68     		ldr	r3, [r3]
 2376              		.loc 1 1683 6 discriminator 2
 2377 0028 092B     		cmp	r3, #9
 2378 002a 25D9     		bls	.L109
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 2379              		.loc 1 1686 9
ARM GAS  /tmp/ccYcKIRp.s 			page 72


 2380 002c 7B68     		ldr	r3, [r7, #4]
 2381 002e 1B68     		ldr	r3, [r3]
 2382              		.loc 1 1686 19
 2383 0030 D968     		ldr	r1, [r3, #12]
 2384              		.loc 1 1686 31
 2385 0032 3B68     		ldr	r3, [r7]
 2386 0034 1B68     		ldr	r3, [r3]
 2387 0036 9BB2     		uxth	r3, r3
 2388 0038 1A46     		mov	r2, r3
 2389 003a 1346     		mov	r3, r2
 2390 003c 5B00     		lsls	r3, r3, #1
 2391 003e 1344     		add	r3, r3, r2
 2392 0040 1E3B     		subs	r3, r3, #30
 2393 0042 0722     		movs	r2, #7
 2394 0044 02FA03F3 		lsl	r3, r2, r3
 2395              		.loc 1 1686 30
 2396 0048 DA43     		mvns	r2, r3
 2397              		.loc 1 1686 9
 2398 004a 7B68     		ldr	r3, [r7, #4]
 2399 004c 1B68     		ldr	r3, [r3]
 2400              		.loc 1 1686 27
 2401 004e 0A40     		ands	r2, r2, r1
 2402 0050 DA60     		str	r2, [r3, #12]
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 2403              		.loc 1 1689 9
 2404 0052 7B68     		ldr	r3, [r7, #4]
 2405 0054 1B68     		ldr	r3, [r3]
 2406              		.loc 1 1689 19
 2407 0056 D968     		ldr	r1, [r3, #12]
 2408              		.loc 1 1689 30
 2409 0058 3B68     		ldr	r3, [r7]
 2410 005a 9A68     		ldr	r2, [r3, #8]
 2411 005c 3B68     		ldr	r3, [r7]
 2412 005e 1B68     		ldr	r3, [r3]
 2413 0060 9BB2     		uxth	r3, r3
 2414 0062 1846     		mov	r0, r3
 2415 0064 0346     		mov	r3, r0
 2416 0066 5B00     		lsls	r3, r3, #1
 2417 0068 0344     		add	r3, r3, r0
 2418 006a 1E3B     		subs	r3, r3, #30
 2419 006c 9A40     		lsls	r2, r2, r3
 2420              		.loc 1 1689 9
 2421 006e 7B68     		ldr	r3, [r7, #4]
 2422 0070 1B68     		ldr	r3, [r3]
 2423              		.loc 1 1689 27
 2424 0072 0A43     		orrs	r2, r2, r1
 2425 0074 DA60     		str	r2, [r3, #12]
 2426 0076 22E0     		b	.L110
 2427              	.L109:
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 2428              		.loc 1 1694 9
ARM GAS  /tmp/ccYcKIRp.s 			page 73


 2429 0078 7B68     		ldr	r3, [r7, #4]
 2430 007a 1B68     		ldr	r3, [r3]
 2431              		.loc 1 1694 19
 2432 007c 1969     		ldr	r1, [r3, #16]
 2433              		.loc 1 1694 31
 2434 007e 3B68     		ldr	r3, [r7]
 2435 0080 1B68     		ldr	r3, [r3]
 2436 0082 9BB2     		uxth	r3, r3
 2437 0084 1A46     		mov	r2, r3
 2438 0086 1346     		mov	r3, r2
 2439 0088 5B00     		lsls	r3, r3, #1
 2440 008a 1344     		add	r3, r3, r2
 2441 008c 0722     		movs	r2, #7
 2442 008e 02FA03F3 		lsl	r3, r2, r3
 2443              		.loc 1 1694 30
 2444 0092 DA43     		mvns	r2, r3
 2445              		.loc 1 1694 9
 2446 0094 7B68     		ldr	r3, [r7, #4]
 2447 0096 1B68     		ldr	r3, [r3]
 2448              		.loc 1 1694 27
 2449 0098 0A40     		ands	r2, r2, r1
 2450 009a 1A61     		str	r2, [r3, #16]
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 2451              		.loc 1 1697 9
 2452 009c 7B68     		ldr	r3, [r7, #4]
 2453 009e 1B68     		ldr	r3, [r3]
 2454              		.loc 1 1697 19
 2455 00a0 1969     		ldr	r1, [r3, #16]
 2456              		.loc 1 1697 30
 2457 00a2 3B68     		ldr	r3, [r7]
 2458 00a4 9A68     		ldr	r2, [r3, #8]
 2459 00a6 3B68     		ldr	r3, [r7]
 2460 00a8 1B68     		ldr	r3, [r3]
 2461 00aa 9BB2     		uxth	r3, r3
 2462 00ac 1846     		mov	r0, r3
 2463 00ae 0346     		mov	r3, r0
 2464 00b0 5B00     		lsls	r3, r3, #1
 2465 00b2 0344     		add	r3, r3, r0
 2466 00b4 9A40     		lsls	r2, r2, r3
 2467              		.loc 1 1697 9
 2468 00b6 7B68     		ldr	r3, [r7, #4]
 2469 00b8 1B68     		ldr	r3, [r3]
 2470              		.loc 1 1697 27
 2471 00ba 0A43     		orrs	r2, r2, r1
 2472 00bc 1A61     		str	r2, [r3, #16]
 2473              	.L110:
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 2474              		.loc 1 1701 14
 2475 00be 3B68     		ldr	r3, [r7]
 2476 00c0 5B68     		ldr	r3, [r3, #4]
 2477              		.loc 1 1701 6
 2478 00c2 062B     		cmp	r3, #6
ARM GAS  /tmp/ccYcKIRp.s 			page 74


 2479 00c4 24D8     		bhi	.L111
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 2480              		.loc 1 1704 9
 2481 00c6 7B68     		ldr	r3, [r7, #4]
 2482 00c8 1B68     		ldr	r3, [r3]
 2483              		.loc 1 1704 19
 2484 00ca 596B     		ldr	r1, [r3, #52]
 2485              		.loc 1 1704 30
 2486 00cc 3B68     		ldr	r3, [r7]
 2487 00ce 5A68     		ldr	r2, [r3, #4]
 2488 00d0 1346     		mov	r3, r2
 2489 00d2 9B00     		lsls	r3, r3, #2
 2490 00d4 1344     		add	r3, r3, r2
 2491 00d6 053B     		subs	r3, r3, #5
 2492 00d8 1F22     		movs	r2, #31
 2493 00da 02FA03F3 		lsl	r3, r2, r3
 2494              		.loc 1 1704 29
 2495 00de DA43     		mvns	r2, r3
 2496              		.loc 1 1704 9
 2497 00e0 7B68     		ldr	r3, [r7, #4]
 2498 00e2 1B68     		ldr	r3, [r3]
 2499              		.loc 1 1704 26
 2500 00e4 0A40     		ands	r2, r2, r1
 2501 00e6 5A63     		str	r2, [r3, #52]
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 2502              		.loc 1 1707 9
 2503 00e8 7B68     		ldr	r3, [r7, #4]
 2504 00ea 1B68     		ldr	r3, [r3]
 2505              		.loc 1 1707 19
 2506 00ec 596B     		ldr	r1, [r3, #52]
 2507              		.loc 1 1707 29
 2508 00ee 3B68     		ldr	r3, [r7]
 2509 00f0 1B68     		ldr	r3, [r3]
 2510 00f2 9BB2     		uxth	r3, r3
 2511 00f4 1846     		mov	r0, r3
 2512 00f6 3B68     		ldr	r3, [r7]
 2513 00f8 5A68     		ldr	r2, [r3, #4]
 2514 00fa 1346     		mov	r3, r2
 2515 00fc 9B00     		lsls	r3, r3, #2
 2516 00fe 1344     		add	r3, r3, r2
 2517 0100 053B     		subs	r3, r3, #5
 2518 0102 00FA03F2 		lsl	r2, r0, r3
 2519              		.loc 1 1707 9
 2520 0106 7B68     		ldr	r3, [r7, #4]
 2521 0108 1B68     		ldr	r3, [r3]
 2522              		.loc 1 1707 26
 2523 010a 0A43     		orrs	r2, r2, r1
 2524 010c 5A63     		str	r2, [r3, #52]
 2525 010e 4CE0     		b	.L112
 2526              	.L111:
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
ARM GAS  /tmp/ccYcKIRp.s 			page 75


 2527              		.loc 1 1710 19
 2528 0110 3B68     		ldr	r3, [r7]
 2529 0112 5B68     		ldr	r3, [r3, #4]
 2530              		.loc 1 1710 11
 2531 0114 0C2B     		cmp	r3, #12
 2532 0116 24D8     		bhi	.L113
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 2533              		.loc 1 1713 9
 2534 0118 7B68     		ldr	r3, [r7, #4]
 2535 011a 1B68     		ldr	r3, [r3]
 2536              		.loc 1 1713 19
 2537 011c 196B     		ldr	r1, [r3, #48]
 2538              		.loc 1 1713 30
 2539 011e 3B68     		ldr	r3, [r7]
 2540 0120 5A68     		ldr	r2, [r3, #4]
 2541 0122 1346     		mov	r3, r2
 2542 0124 9B00     		lsls	r3, r3, #2
 2543 0126 1344     		add	r3, r3, r2
 2544 0128 233B     		subs	r3, r3, #35
 2545 012a 1F22     		movs	r2, #31
 2546 012c 02FA03F3 		lsl	r3, r2, r3
 2547              		.loc 1 1713 29
 2548 0130 DA43     		mvns	r2, r3
 2549              		.loc 1 1713 9
 2550 0132 7B68     		ldr	r3, [r7, #4]
 2551 0134 1B68     		ldr	r3, [r3]
 2552              		.loc 1 1713 26
 2553 0136 0A40     		ands	r2, r2, r1
 2554 0138 1A63     		str	r2, [r3, #48]
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 2555              		.loc 1 1716 9
 2556 013a 7B68     		ldr	r3, [r7, #4]
 2557 013c 1B68     		ldr	r3, [r3]
 2558              		.loc 1 1716 19
 2559 013e 196B     		ldr	r1, [r3, #48]
 2560              		.loc 1 1716 29
 2561 0140 3B68     		ldr	r3, [r7]
 2562 0142 1B68     		ldr	r3, [r3]
 2563 0144 9BB2     		uxth	r3, r3
 2564 0146 1846     		mov	r0, r3
 2565 0148 3B68     		ldr	r3, [r7]
 2566 014a 5A68     		ldr	r2, [r3, #4]
 2567 014c 1346     		mov	r3, r2
 2568 014e 9B00     		lsls	r3, r3, #2
 2569 0150 1344     		add	r3, r3, r2
 2570 0152 233B     		subs	r3, r3, #35
 2571 0154 00FA03F2 		lsl	r2, r0, r3
 2572              		.loc 1 1716 9
 2573 0158 7B68     		ldr	r3, [r7, #4]
 2574 015a 1B68     		ldr	r3, [r3]
 2575              		.loc 1 1716 26
 2576 015c 0A43     		orrs	r2, r2, r1
 2577 015e 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccYcKIRp.s 			page 76


 2578 0160 23E0     		b	.L112
 2579              	.L113:
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 2580              		.loc 1 1722 9
 2581 0162 7B68     		ldr	r3, [r7, #4]
 2582 0164 1B68     		ldr	r3, [r3]
 2583              		.loc 1 1722 19
 2584 0166 D96A     		ldr	r1, [r3, #44]
 2585              		.loc 1 1722 30
 2586 0168 3B68     		ldr	r3, [r7]
 2587 016a 5A68     		ldr	r2, [r3, #4]
 2588 016c 1346     		mov	r3, r2
 2589 016e 9B00     		lsls	r3, r3, #2
 2590 0170 1344     		add	r3, r3, r2
 2591 0172 413B     		subs	r3, r3, #65
 2592 0174 1F22     		movs	r2, #31
 2593 0176 02FA03F3 		lsl	r3, r2, r3
 2594              		.loc 1 1722 29
 2595 017a DA43     		mvns	r2, r3
 2596              		.loc 1 1722 9
 2597 017c 7B68     		ldr	r3, [r7, #4]
 2598 017e 1B68     		ldr	r3, [r3]
 2599              		.loc 1 1722 26
 2600 0180 0A40     		ands	r2, r2, r1
 2601 0182 DA62     		str	r2, [r3, #44]
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 2602              		.loc 1 1725 9
 2603 0184 7B68     		ldr	r3, [r7, #4]
 2604 0186 1B68     		ldr	r3, [r3]
 2605              		.loc 1 1725 19
 2606 0188 D96A     		ldr	r1, [r3, #44]
 2607              		.loc 1 1725 29
 2608 018a 3B68     		ldr	r3, [r7]
 2609 018c 1B68     		ldr	r3, [r3]
 2610 018e 9BB2     		uxth	r3, r3
 2611 0190 1846     		mov	r0, r3
 2612 0192 3B68     		ldr	r3, [r7]
 2613 0194 5A68     		ldr	r2, [r3, #4]
 2614 0196 1346     		mov	r3, r2
 2615 0198 9B00     		lsls	r3, r3, #2
 2616 019a 1344     		add	r3, r3, r2
 2617 019c 413B     		subs	r3, r3, #65
 2618 019e 00FA03F2 		lsl	r2, r0, r3
 2619              		.loc 1 1725 9
 2620 01a2 7B68     		ldr	r3, [r7, #4]
 2621 01a4 1B68     		ldr	r3, [r3]
 2622              		.loc 1 1725 26
 2623 01a6 0A43     		orrs	r2, r2, r1
 2624 01a8 DA62     		str	r2, [r3, #44]
 2625              	.L112:
ARM GAS  /tmp/ccYcKIRp.s 			page 77


1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2626              		.loc 1 1731 19
 2627 01aa 294B     		ldr	r3, .L119
 2628 01ac FB60     		str	r3, [r7, #12]
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 2629              		.loc 1 1734 12
 2630 01ae 7B68     		ldr	r3, [r7, #4]
 2631 01b0 1B68     		ldr	r3, [r3]
 2632              		.loc 1 1734 6
 2633 01b2 284A     		ldr	r2, .L119+4
 2634 01b4 9342     		cmp	r3, r2
 2635 01b6 0FD1     		bne	.L114
 2636              		.loc 1 1734 43 discriminator 1
 2637 01b8 3B68     		ldr	r3, [r7]
 2638 01ba 1B68     		ldr	r3, [r3]
 2639              		.loc 1 1734 32 discriminator 1
 2640 01bc 122B     		cmp	r3, #18
 2641 01be 0BD1     		bne	.L114
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & AD
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 2642              		.loc 1 1739 20
 2643 01c0 FB68     		ldr	r3, [r7, #12]
 2644 01c2 5B68     		ldr	r3, [r3, #4]
 2645              		.loc 1 1739 26
 2646 01c4 23F40002 		bic	r2, r3, #8388608
 2647 01c8 FB68     		ldr	r3, [r7, #12]
 2648 01ca 5A60     		str	r2, [r3, #4]
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
 2649              		.loc 1 1742 18
 2650 01cc FB68     		ldr	r3, [r7, #12]
 2651 01ce 5B68     		ldr	r3, [r3, #4]
 2652              		.loc 1 1742 24
 2653 01d0 43F48002 		orr	r2, r3, #4194304
 2654 01d4 FB68     		ldr	r3, [r7, #12]
 2655 01d6 5A60     		str	r2, [r3, #4]
 2656              	.L114:
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Channel_17 is selected for VREFINT enable TSVREFE */
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 2657              		.loc 1 1747 12
 2658 01d8 7B68     		ldr	r3, [r7, #4]
 2659 01da 1B68     		ldr	r3, [r3]
 2660              		.loc 1 1747 6
ARM GAS  /tmp/ccYcKIRp.s 			page 78


 2661 01dc 1D4A     		ldr	r2, .L119+4
 2662 01de 9342     		cmp	r3, r2
 2663 01e0 2BD1     		bne	.L115
 2664              		.loc 1 1747 44 discriminator 1
 2665 01e2 3B68     		ldr	r3, [r7]
 2666 01e4 1B68     		ldr	r3, [r3]
 2667              		.loc 1 1747 32 discriminator 1
 2668 01e6 1C4A     		ldr	r2, .L119+8
 2669 01e8 9342     		cmp	r3, r2
 2670 01ea 03D0     		beq	.L116
 2671              		.loc 1 1747 92 discriminator 2
 2672 01ec 3B68     		ldr	r3, [r7]
 2673 01ee 1B68     		ldr	r3, [r3]
 2674              		.loc 1 1747 81 discriminator 2
 2675 01f0 112B     		cmp	r3, #17
 2676 01f2 22D1     		bne	.L115
 2677              	.L116:
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHAN
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 2678              		.loc 1 1752 20
 2679 01f4 FB68     		ldr	r3, [r7, #12]
 2680 01f6 5B68     		ldr	r3, [r3, #4]
 2681              		.loc 1 1752 26
 2682 01f8 23F48002 		bic	r2, r3, #4194304
 2683 01fc FB68     		ldr	r3, [r7, #12]
 2684 01fe 5A60     		str	r2, [r3, #4]
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Temperature sensor and VREFINT channel*/
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 2685              		.loc 1 1755 18
 2686 0200 FB68     		ldr	r3, [r7, #12]
 2687 0202 5B68     		ldr	r3, [r3, #4]
 2688              		.loc 1 1755 24
 2689 0204 43F40002 		orr	r2, r3, #8388608
 2690 0208 FB68     		ldr	r3, [r7, #12]
 2691 020a 5A60     		str	r2, [r3, #4]
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 2692              		.loc 1 1757 15
 2693 020c 3B68     		ldr	r3, [r7]
 2694 020e 1B68     		ldr	r3, [r3]
 2695              		.loc 1 1757 7
 2696 0210 114A     		ldr	r2, .L119+8
 2697 0212 9342     		cmp	r3, r2
 2698 0214 11D1     		bne	.L115
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2699              		.loc 1 1761 61
 2700 0216 114B     		ldr	r3, .L119+12
 2701 0218 1B68     		ldr	r3, [r3]
 2702 021a 114A     		ldr	r2, .L119+16
 2703 021c A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  /tmp/ccYcKIRp.s 			page 79


 2704 0220 9A0C     		lsrs	r2, r3, #18
 2705              		.loc 1 1761 42
 2706 0222 1346     		mov	r3, r2
 2707 0224 9B00     		lsls	r3, r3, #2
 2708 0226 1344     		add	r3, r3, r2
 2709 0228 5B00     		lsls	r3, r3, #1
 2710              		.loc 1 1761 15
 2711 022a BB60     		str	r3, [r7, #8]
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2712              		.loc 1 1762 12
 2713 022c 02E0     		b	.L117
 2714              	.L118:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 2715              		.loc 1 1764 16
 2716 022e BB68     		ldr	r3, [r7, #8]
 2717 0230 013B     		subs	r3, r3, #1
 2718 0232 BB60     		str	r3, [r7, #8]
 2719              	.L117:
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2720              		.loc 1 1762 21
 2721 0234 BB68     		ldr	r3, [r7, #8]
 2722 0236 002B     		cmp	r3, #0
 2723 0238 F9D1     		bne	.L118
 2724              	.L115:
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2725              		.loc 1 1770 3
 2726 023a 7B68     		ldr	r3, [r7, #4]
 2727 023c 0022     		movs	r2, #0
 2728 023e 83F83C20 		strb	r2, [r3, #60]
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2729              		.loc 1 1773 10
 2730 0242 0023     		movs	r3, #0
 2731              	.L108:
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2732              		.loc 1 1774 1
 2733 0244 1846     		mov	r0, r3
 2734 0246 1437     		adds	r7, r7, #20
 2735              	.LCFI104:
 2736              		.cfi_def_cfa_offset 4
 2737 0248 BD46     		mov	sp, r7
 2738              	.LCFI105:
 2739              		.cfi_def_cfa_register 13
 2740              		@ sp needed
 2741 024a 5DF8047B 		ldr	r7, [sp], #4
 2742              	.LCFI106:
 2743              		.cfi_restore 7
 2744              		.cfi_def_cfa_offset 0
 2745 024e 7047     		bx	lr
 2746              	.L120:
ARM GAS  /tmp/ccYcKIRp.s 			page 80


 2747              		.align	2
 2748              	.L119:
 2749 0250 00230140 		.word	1073816320
 2750 0254 00200140 		.word	1073815552
 2751 0258 12000010 		.word	268435474
 2752 025c 00000000 		.word	SystemCoreClock
 2753 0260 83DE1B43 		.word	1125899907
 2754              		.cfi_endproc
 2755              	.LFE234:
 2757              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2758              		.align	1
 2759              		.global	HAL_ADC_AnalogWDGConfig
 2760              		.syntax unified
 2761              		.thumb
 2762              		.thumb_func
 2764              	HAL_ADC_AnalogWDGConfig:
 2765              	.LFB235:
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2766              		.loc 1 1793 1
 2767              		.cfi_startproc
 2768              		@ args = 0, pretend = 0, frame = 8
 2769              		@ frame_needed = 1, uses_anonymous_args = 0
 2770              		@ link register save eliminated.
 2771 0000 80B4     		push	{r7}
 2772              	.LCFI107:
 2773              		.cfi_def_cfa_offset 4
 2774              		.cfi_offset 7, -4
 2775 0002 83B0     		sub	sp, sp, #12
 2776              	.LCFI108:
 2777              		.cfi_def_cfa_offset 16
 2778 0004 00AF     		add	r7, sp, #0
 2779              	.LCFI109:
 2780              		.cfi_def_cfa_register 7
 2781 0006 7860     		str	r0, [r7, #4]
 2782 0008 3960     		str	r1, [r7]
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccYcKIRp.s 			page 81


1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2783              		.loc 1 1810 3
 2784 000a 7B68     		ldr	r3, [r7, #4]
 2785 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2786 0010 012B     		cmp	r3, #1
 2787 0012 01D1     		bne	.L122
 2788              		.loc 1 1810 3 is_stmt 0 discriminator 1
 2789 0014 0223     		movs	r3, #2
 2790 0016 4DE0     		b	.L123
 2791              	.L122:
 2792              		.loc 1 1810 3 discriminator 2
 2793 0018 7B68     		ldr	r3, [r7, #4]
 2794 001a 0122     		movs	r2, #1
 2795 001c 83F83C20 		strb	r2, [r3, #60]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 2796              		.loc 1 1812 21 is_stmt 1 discriminator 2
 2797 0020 3B68     		ldr	r3, [r7]
 2798 0022 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2799              		.loc 1 1812 5 discriminator 2
 2800 0024 012B     		cmp	r3, #1
 2801 0026 08D1     		bne	.L124
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 2802              		.loc 1 1815 5
 2803 0028 7B68     		ldr	r3, [r7, #4]
 2804 002a 1B68     		ldr	r3, [r3]
 2805 002c 5A68     		ldr	r2, [r3, #4]
 2806 002e 7B68     		ldr	r3, [r7, #4]
 2807 0030 1B68     		ldr	r3, [r3]
 2808 0032 42F04002 		orr	r2, r2, #64
 2809 0036 5A60     		str	r2, [r3, #4]
 2810 0038 07E0     		b	.L125
 2811              	.L124:
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 2812              		.loc 1 1820 5
 2813 003a 7B68     		ldr	r3, [r7, #4]
 2814 003c 1B68     		ldr	r3, [r3]
 2815 003e 5A68     		ldr	r2, [r3, #4]
 2816 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 82


 2817 0042 1B68     		ldr	r3, [r3]
 2818 0044 22F04002 		bic	r2, r2, #64
 2819 0048 5A60     		str	r2, [r3, #4]
 2820              	.L125:
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 2821              		.loc 1 1824 7
 2822 004a 7B68     		ldr	r3, [r7, #4]
 2823 004c 1B68     		ldr	r3, [r3]
 2824              		.loc 1 1824 17
 2825 004e 5B68     		ldr	r3, [r3, #4]
 2826              		.loc 1 1824 7
 2827 0050 7A68     		ldr	r2, [r7, #4]
 2828 0052 1268     		ldr	r2, [r2]
 2829              		.loc 1 1824 23
 2830 0054 23F44003 		bic	r3, r3, #12582912
 2831 0058 23F40073 		bic	r3, r3, #512
 2832 005c 5360     		str	r3, [r2, #4]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 2833              		.loc 1 1827 7
 2834 005e 7B68     		ldr	r3, [r7, #4]
 2835 0060 1B68     		ldr	r3, [r3]
 2836              		.loc 1 1827 17
 2837 0062 5968     		ldr	r1, [r3, #4]
 2838              		.loc 1 1827 41
 2839 0064 3B68     		ldr	r3, [r7]
 2840 0066 1A68     		ldr	r2, [r3]
 2841              		.loc 1 1827 7
 2842 0068 7B68     		ldr	r3, [r7, #4]
 2843 006a 1B68     		ldr	r3, [r3]
 2844              		.loc 1 1827 23
 2845 006c 0A43     		orrs	r2, r2, r1
 2846 006e 5A60     		str	r2, [r3, #4]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 2847              		.loc 1 1830 7
 2848 0070 7B68     		ldr	r3, [r7, #4]
 2849 0072 1B68     		ldr	r3, [r3]
 2850              		.loc 1 1830 40
 2851 0074 3A68     		ldr	r2, [r7]
 2852 0076 5268     		ldr	r2, [r2, #4]
 2853              		.loc 1 1830 23
 2854 0078 5A62     		str	r2, [r3, #36]
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 2855              		.loc 1 1833 7
 2856 007a 7B68     		ldr	r3, [r7, #4]
 2857 007c 1B68     		ldr	r3, [r3]
 2858              		.loc 1 1833 40
 2859 007e 3A68     		ldr	r2, [r7]
 2860 0080 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccYcKIRp.s 			page 83


 2861              		.loc 1 1833 23
 2862 0082 9A62     		str	r2, [r3, #40]
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 2863              		.loc 1 1836 7
 2864 0084 7B68     		ldr	r3, [r7, #4]
 2865 0086 1B68     		ldr	r3, [r3]
 2866              		.loc 1 1836 17
 2867 0088 5A68     		ldr	r2, [r3, #4]
 2868              		.loc 1 1836 7
 2869 008a 7B68     		ldr	r3, [r7, #4]
 2870 008c 1B68     		ldr	r3, [r3]
 2871              		.loc 1 1836 23
 2872 008e 22F01F02 		bic	r2, r2, #31
 2873 0092 5A60     		str	r2, [r3, #4]
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 2874              		.loc 1 1839 7
 2875 0094 7B68     		ldr	r3, [r7, #4]
 2876 0096 1B68     		ldr	r3, [r3]
 2877              		.loc 1 1839 17
 2878 0098 5A68     		ldr	r2, [r3, #4]
 2879              		.loc 1 1839 63
 2880 009a 3B68     		ldr	r3, [r7]
 2881 009c DB68     		ldr	r3, [r3, #12]
 2882              		.loc 1 1839 37
 2883 009e 9BB2     		uxth	r3, r3
 2884              		.loc 1 1839 26
 2885 00a0 1946     		mov	r1, r3
 2886              		.loc 1 1839 7
 2887 00a2 7B68     		ldr	r3, [r7, #4]
 2888 00a4 1B68     		ldr	r3, [r3]
 2889              		.loc 1 1839 23
 2890 00a6 0A43     		orrs	r2, r2, r1
 2891 00a8 5A60     		str	r2, [r3, #4]
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2892              		.loc 1 1842 3
 2893 00aa 7B68     		ldr	r3, [r7, #4]
 2894 00ac 0022     		movs	r2, #0
 2895 00ae 83F83C20 		strb	r2, [r3, #60]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2896              		.loc 1 1845 10
 2897 00b2 0023     		movs	r3, #0
 2898              	.L123:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2899              		.loc 1 1846 1
 2900 00b4 1846     		mov	r0, r3
 2901 00b6 0C37     		adds	r7, r7, #12
 2902              	.LCFI110:
 2903              		.cfi_def_cfa_offset 4
 2904 00b8 BD46     		mov	sp, r7
ARM GAS  /tmp/ccYcKIRp.s 			page 84


 2905              	.LCFI111:
 2906              		.cfi_def_cfa_register 13
 2907              		@ sp needed
 2908 00ba 5DF8047B 		ldr	r7, [sp], #4
 2909              	.LCFI112:
 2910              		.cfi_restore 7
 2911              		.cfi_def_cfa_offset 0
 2912 00be 7047     		bx	lr
 2913              		.cfi_endproc
 2914              	.LFE235:
 2916              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2917              		.align	1
 2918              		.global	HAL_ADC_GetState
 2919              		.syntax unified
 2920              		.thumb
 2921              		.thumb_func
 2923              	HAL_ADC_GetState:
 2924              	.LFB236:
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2925              		.loc 1 1875 1
 2926              		.cfi_startproc
 2927              		@ args = 0, pretend = 0, frame = 8
 2928              		@ frame_needed = 1, uses_anonymous_args = 0
 2929              		@ link register save eliminated.
 2930 0000 80B4     		push	{r7}
 2931              	.LCFI113:
 2932              		.cfi_def_cfa_offset 4
 2933              		.cfi_offset 7, -4
 2934 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccYcKIRp.s 			page 85


 2935              	.LCFI114:
 2936              		.cfi_def_cfa_offset 16
 2937 0004 00AF     		add	r7, sp, #0
 2938              	.LCFI115:
 2939              		.cfi_def_cfa_register 7
 2940 0006 7860     		str	r0, [r7, #4]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 2941              		.loc 1 1877 14
 2942 0008 7B68     		ldr	r3, [r7, #4]
 2943 000a 1B6C     		ldr	r3, [r3, #64]
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2944              		.loc 1 1878 1
 2945 000c 1846     		mov	r0, r3
 2946 000e 0C37     		adds	r7, r7, #12
 2947              	.LCFI116:
 2948              		.cfi_def_cfa_offset 4
 2949 0010 BD46     		mov	sp, r7
 2950              	.LCFI117:
 2951              		.cfi_def_cfa_register 13
 2952              		@ sp needed
 2953 0012 5DF8047B 		ldr	r7, [sp], #4
 2954              	.LCFI118:
 2955              		.cfi_restore 7
 2956              		.cfi_def_cfa_offset 0
 2957 0016 7047     		bx	lr
 2958              		.cfi_endproc
 2959              	.LFE236:
 2961              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2962              		.align	1
 2963              		.global	HAL_ADC_GetError
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2968              	HAL_ADC_GetError:
 2969              	.LFB237:
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2970              		.loc 1 1887 1
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 8
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974              		@ link register save eliminated.
 2975 0000 80B4     		push	{r7}
 2976              	.LCFI119:
 2977              		.cfi_def_cfa_offset 4
 2978              		.cfi_offset 7, -4
 2979 0002 83B0     		sub	sp, sp, #12
 2980              	.LCFI120:
 2981              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccYcKIRp.s 			page 86


 2982 0004 00AF     		add	r7, sp, #0
 2983              	.LCFI121:
 2984              		.cfi_def_cfa_register 7
 2985 0006 7860     		str	r0, [r7, #4]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 2986              		.loc 1 1888 14
 2987 0008 7B68     		ldr	r3, [r7, #4]
 2988 000a 5B6C     		ldr	r3, [r3, #68]
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2989              		.loc 1 1889 1
 2990 000c 1846     		mov	r0, r3
 2991 000e 0C37     		adds	r7, r7, #12
 2992              	.LCFI122:
 2993              		.cfi_def_cfa_offset 4
 2994 0010 BD46     		mov	sp, r7
 2995              	.LCFI123:
 2996              		.cfi_def_cfa_register 13
 2997              		@ sp needed
 2998 0012 5DF8047B 		ldr	r7, [sp], #4
 2999              	.LCFI124:
 3000              		.cfi_restore 7
 3001              		.cfi_def_cfa_offset 0
 3002 0016 7047     		bx	lr
 3003              		.cfi_endproc
 3004              	.LFE237:
 3006              		.section	.text.ADC_Init,"ax",%progbits
 3007              		.align	1
 3008              		.syntax unified
 3009              		.thumb
 3010              		.thumb_func
 3012              	ADC_Init:
 3013              	.LFB238:
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3014              		.loc 1 1907 1
 3015              		.cfi_startproc
 3016              		@ args = 0, pretend = 0, frame = 16
 3017              		@ frame_needed = 1, uses_anonymous_args = 0
 3018              		@ link register save eliminated.
 3019 0000 80B4     		push	{r7}
 3020              	.LCFI125:
ARM GAS  /tmp/ccYcKIRp.s 			page 87


 3021              		.cfi_def_cfa_offset 4
 3022              		.cfi_offset 7, -4
 3023 0002 85B0     		sub	sp, sp, #20
 3024              	.LCFI126:
 3025              		.cfi_def_cfa_offset 24
 3026 0004 00AF     		add	r7, sp, #0
 3027              	.LCFI127:
 3028              		.cfi_def_cfa_register 7
 3029 0006 7860     		str	r0, [r7, #4]
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 3030              		.loc 1 1914 17
 3031 0008 794B     		ldr	r3, .L135
 3032 000a FB60     		str	r3, [r7, #12]
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 3033              		.loc 1 1917 16
 3034 000c FB68     		ldr	r3, [r7, #12]
 3035 000e 5B68     		ldr	r3, [r3, #4]
 3036              		.loc 1 1917 22
 3037 0010 23F44032 		bic	r2, r3, #196608
 3038 0014 FB68     		ldr	r3, [r7, #12]
 3039 0016 5A60     		str	r2, [r3, #4]
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 3040              		.loc 1 1918 16
 3041 0018 FB68     		ldr	r3, [r7, #12]
 3042 001a 5A68     		ldr	r2, [r3, #4]
 3043              		.loc 1 1918 36
 3044 001c 7B68     		ldr	r3, [r7, #4]
 3045 001e 5B68     		ldr	r3, [r3, #4]
 3046              		.loc 1 1918 22
 3047 0020 1A43     		orrs	r2, r2, r3
 3048 0022 FB68     		ldr	r3, [r7, #12]
 3049 0024 5A60     		str	r2, [r3, #4]
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 3050              		.loc 1 1921 7
 3051 0026 7B68     		ldr	r3, [r7, #4]
 3052 0028 1B68     		ldr	r3, [r3]
 3053              		.loc 1 1921 17
 3054 002a 5A68     		ldr	r2, [r3, #4]
 3055              		.loc 1 1921 7
 3056 002c 7B68     		ldr	r3, [r7, #4]
 3057 002e 1B68     		ldr	r3, [r3]
 3058              		.loc 1 1921 23
 3059 0030 22F48072 		bic	r2, r2, #256
 3060 0034 5A60     		str	r2, [r3, #4]
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 3061              		.loc 1 1922 7
 3062 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 88


 3063 0038 1B68     		ldr	r3, [r3]
 3064              		.loc 1 1922 17
 3065 003a 5968     		ldr	r1, [r3, #4]
 3066              		.loc 1 1922 27
 3067 003c 7B68     		ldr	r3, [r7, #4]
 3068 003e 1B69     		ldr	r3, [r3, #16]
 3069 0040 1A02     		lsls	r2, r3, #8
 3070              		.loc 1 1922 7
 3071 0042 7B68     		ldr	r3, [r7, #4]
 3072 0044 1B68     		ldr	r3, [r3]
 3073              		.loc 1 1922 23
 3074 0046 0A43     		orrs	r2, r2, r1
 3075 0048 5A60     		str	r2, [r3, #4]
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 3076              		.loc 1 1925 7
 3077 004a 7B68     		ldr	r3, [r7, #4]
 3078 004c 1B68     		ldr	r3, [r3]
 3079              		.loc 1 1925 17
 3080 004e 5A68     		ldr	r2, [r3, #4]
 3081              		.loc 1 1925 7
 3082 0050 7B68     		ldr	r3, [r7, #4]
 3083 0052 1B68     		ldr	r3, [r3]
 3084              		.loc 1 1925 23
 3085 0054 22F04072 		bic	r2, r2, #50331648
 3086 0058 5A60     		str	r2, [r3, #4]
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 3087              		.loc 1 1926 7
 3088 005a 7B68     		ldr	r3, [r7, #4]
 3089 005c 1B68     		ldr	r3, [r3]
 3090              		.loc 1 1926 17
 3091 005e 5968     		ldr	r1, [r3, #4]
 3092              		.loc 1 1926 37
 3093 0060 7B68     		ldr	r3, [r7, #4]
 3094 0062 9A68     		ldr	r2, [r3, #8]
 3095              		.loc 1 1926 7
 3096 0064 7B68     		ldr	r3, [r7, #4]
 3097 0066 1B68     		ldr	r3, [r3]
 3098              		.loc 1 1926 23
 3099 0068 0A43     		orrs	r2, r2, r1
 3100 006a 5A60     		str	r2, [r3, #4]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 3101              		.loc 1 1929 7
 3102 006c 7B68     		ldr	r3, [r7, #4]
 3103 006e 1B68     		ldr	r3, [r3]
 3104              		.loc 1 1929 17
 3105 0070 9A68     		ldr	r2, [r3, #8]
 3106              		.loc 1 1929 7
 3107 0072 7B68     		ldr	r3, [r7, #4]
 3108 0074 1B68     		ldr	r3, [r3]
 3109              		.loc 1 1929 23
 3110 0076 22F40062 		bic	r2, r2, #2048
 3111 007a 9A60     		str	r2, [r3, #8]
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
ARM GAS  /tmp/ccYcKIRp.s 			page 89


 3112              		.loc 1 1930 7
 3113 007c 7B68     		ldr	r3, [r7, #4]
 3114 007e 1B68     		ldr	r3, [r3]
 3115              		.loc 1 1930 17
 3116 0080 9968     		ldr	r1, [r3, #8]
 3117              		.loc 1 1930 36
 3118 0082 7B68     		ldr	r3, [r7, #4]
 3119 0084 DA68     		ldr	r2, [r3, #12]
 3120              		.loc 1 1930 7
 3121 0086 7B68     		ldr	r3, [r7, #4]
 3122 0088 1B68     		ldr	r3, [r3]
 3123              		.loc 1 1930 23
 3124 008a 0A43     		orrs	r2, r2, r1
 3125 008c 9A60     		str	r2, [r3, #8]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 3126              		.loc 1 1937 16
 3127 008e 7B68     		ldr	r3, [r7, #4]
 3128 0090 9B6A     		ldr	r3, [r3, #40]
 3129              		.loc 1 1937 5
 3130 0092 584A     		ldr	r2, .L135+4
 3131 0094 9342     		cmp	r3, r2
 3132 0096 22D0     		beq	.L131
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3133              		.loc 1 1940 9
 3134 0098 7B68     		ldr	r3, [r7, #4]
 3135 009a 1B68     		ldr	r3, [r3]
 3136              		.loc 1 1940 19
 3137 009c 9A68     		ldr	r2, [r3, #8]
 3138              		.loc 1 1940 9
 3139 009e 7B68     		ldr	r3, [r7, #4]
 3140 00a0 1B68     		ldr	r3, [r3]
 3141              		.loc 1 1940 25
 3142 00a2 22F07062 		bic	r2, r2, #251658240
 3143 00a6 9A60     		str	r2, [r3, #8]
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 3144              		.loc 1 1941 9
 3145 00a8 7B68     		ldr	r3, [r7, #4]
 3146 00aa 1B68     		ldr	r3, [r3]
 3147              		.loc 1 1941 19
 3148 00ac 9968     		ldr	r1, [r3, #8]
 3149              		.loc 1 1941 38
 3150 00ae 7B68     		ldr	r3, [r7, #4]
 3151 00b0 9A6A     		ldr	r2, [r3, #40]
 3152              		.loc 1 1941 9
 3153 00b2 7B68     		ldr	r3, [r7, #4]
 3154 00b4 1B68     		ldr	r3, [r3]
 3155              		.loc 1 1941 25
 3156 00b6 0A43     		orrs	r2, r2, r1
 3157 00b8 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccYcKIRp.s 			page 90


1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3158              		.loc 1 1944 9
 3159 00ba 7B68     		ldr	r3, [r7, #4]
 3160 00bc 1B68     		ldr	r3, [r3]
 3161              		.loc 1 1944 19
 3162 00be 9A68     		ldr	r2, [r3, #8]
 3163              		.loc 1 1944 9
 3164 00c0 7B68     		ldr	r3, [r7, #4]
 3165 00c2 1B68     		ldr	r3, [r3]
 3166              		.loc 1 1944 25
 3167 00c4 22F04052 		bic	r2, r2, #805306368
 3168 00c8 9A60     		str	r2, [r3, #8]
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 3169              		.loc 1 1945 9
 3170 00ca 7B68     		ldr	r3, [r7, #4]
 3171 00cc 1B68     		ldr	r3, [r3]
 3172              		.loc 1 1945 19
 3173 00ce 9968     		ldr	r1, [r3, #8]
 3174              		.loc 1 1945 38
 3175 00d0 7B68     		ldr	r3, [r7, #4]
 3176 00d2 DA6A     		ldr	r2, [r3, #44]
 3177              		.loc 1 1945 9
 3178 00d4 7B68     		ldr	r3, [r7, #4]
 3179 00d6 1B68     		ldr	r3, [r3]
 3180              		.loc 1 1945 25
 3181 00d8 0A43     		orrs	r2, r2, r1
 3182 00da 9A60     		str	r2, [r3, #8]
 3183 00dc 0FE0     		b	.L132
 3184              	.L131:
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3185              		.loc 1 1950 9
 3186 00de 7B68     		ldr	r3, [r7, #4]
 3187 00e0 1B68     		ldr	r3, [r3]
 3188              		.loc 1 1950 19
 3189 00e2 9A68     		ldr	r2, [r3, #8]
 3190              		.loc 1 1950 9
 3191 00e4 7B68     		ldr	r3, [r7, #4]
 3192 00e6 1B68     		ldr	r3, [r3]
 3193              		.loc 1 1950 25
 3194 00e8 22F07062 		bic	r2, r2, #251658240
 3195 00ec 9A60     		str	r2, [r3, #8]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3196              		.loc 1 1951 9
 3197 00ee 7B68     		ldr	r3, [r7, #4]
 3198 00f0 1B68     		ldr	r3, [r3]
 3199              		.loc 1 1951 19
 3200 00f2 9A68     		ldr	r2, [r3, #8]
 3201              		.loc 1 1951 9
 3202 00f4 7B68     		ldr	r3, [r7, #4]
 3203 00f6 1B68     		ldr	r3, [r3]
 3204              		.loc 1 1951 25
ARM GAS  /tmp/ccYcKIRp.s 			page 91


 3205 00f8 22F04052 		bic	r2, r2, #805306368
 3206 00fc 9A60     		str	r2, [r3, #8]
 3207              	.L132:
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 3208              		.loc 1 1955 7
 3209 00fe 7B68     		ldr	r3, [r7, #4]
 3210 0100 1B68     		ldr	r3, [r3]
 3211              		.loc 1 1955 17
 3212 0102 9A68     		ldr	r2, [r3, #8]
 3213              		.loc 1 1955 7
 3214 0104 7B68     		ldr	r3, [r7, #4]
 3215 0106 1B68     		ldr	r3, [r3]
 3216              		.loc 1 1955 23
 3217 0108 22F00202 		bic	r2, r2, #2
 3218 010c 9A60     		str	r2, [r3, #8]
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 3219              		.loc 1 1956 7
 3220 010e 7B68     		ldr	r3, [r7, #4]
 3221 0110 1B68     		ldr	r3, [r3]
 3222              		.loc 1 1956 17
 3223 0112 9968     		ldr	r1, [r3, #8]
 3224              		.loc 1 1956 26
 3225 0114 7B68     		ldr	r3, [r7, #4]
 3226 0116 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 3227 0118 5A00     		lsls	r2, r3, #1
 3228              		.loc 1 1956 7
 3229 011a 7B68     		ldr	r3, [r7, #4]
 3230 011c 1B68     		ldr	r3, [r3]
 3231              		.loc 1 1956 23
 3232 011e 0A43     		orrs	r2, r2, r1
 3233 0120 9A60     		str	r2, [r3, #8]
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 3234              		.loc 1 1958 16
 3235 0122 7B68     		ldr	r3, [r7, #4]
 3236 0124 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3237              		.loc 1 1958 5
 3238 0128 002B     		cmp	r3, #0
 3239 012a 1BD0     		beq	.L133
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 3240              		.loc 1 1963 9
 3241 012c 7B68     		ldr	r3, [r7, #4]
 3242 012e 1B68     		ldr	r3, [r3]
 3243              		.loc 1 1963 19
 3244 0130 5A68     		ldr	r2, [r3, #4]
 3245              		.loc 1 1963 9
 3246 0132 7B68     		ldr	r3, [r7, #4]
 3247 0134 1B68     		ldr	r3, [r3]
 3248              		.loc 1 1963 25
 3249 0136 42F40062 		orr	r2, r2, #2048
ARM GAS  /tmp/ccYcKIRp.s 			page 92


 3250 013a 5A60     		str	r2, [r3, #4]
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 3251              		.loc 1 1966 9
 3252 013c 7B68     		ldr	r3, [r7, #4]
 3253 013e 1B68     		ldr	r3, [r3]
 3254              		.loc 1 1966 19
 3255 0140 5A68     		ldr	r2, [r3, #4]
 3256              		.loc 1 1966 9
 3257 0142 7B68     		ldr	r3, [r7, #4]
 3258 0144 1B68     		ldr	r3, [r3]
 3259              		.loc 1 1966 25
 3260 0146 22F46042 		bic	r2, r2, #57344
 3261 014a 5A60     		str	r2, [r3, #4]
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 3262              		.loc 1 1967 9
 3263 014c 7B68     		ldr	r3, [r7, #4]
 3264 014e 1B68     		ldr	r3, [r3]
 3265              		.loc 1 1967 19
 3266 0150 5968     		ldr	r1, [r3, #4]
 3267              		.loc 1 1967 29
 3268 0152 7B68     		ldr	r3, [r7, #4]
 3269 0154 5B6A     		ldr	r3, [r3, #36]
 3270 0156 013B     		subs	r3, r3, #1
 3271 0158 5A03     		lsls	r2, r3, #13
 3272              		.loc 1 1967 9
 3273 015a 7B68     		ldr	r3, [r7, #4]
 3274 015c 1B68     		ldr	r3, [r3]
 3275              		.loc 1 1967 25
 3276 015e 0A43     		orrs	r2, r2, r1
 3277 0160 5A60     		str	r2, [r3, #4]
 3278 0162 07E0     		b	.L134
 3279              	.L133:
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 3280              		.loc 1 1972 9
 3281 0164 7B68     		ldr	r3, [r7, #4]
 3282 0166 1B68     		ldr	r3, [r3]
 3283              		.loc 1 1972 19
 3284 0168 5A68     		ldr	r2, [r3, #4]
 3285              		.loc 1 1972 9
 3286 016a 7B68     		ldr	r3, [r7, #4]
 3287 016c 1B68     		ldr	r3, [r3]
 3288              		.loc 1 1972 25
 3289 016e 22F40062 		bic	r2, r2, #2048
 3290 0172 5A60     		str	r2, [r3, #4]
 3291              	.L134:
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 3292              		.loc 1 1976 7
 3293 0174 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccYcKIRp.s 			page 93


 3294 0176 1B68     		ldr	r3, [r3]
 3295              		.loc 1 1976 17
 3296 0178 DA6A     		ldr	r2, [r3, #44]
 3297              		.loc 1 1976 7
 3298 017a 7B68     		ldr	r3, [r7, #4]
 3299 017c 1B68     		ldr	r3, [r3]
 3300              		.loc 1 1976 24
 3301 017e 22F47002 		bic	r2, r2, #15728640
 3302 0182 DA62     		str	r2, [r3, #44]
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 3303              		.loc 1 1977 7
 3304 0184 7B68     		ldr	r3, [r7, #4]
 3305 0186 1B68     		ldr	r3, [r3]
 3306              		.loc 1 1977 17
 3307 0188 D96A     		ldr	r1, [r3, #44]
 3308              		.loc 1 1977 28
 3309 018a 7B68     		ldr	r3, [r7, #4]
 3310 018c DB69     		ldr	r3, [r3, #28]
 3311 018e 013B     		subs	r3, r3, #1
 3312 0190 1A05     		lsls	r2, r3, #20
 3313              		.loc 1 1977 7
 3314 0192 7B68     		ldr	r3, [r7, #4]
 3315 0194 1B68     		ldr	r3, [r3]
 3316              		.loc 1 1977 24
 3317 0196 0A43     		orrs	r2, r2, r1
 3318 0198 DA62     		str	r2, [r3, #44]
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 3319              		.loc 1 1980 7
 3320 019a 7B68     		ldr	r3, [r7, #4]
 3321 019c 1B68     		ldr	r3, [r3]
 3322              		.loc 1 1980 17
 3323 019e 9A68     		ldr	r2, [r3, #8]
 3324              		.loc 1 1980 7
 3325 01a0 7B68     		ldr	r3, [r7, #4]
 3326 01a2 1B68     		ldr	r3, [r3]
 3327              		.loc 1 1980 23
 3328 01a4 22F40072 		bic	r2, r2, #512
 3329 01a8 9A60     		str	r2, [r3, #8]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 3330              		.loc 1 1981 7
 3331 01aa 7B68     		ldr	r3, [r7, #4]
 3332 01ac 1B68     		ldr	r3, [r3]
 3333              		.loc 1 1981 17
 3334 01ae 9968     		ldr	r1, [r3, #8]
 3335              		.loc 1 1981 26
 3336 01b0 7B68     		ldr	r3, [r7, #4]
 3337 01b2 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 3338 01b6 5A02     		lsls	r2, r3, #9
 3339              		.loc 1 1981 7
 3340 01b8 7B68     		ldr	r3, [r7, #4]
 3341 01ba 1B68     		ldr	r3, [r3]
 3342              		.loc 1 1981 23
 3343 01bc 0A43     		orrs	r2, r2, r1
 3344 01be 9A60     		str	r2, [r3, #8]
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccYcKIRp.s 			page 94


1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 3345              		.loc 1 1984 7
 3346 01c0 7B68     		ldr	r3, [r7, #4]
 3347 01c2 1B68     		ldr	r3, [r3]
 3348              		.loc 1 1984 17
 3349 01c4 9A68     		ldr	r2, [r3, #8]
 3350              		.loc 1 1984 7
 3351 01c6 7B68     		ldr	r3, [r7, #4]
 3352 01c8 1B68     		ldr	r3, [r3]
 3353              		.loc 1 1984 23
 3354 01ca 22F48062 		bic	r2, r2, #1024
 3355 01ce 9A60     		str	r2, [r3, #8]
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 3356              		.loc 1 1985 7
 3357 01d0 7B68     		ldr	r3, [r7, #4]
 3358 01d2 1B68     		ldr	r3, [r3]
 3359              		.loc 1 1985 17
 3360 01d4 9968     		ldr	r1, [r3, #8]
 3361              		.loc 1 1985 26
 3362 01d6 7B68     		ldr	r3, [r7, #4]
 3363 01d8 5B69     		ldr	r3, [r3, #20]
 3364 01da 9A02     		lsls	r2, r3, #10
 3365              		.loc 1 1985 7
 3366 01dc 7B68     		ldr	r3, [r7, #4]
 3367 01de 1B68     		ldr	r3, [r3]
 3368              		.loc 1 1985 23
 3369 01e0 0A43     		orrs	r2, r2, r1
 3370 01e2 9A60     		str	r2, [r3, #8]
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3371              		.loc 1 1986 1
 3372 01e4 00BF     		nop
 3373 01e6 1437     		adds	r7, r7, #20
 3374              	.LCFI128:
 3375              		.cfi_def_cfa_offset 4
 3376 01e8 BD46     		mov	sp, r7
 3377              	.LCFI129:
 3378              		.cfi_def_cfa_register 13
 3379              		@ sp needed
 3380 01ea 5DF8047B 		ldr	r7, [sp], #4
 3381              	.LCFI130:
 3382              		.cfi_restore 7
 3383              		.cfi_def_cfa_offset 0
 3384 01ee 7047     		bx	lr
 3385              	.L136:
 3386              		.align	2
 3387              	.L135:
 3388 01f0 00230140 		.word	1073816320
 3389 01f4 0100000F 		.word	251658241
 3390              		.cfi_endproc
 3391              	.LFE238:
 3393              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3394              		.align	1
 3395              		.syntax unified
 3396              		.thumb
 3397              		.thumb_func
 3399              	ADC_DMAConvCplt:
ARM GAS  /tmp/ccYcKIRp.s 			page 95


 3400              	.LFB239:
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3401              		.loc 1 1995 1
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 16
 3404              		@ frame_needed = 1, uses_anonymous_args = 0
 3405 0000 80B5     		push	{r7, lr}
 3406              	.LCFI131:
 3407              		.cfi_def_cfa_offset 8
 3408              		.cfi_offset 7, -8
 3409              		.cfi_offset 14, -4
 3410 0002 84B0     		sub	sp, sp, #16
 3411              	.LCFI132:
 3412              		.cfi_def_cfa_offset 24
 3413 0004 00AF     		add	r7, sp, #0
 3414              	.LCFI133:
 3415              		.cfi_def_cfa_register 7
 3416 0006 7860     		str	r0, [r7, #4]
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3417              		.loc 1 1997 22
 3418 0008 7B68     		ldr	r3, [r7, #4]
 3419 000a 9B6B     		ldr	r3, [r3, #56]
 3420 000c FB60     		str	r3, [r7, #12]
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 3421              		.loc 1 2000 7
 3422 000e FB68     		ldr	r3, [r7, #12]
 3423 0010 1B6C     		ldr	r3, [r3, #64]
 3424 0012 03F05003 		and	r3, r3, #80
 3425              		.loc 1 2000 6
 3426 0016 002B     		cmp	r3, #0
 3427 0018 3CD1     		bne	.L138
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3428              		.loc 1 2003 5
 3429 001a FB68     		ldr	r3, [r7, #12]
 3430 001c 1B6C     		ldr	r3, [r3, #64]
 3431 001e 43F40072 		orr	r2, r3, #512
 3432 0022 FB68     		ldr	r3, [r7, #12]
 3433 0024 1A64     		str	r2, [r3, #64]
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
ARM GAS  /tmp/ccYcKIRp.s 			page 96


2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 3434              		.loc 1 2011 8
 3435 0026 FB68     		ldr	r3, [r7, #12]
 3436 0028 1B68     		ldr	r3, [r3]
 3437 002a 9B68     		ldr	r3, [r3, #8]
 3438 002c 03F04053 		and	r3, r3, #805306368
 3439              		.loc 1 2011 7
 3440 0030 002B     		cmp	r3, #0
 3441 0032 2BD1     		bne	.L139
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3442              		.loc 1 2012 19 discriminator 1
 3443 0034 FB68     		ldr	r3, [r7, #12]
 3444 0036 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3445              		.loc 1 2011 62 discriminator 1
 3446 0038 002B     		cmp	r3, #0
 3447 003a 27D1     		bne	.L139
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3448              		.loc 1 2013 9
 3449 003c FB68     		ldr	r3, [r7, #12]
 3450 003e 1B68     		ldr	r3, [r3]
 3451 0040 DB6A     		ldr	r3, [r3, #44]
 3452 0042 03F47003 		and	r3, r3, #15728640
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3453              		.loc 1 2012 62
 3454 0046 002B     		cmp	r3, #0
 3455 0048 06D0     		beq	.L140
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 3456              		.loc 1 2014 9
 3457 004a FB68     		ldr	r3, [r7, #12]
 3458 004c 1B68     		ldr	r3, [r3]
 3459 004e 9B68     		ldr	r3, [r3, #8]
 3460 0050 03F48063 		and	r3, r3, #1024
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3461              		.loc 1 2013 58
 3462 0054 002B     		cmp	r3, #0
 3463 0056 19D1     		bne	.L139
 3464              	.L140:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 3465              		.loc 1 2020 7
 3466 0058 FB68     		ldr	r3, [r7, #12]
 3467 005a 1B68     		ldr	r3, [r3]
 3468 005c 5A68     		ldr	r2, [r3, #4]
 3469 005e FB68     		ldr	r3, [r7, #12]
 3470 0060 1B68     		ldr	r3, [r3]
 3471 0062 22F02002 		bic	r2, r2, #32
 3472 0066 5A60     		str	r2, [r3, #4]
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 3473              		.loc 1 2023 7
ARM GAS  /tmp/ccYcKIRp.s 			page 97


 3474 0068 FB68     		ldr	r3, [r7, #12]
 3475 006a 1B6C     		ldr	r3, [r3, #64]
 3476 006c 23F48072 		bic	r2, r3, #256
 3477 0070 FB68     		ldr	r3, [r7, #12]
 3478 0072 1A64     		str	r2, [r3, #64]
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 3479              		.loc 1 2025 11
 3480 0074 FB68     		ldr	r3, [r7, #12]
 3481 0076 1B6C     		ldr	r3, [r3, #64]
 3482 0078 03F48053 		and	r3, r3, #4096
 3483              		.loc 1 2025 10
 3484 007c 002B     		cmp	r3, #0
 3485 007e 05D1     		bne	.L139
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3486              		.loc 1 2027 9
 3487 0080 FB68     		ldr	r3, [r7, #12]
 3488 0082 1B6C     		ldr	r3, [r3, #64]
 3489 0084 43F00102 		orr	r2, r3, #1
 3490 0088 FB68     		ldr	r3, [r7, #12]
 3491 008a 1A64     		str	r2, [r3, #64]
 3492              	.L139:
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 3493              		.loc 1 2035 5
 3494 008c F868     		ldr	r0, [r7, #12]
 3495 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	else
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 	{
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Call DMA error callback */
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3496              		.loc 1 2055 1
 3497 0092 0EE0     		b	.L143
 3498              	.L138:
ARM GAS  /tmp/ccYcKIRp.s 			page 98


2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 3499              		.loc 1 2040 14
 3500 0094 FB68     		ldr	r3, [r7, #12]
 3501 0096 1B6C     		ldr	r3, [r3, #64]
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 3502              		.loc 1 2040 22
 3503 0098 03F01003 		and	r3, r3, #16
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 3504              		.loc 1 2040 8
 3505 009c 002B     		cmp	r3, #0
 3506 009e 03D0     		beq	.L142
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3507              		.loc 1 2046 7
 3508 00a0 F868     		ldr	r0, [r7, #12]
 3509 00a2 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 3510              		.loc 1 2055 1
 3511 00a6 04E0     		b	.L143
 3512              	.L142:
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 3513              		.loc 1 2052 11
 3514 00a8 FB68     		ldr	r3, [r7, #12]
 3515 00aa 9B6B     		ldr	r3, [r3, #56]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 3516              		.loc 1 2052 23
 3517 00ac DB6C     		ldr	r3, [r3, #76]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 3518              		.loc 1 2052 7
 3519 00ae 7868     		ldr	r0, [r7, #4]
 3520 00b0 9847     		blx	r3
 3521              	.LVL0:
 3522              	.L143:
 3523              		.loc 1 2055 1
 3524 00b2 00BF     		nop
 3525 00b4 1037     		adds	r7, r7, #16
 3526              	.LCFI134:
 3527              		.cfi_def_cfa_offset 8
 3528 00b6 BD46     		mov	sp, r7
 3529              	.LCFI135:
 3530              		.cfi_def_cfa_register 13
 3531              		@ sp needed
 3532 00b8 80BD     		pop	{r7, pc}
 3533              		.cfi_endproc
 3534              	.LFE239:
 3536              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3537              		.align	1
 3538              		.syntax unified
 3539              		.thumb
 3540              		.thumb_func
 3542              	ADC_DMAHalfConvCplt:
 3543              	.LFB240:
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccYcKIRp.s 			page 99


2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3544              		.loc 1 2064 1
 3545              		.cfi_startproc
 3546              		@ args = 0, pretend = 0, frame = 16
 3547              		@ frame_needed = 1, uses_anonymous_args = 0
 3548 0000 80B5     		push	{r7, lr}
 3549              	.LCFI136:
 3550              		.cfi_def_cfa_offset 8
 3551              		.cfi_offset 7, -8
 3552              		.cfi_offset 14, -4
 3553 0002 84B0     		sub	sp, sp, #16
 3554              	.LCFI137:
 3555              		.cfi_def_cfa_offset 24
 3556 0004 00AF     		add	r7, sp, #0
 3557              	.LCFI138:
 3558              		.cfi_def_cfa_register 7
 3559 0006 7860     		str	r0, [r7, #4]
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3560              		.loc 1 2065 22
 3561 0008 7B68     		ldr	r3, [r7, #4]
 3562 000a 9B6B     		ldr	r3, [r3, #56]
 3563 000c FB60     		str	r3, [r7, #12]
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Half conversion callback */
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 3564              		.loc 1 2070 3
 3565 000e F868     		ldr	r0, [r7, #12]
 3566 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3567              		.loc 1 2072 1
 3568 0014 00BF     		nop
 3569 0016 1037     		adds	r7, r7, #16
 3570              	.LCFI139:
 3571              		.cfi_def_cfa_offset 8
 3572 0018 BD46     		mov	sp, r7
 3573              	.LCFI140:
 3574              		.cfi_def_cfa_register 13
 3575              		@ sp needed
 3576 001a 80BD     		pop	{r7, pc}
 3577              		.cfi_endproc
 3578              	.LFE240:
 3580              		.section	.text.ADC_DMAError,"ax",%progbits
 3581              		.align	1
 3582              		.syntax unified
 3583              		.thumb
 3584              		.thumb_func
 3586              	ADC_DMAError:
 3587              	.LFB241:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
ARM GAS  /tmp/ccYcKIRp.s 			page 100


2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3588              		.loc 1 2081 1
 3589              		.cfi_startproc
 3590              		@ args = 0, pretend = 0, frame = 16
 3591              		@ frame_needed = 1, uses_anonymous_args = 0
 3592 0000 80B5     		push	{r7, lr}
 3593              	.LCFI141:
 3594              		.cfi_def_cfa_offset 8
 3595              		.cfi_offset 7, -8
 3596              		.cfi_offset 14, -4
 3597 0002 84B0     		sub	sp, sp, #16
 3598              	.LCFI142:
 3599              		.cfi_def_cfa_offset 24
 3600 0004 00AF     		add	r7, sp, #0
 3601              	.LCFI143:
 3602              		.cfi_def_cfa_register 7
 3603 0006 7860     		str	r0, [r7, #4]
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3604              		.loc 1 2082 22
 3605 0008 7B68     		ldr	r3, [r7, #4]
 3606 000a 9B6B     		ldr	r3, [r3, #56]
 3607 000c FB60     		str	r3, [r7, #12]
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 3608              		.loc 1 2083 14
 3609 000e FB68     		ldr	r3, [r7, #12]
 3610 0010 4022     		movs	r2, #64
 3611 0012 1A64     		str	r2, [r3, #64]
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 3612              		.loc 1 2085 7
 3613 0014 FB68     		ldr	r3, [r7, #12]
 3614 0016 5B6C     		ldr	r3, [r3, #68]
 3615              		.loc 1 2085 19
 3616 0018 43F00402 		orr	r2, r3, #4
 3617 001c FB68     		ldr	r3, [r7, #12]
 3618 001e 5A64     		str	r2, [r3, #68]
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Error callback */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #else
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 3619              		.loc 1 2090 3
 3620 0020 F868     		ldr	r0, [r7, #12]
 3621 0022 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3622              		.loc 1 2092 1
 3623 0026 00BF     		nop
 3624 0028 1037     		adds	r7, r7, #16
 3625              	.LCFI144:
 3626              		.cfi_def_cfa_offset 8
 3627 002a BD46     		mov	sp, r7
 3628              	.LCFI145:
 3629              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccYcKIRp.s 			page 101


 3630              		@ sp needed
 3631 002c 80BD     		pop	{r7, pc}
 3632              		.cfi_endproc
 3633              	.LFE241:
 3635              		.text
 3636              	.Letext0:
 3637              		.file 2 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 3638              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 3639              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 3640              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3641              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3642              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3643              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3644              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3645              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc_ex.h"
 3646              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccYcKIRp.s 			page 102


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_adc.c
     /tmp/ccYcKIRp.s:21     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccYcKIRp.s:27     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccYcKIRp.s:226    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccYcKIRp.s:3012   .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccYcKIRp.s:130    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccYcKIRp.s:136    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccYcKIRp.s:268    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccYcKIRp.s:220    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccYcKIRp.s:262    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccYcKIRp.s:304    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccYcKIRp.s:310    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccYcKIRp.s:544    .text.HAL_ADC_Start:0000000000000158 $d
     /tmp/ccYcKIRp.s:552    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccYcKIRp.s:558    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccYcKIRp.s:639    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccYcKIRp.s:645    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccYcKIRp.s:831    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccYcKIRp.s:837    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccYcKIRp.s:971    .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccYcKIRp.s:977    .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccYcKIRp.s:1220   .text.HAL_ADC_Start_IT:000000000000016c $d
     /tmp/ccYcKIRp.s:1228   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccYcKIRp.s:1234   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccYcKIRp.s:1324   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccYcKIRp.s:1330   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccYcKIRp.s:2170   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccYcKIRp.s:2254   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccYcKIRp.s:2296   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccYcKIRp.s:1667   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccYcKIRp.s:1673   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccYcKIRp.s:1974   .text.HAL_ADC_Start_DMA:00000000000001c4 $d
     /tmp/ccYcKIRp.s:3399   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccYcKIRp.s:3542   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccYcKIRp.s:3586   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccYcKIRp.s:1985   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccYcKIRp.s:1991   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccYcKIRp.s:2117   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccYcKIRp.s:2123   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccYcKIRp.s:2164   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccYcKIRp.s:2206   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccYcKIRp.s:2212   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccYcKIRp.s:2248   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccYcKIRp.s:2290   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccYcKIRp.s:2332   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccYcKIRp.s:2338   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccYcKIRp.s:2749   .text.HAL_ADC_ConfigChannel:0000000000000250 $d
     /tmp/ccYcKIRp.s:2758   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccYcKIRp.s:2764   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccYcKIRp.s:2917   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccYcKIRp.s:2923   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccYcKIRp.s:2962   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccYcKIRp.s:2968   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccYcKIRp.s:3007   .text.ADC_Init:0000000000000000 $t
     /tmp/ccYcKIRp.s:3388   .text.ADC_Init:00000000000001f0 $d
     /tmp/ccYcKIRp.s:3394   .text.ADC_DMAConvCplt:0000000000000000 $t
ARM GAS  /tmp/ccYcKIRp.s 			page 103


     /tmp/ccYcKIRp.s:3537   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccYcKIRp.s:3581   .text.ADC_DMAError:0000000000000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
