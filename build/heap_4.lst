ARM GAS  /tmp/ccRviNSh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"heap_4.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c"
  20              		.section	.bss.ucHeap,"aw",%nobits
  21              		.align	2
  24              	ucHeap:
  25 0000 00000000 		.space	2048
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.rodata.xHeapStructSize,"a"
  27              		.align	2
  30              	xHeapStructSize:
  31 0000 08000000 		.word	8
  32              		.section	.bss.xStart,"aw",%nobits
  33              		.align	2
  36              	xStart:
  37 0000 00000000 		.space	8
  37      00000000 
  38              		.section	.bss.pxEnd,"aw",%nobits
  39              		.align	2
  42              	pxEnd:
  43 0000 00000000 		.space	4
  44              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
  45              		.align	2
  48              	xFreeBytesRemaining:
  49 0000 00000000 		.space	4
  50              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
  51              		.align	2
  54              	xMinimumEverFreeBytesRemaining:
  55 0000 00000000 		.space	4
  56              		.section	.bss.xNumberOfSuccessfulAllocations,"aw",%nobits
  57              		.align	2
  60              	xNumberOfSuccessfulAllocations:
  61 0000 00000000 		.space	4
  62              		.section	.bss.xNumberOfSuccessfulFrees,"aw",%nobits
  63              		.align	2
  66              	xNumberOfSuccessfulFrees:
  67 0000 00000000 		.space	4
  68              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
ARM GAS  /tmp/ccRviNSh.s 			page 2


  69              		.align	2
  72              	xBlockAllocatedBit:
  73 0000 00000000 		.space	4
  74              		.section	.text.pvPortMalloc,"ax",%progbits
  75              		.align	1
  76              		.global	pvPortMalloc
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	pvPortMalloc:
  82              	.LFB4:
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that combines
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * (coalescences) adjacent memory blocks as they are freed, and in so doing
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * limits memory fragmentation.
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * See heap_1.c, heap_2.c and heap_3.c for alternative implementations, and the
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include <stdlib.h>
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** all the API functions to use the MPU wrappers.  That should only be done when
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** task.h is included from an application file. */
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "FreeRTOS.h"
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "task.h"
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/ccRviNSh.s 			page 3


  47:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Block sizes must not get too small. */
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Assumes 8bit bytes! */
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Allocate the memory for the heap. */
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* The application writer has already defined the array used for the RTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	heap - probably so it can be placed in a special segment or address. */
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Define the linked list structure.  This is used to link free blocks in order
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** of their memory address. */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** typedef struct A_BLOCK_LINK
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** } BlockLink_t;
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Inserts a block of memory that is being freed into the correct position in
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the list of free memory blocks.  The block being freed will be merged with
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the block in front it and/or the block behind it if the memory blocks are
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * adjacent to each other.
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Called automatically to setup the required heap structures the first time
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * pvPortMalloc() is called.
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void );
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* The size of the structure placed at the beginning of each allocated memory
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** block must by correctly byte aligned. */
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Create a couple of list links to mark the start and end of the list. */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static BlockLink_t xStart, *pxEnd = NULL;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Keeps track of the number of calls to allocate and free memory as well as the
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** number of free bytes remaining, but says nothing about fragmentation. */
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xFreeBytesRemaining = 0U;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
ARM GAS  /tmp/ccRviNSh.s 			page 4


 104:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xNumberOfSuccessfulAllocations = 0;
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xNumberOfSuccessfulFrees = 0;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** member of an BlockLink_t structure is set then the block belongs to the
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** application.  When the bit is free the block is still part of the free heap
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** space. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xBlockAllocatedBit = 0;
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvPortMalloc( size_t xWantedSize )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  83              		.loc 1 116 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 40
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 8AB0     		sub	sp, sp, #40
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 48
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI2:
  97              		.cfi_def_cfa_register 7
  98 0006 7860     		str	r0, [r7, #4]
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvReturn = NULL;
  99              		.loc 1 118 7
 100 0008 0023     		movs	r3, #0
 101 000a FB61     		str	r3, [r7, #28]
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
 102              		.loc 1 120 2
 103 000c FFF7FEFF 		bl	vTaskSuspendAll
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* If this is the first call to malloc then the heap will require
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		initialisation to setup the list of free blocks. */
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxEnd == NULL )
 104              		.loc 1 124 13
 105 0010 5C4B     		ldr	r3, .L16
 106 0012 1B68     		ldr	r3, [r3]
 107              		.loc 1 124 5
 108 0014 002B     		cmp	r3, #0
 109 0016 01D1     		bne	.L2
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			prvHeapInit();
 110              		.loc 1 126 4
 111 0018 FFF7FEFF 		bl	prvHeapInit
 112              	.L2:
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccRviNSh.s 			page 5


 131:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the requested block size is not so large that the top bit is
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is used to determine who owns the block - the application or the
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		kernel, so it must be free. */
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 113              		.loc 1 137 21
 114 001c 5A4B     		ldr	r3, .L16+4
 115 001e 1A68     		ldr	r2, [r3]
 116 0020 7B68     		ldr	r3, [r7, #4]
 117 0022 1340     		ands	r3, r3, r2
 118              		.loc 1 137 5
 119 0024 002B     		cmp	r3, #0
 120 0026 40F09580 		bne	.L3
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			structure in addition to the requested amount of bytes. */
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( xWantedSize > 0 )
 121              		.loc 1 141 6
 122 002a 7B68     		ldr	r3, [r7, #4]
 123 002c 002B     		cmp	r3, #0
 124 002e 1ED0     		beq	.L4
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xWantedSize += xHeapStructSize;
 125              		.loc 1 143 17
 126 0030 0822     		movs	r2, #8
 127 0032 7B68     		ldr	r3, [r7, #4]
 128 0034 1344     		add	r3, r3, r2
 129 0036 7B60     		str	r3, [r7, #4]
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Ensure that blocks are always aligned to the required number
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				of bytes. */
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 130              		.loc 1 147 23
 131 0038 7B68     		ldr	r3, [r7, #4]
 132 003a 03F00703 		and	r3, r3, #7
 133              		.loc 1 147 7
 134 003e 002B     		cmp	r3, #0
 135 0040 15D0     		beq	.L4
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Byte alignment required. */
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 136              		.loc 1 150 18
 137 0042 7B68     		ldr	r3, [r7, #4]
 138 0044 23F00703 		bic	r3, r3, #7
 139 0048 0833     		adds	r3, r3, #8
 140 004a 7B60     		str	r3, [r7, #4]
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 141              		.loc 1 151 6
 142 004c 7B68     		ldr	r3, [r7, #4]
 143 004e 03F00703 		and	r3, r3, #7
 144 0052 002B     		cmp	r3, #0
 145 0054 0BD0     		beq	.L4
 146              	.LBB12:
 147              	.LBB13:
 148              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
ARM GAS  /tmp/ccRviNSh.s 			page 6


   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
ARM GAS  /tmp/ccRviNSh.s 			page 7


  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccRviNSh.s 			page 8


 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
ARM GAS  /tmp/ccRviNSh.s 			page 9


 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 149              		.loc 2 195 2
 150              		.syntax unified
 151              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 152 0056 4FF05003 			mov r3, #80												
 153 005a 83F31188 		msr basepri, r3											
 154 005e BFF36F8F 		isb														
 155 0062 BFF34F8F 		dsb														
 156              	
 157              	@ 0 "" 2
 158              		.thumb
 159              		.syntax unified
 160 0066 7B61     		str	r3, [r7, #20]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 161              		.loc 2 203 1
 162 0068 00BF     		nop
 163              	.L5:
 164              	.LBE13:
 165              	.LBE12:
 166              		.loc 1 151 6 discriminator 1
 167 006a 00BF     		nop
 168 006c FDE7     		b	.L5
 169              	.L4:
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccRviNSh.s 			page 10


 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 170              		.loc 1 163 6
 171 006e 7B68     		ldr	r3, [r7, #4]
 172 0070 002B     		cmp	r3, #0
 173 0072 6FD0     		beq	.L3
 174              		.loc 1 163 45 discriminator 1
 175 0074 454B     		ldr	r3, .L16+8
 176 0076 1B68     		ldr	r3, [r3]
 177              		.loc 1 163 28 discriminator 1
 178 0078 7A68     		ldr	r2, [r7, #4]
 179 007a 9A42     		cmp	r2, r3
 180 007c 6AD8     		bhi	.L3
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Traverse the list from the start	(lowest address) block until
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				one	of adequate size is found. */
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxPreviousBlock = &xStart;
 181              		.loc 1 167 21
 182 007e 444B     		ldr	r3, .L16+12
 183 0080 3B62     		str	r3, [r7, #32]
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = xStart.pxNextFreeBlock;
 184              		.loc 1 168 13
 185 0082 434B     		ldr	r3, .L16+12
 186 0084 1B68     		ldr	r3, [r3]
 187 0086 7B62     		str	r3, [r7, #36]
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 188              		.loc 1 169 10
 189 0088 04E0     		b	.L6
 190              	.L8:
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock = pxBlock;
 191              		.loc 1 171 22
 192 008a 7B6A     		ldr	r3, [r7, #36]
 193 008c 3B62     		str	r3, [r7, #32]
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 194              		.loc 1 172 14
 195 008e 7B6A     		ldr	r3, [r7, #36]
 196 0090 1B68     		ldr	r3, [r3]
 197 0092 7B62     		str	r3, [r7, #36]
 198              	.L6:
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 199              		.loc 1 169 21
 200 0094 7B6A     		ldr	r3, [r7, #36]
 201 0096 5B68     		ldr	r3, [r3, #4]
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 202              		.loc 1 169 50
 203 0098 7A68     		ldr	r2, [r7, #4]
 204 009a 9A42     		cmp	r2, r3
 205 009c 03D9     		bls	.L7
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 206              		.loc 1 169 62 discriminator 1
ARM GAS  /tmp/ccRviNSh.s 			page 11


 207 009e 7B6A     		ldr	r3, [r7, #36]
 208 00a0 1B68     		ldr	r3, [r3]
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 209              		.loc 1 169 50 discriminator 1
 210 00a2 002B     		cmp	r3, #0
 211 00a4 F1D1     		bne	.L8
 212              	.L7:
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* If the end marker was reached then a block of adequate size
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				was	not found. */
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock != pxEnd )
 213              		.loc 1 177 17
 214 00a6 374B     		ldr	r3, .L16
 215 00a8 1B68     		ldr	r3, [r3]
 216              		.loc 1 177 7
 217 00aa 7A6A     		ldr	r2, [r7, #36]
 218 00ac 9A42     		cmp	r2, r3
 219 00ae 51D0     		beq	.L3
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Return the memory space pointed to - jumping over the
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					BlockLink_t structure at its start. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 220              		.loc 1 181 61
 221 00b0 3B6A     		ldr	r3, [r7, #32]
 222 00b2 1B68     		ldr	r3, [r3]
 223              		.loc 1 181 17
 224 00b4 0822     		movs	r2, #8
 225              		.loc 1 181 15
 226 00b6 1344     		add	r3, r3, r2
 227 00b8 FB61     		str	r3, [r7, #28]
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* This block is being returned for use so must be taken out
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					of the list of free blocks. */
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 228              		.loc 1 185 48
 229 00ba 7B6A     		ldr	r3, [r7, #36]
 230 00bc 1A68     		ldr	r2, [r3]
 231              		.loc 1 185 39
 232 00be 3B6A     		ldr	r3, [r7, #32]
 233 00c0 1A60     		str	r2, [r3]
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* If the block is larger than required it can be split into
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					two. */
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 234              		.loc 1 189 19
 235 00c2 7B6A     		ldr	r3, [r7, #36]
 236 00c4 5A68     		ldr	r2, [r3, #4]
 237              		.loc 1 189 32
 238 00c6 7B68     		ldr	r3, [r7, #4]
 239 00c8 D21A     		subs	r2, r2, r3
 240              		.loc 1 189 50
 241 00ca 0823     		movs	r3, #8
 242 00cc 5B00     		lsls	r3, r3, #1
 243              		.loc 1 189 8
 244 00ce 9A42     		cmp	r2, r3
 245 00d0 20D9     		bls	.L9
ARM GAS  /tmp/ccRviNSh.s 			page 12


 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* This block is to be split into two.  Create a new
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						block following the number of bytes requested. The void
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						cast is used to prevent byte alignment warnings from the
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						compiler. */
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 246              		.loc 1 195 22
 247 00d2 7A6A     		ldr	r2, [r7, #36]
 248 00d4 7B68     		ldr	r3, [r7, #4]
 249 00d6 1344     		add	r3, r3, r2
 250 00d8 BB61     		str	r3, [r7, #24]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 251              		.loc 1 196 7
 252 00da BB69     		ldr	r3, [r7, #24]
 253 00dc 03F00703 		and	r3, r3, #7
 254 00e0 002B     		cmp	r3, #0
 255 00e2 0BD0     		beq	.L10
 256              	.LBB14:
 257              	.LBB15:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 258              		.loc 2 195 2
 259              		.syntax unified
 260              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 261 00e4 4FF05003 			mov r3, #80												
 262 00e8 83F31188 		msr basepri, r3											
 263 00ec BFF36F8F 		isb														
 264 00f0 BFF34F8F 		dsb														
 265              	
 266              	@ 0 "" 2
 267              		.thumb
 268              		.syntax unified
 269 00f4 3B61     		str	r3, [r7, #16]
 270              		.loc 2 203 1
 271 00f6 00BF     		nop
 272              	.L11:
 273              	.LBE15:
 274              	.LBE14:
 275              		.loc 1 196 7 discriminator 3
 276 00f8 00BF     		nop
 277 00fa FDE7     		b	.L11
 278              	.L10:
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Calculate the sizes of two blocks split from the
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						single block. */
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 279              		.loc 1 200 43
 280 00fc 7B6A     		ldr	r3, [r7, #36]
 281 00fe 5A68     		ldr	r2, [r3, #4]
 282              		.loc 1 200 56
 283 0100 7B68     		ldr	r3, [r7, #4]
 284 0102 D21A     		subs	r2, r2, r3
 285              		.loc 1 200 34
 286 0104 BB69     		ldr	r3, [r7, #24]
 287 0106 5A60     		str	r2, [r3, #4]
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 288              		.loc 1 201 27
 289 0108 7B6A     		ldr	r3, [r7, #36]
ARM GAS  /tmp/ccRviNSh.s 			page 13


 290 010a 7A68     		ldr	r2, [r7, #4]
 291 010c 5A60     		str	r2, [r3, #4]
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Insert the new block into the list of free blocks. */
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 292              		.loc 1 204 7
 293 010e B869     		ldr	r0, [r7, #24]
 294 0110 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 295              	.L9:
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 296              		.loc 1 211 26
 297 0114 1D4B     		ldr	r3, .L16+8
 298 0116 1A68     		ldr	r2, [r3]
 299              		.loc 1 211 36
 300 0118 7B6A     		ldr	r3, [r7, #36]
 301 011a 5B68     		ldr	r3, [r3, #4]
 302              		.loc 1 211 26
 303 011c D31A     		subs	r3, r2, r3
 304 011e 1B4A     		ldr	r2, .L16+8
 305 0120 1360     		str	r3, [r2]
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 306              		.loc 1 213 30
 307 0122 1A4B     		ldr	r3, .L16+8
 308 0124 1A68     		ldr	r2, [r3]
 309 0126 1B4B     		ldr	r3, .L16+16
 310 0128 1B68     		ldr	r3, [r3]
 311              		.loc 1 213 8
 312 012a 9A42     		cmp	r2, r3
 313 012c 03D2     		bcs	.L12
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 314              		.loc 1 215 38
 315 012e 174B     		ldr	r3, .L16+8
 316 0130 1B68     		ldr	r3, [r3]
 317 0132 184A     		ldr	r2, .L16+16
 318 0134 1360     		str	r3, [r2]
 319              	.L12:
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* The block is being returned - it is allocated and owned
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					by the application and has no "next" block. */
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 320              		.loc 1 224 13
 321 0136 7B6A     		ldr	r3, [r7, #36]
 322 0138 5A68     		ldr	r2, [r3, #4]
 323              		.loc 1 224 26
ARM GAS  /tmp/ccRviNSh.s 			page 14


 324 013a 134B     		ldr	r3, .L16+4
 325 013c 1B68     		ldr	r3, [r3]
 326 013e 1A43     		orrs	r2, r2, r3
 327 0140 7B6A     		ldr	r3, [r7, #36]
 328 0142 5A60     		str	r2, [r3, #4]
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 329              		.loc 1 225 31
 330 0144 7B6A     		ldr	r3, [r7, #36]
 331 0146 0022     		movs	r2, #0
 332 0148 1A60     		str	r2, [r3]
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xNumberOfSuccessfulAllocations++;
 333              		.loc 1 226 36
 334 014a 134B     		ldr	r3, .L16+20
 335 014c 1B68     		ldr	r3, [r3]
 336 014e 0133     		adds	r3, r3, #1
 337 0150 114A     		ldr	r2, .L16+20
 338 0152 1360     		str	r3, [r2]
 339              	.L3:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		traceMALLOC( pvReturn, xWantedSize );
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	( void ) xTaskResumeAll();
 340              		.loc 1 245 11
 341 0154 FFF7FEFF 		bl	xTaskResumeAll
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pvReturn == NULL )
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			extern void vApplicationMallocFailedHook( void );
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			vApplicationMallocFailedHook();
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#endif
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 342              		.loc 1 261 2
 343 0158 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccRviNSh.s 			page 15


 344 015a 03F00703 		and	r3, r3, #7
 345 015e 002B     		cmp	r3, #0
 346 0160 0BD0     		beq	.L13
 347              	.LBB16:
 348              	.LBB17:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 349              		.loc 2 195 2
 350              		.syntax unified
 351              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 352 0162 4FF05003 			mov r3, #80												
 353 0166 83F31188 		msr basepri, r3											
 354 016a BFF36F8F 		isb														
 355 016e BFF34F8F 		dsb														
 356              	
 357              	@ 0 "" 2
 358              		.thumb
 359              		.syntax unified
 360 0172 FB60     		str	r3, [r7, #12]
 361              		.loc 2 203 1
 362 0174 00BF     		nop
 363              	.L14:
 364              	.LBE17:
 365              	.LBE16:
 366              		.loc 1 261 2 discriminator 5
 367 0176 00BF     		nop
 368 0178 FDE7     		b	.L14
 369              	.L13:
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 370              		.loc 1 262 9
 371 017a FB69     		ldr	r3, [r7, #28]
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 372              		.loc 1 263 1
 373 017c 1846     		mov	r0, r3
 374 017e 2837     		adds	r7, r7, #40
 375              	.LCFI3:
 376              		.cfi_def_cfa_offset 8
 377 0180 BD46     		mov	sp, r7
 378              	.LCFI4:
 379              		.cfi_def_cfa_register 13
 380              		@ sp needed
 381 0182 80BD     		pop	{r7, pc}
 382              	.L17:
 383              		.align	2
 384              	.L16:
 385 0184 00000000 		.word	pxEnd
 386 0188 00000000 		.word	xBlockAllocatedBit
 387 018c 00000000 		.word	xFreeBytesRemaining
 388 0190 00000000 		.word	xStart
 389 0194 00000000 		.word	xMinimumEverFreeBytesRemaining
 390 0198 00000000 		.word	xNumberOfSuccessfulAllocations
 391              		.cfi_endproc
 392              	.LFE4:
 394              		.section	.text.vPortFree,"ax",%progbits
 395              		.align	1
 396              		.global	vPortFree
 397              		.syntax unified
 398              		.thumb
ARM GAS  /tmp/ccRviNSh.s 			page 16


 399              		.thumb_func
 401              	vPortFree:
 402              	.LFB5:
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortFree( void *pv )
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 403              		.loc 1 267 1
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 24
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407 0000 80B5     		push	{r7, lr}
 408              	.LCFI5:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 86B0     		sub	sp, sp, #24
 413              	.LCFI6:
 414              		.cfi_def_cfa_offset 32
 415 0004 00AF     		add	r7, sp, #0
 416              	.LCFI7:
 417              		.cfi_def_cfa_register 7
 418 0006 7860     		str	r0, [r7, #4]
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
 419              		.loc 1 268 10
 420 0008 7B68     		ldr	r3, [r7, #4]
 421 000a 7B61     		str	r3, [r7, #20]
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxLink;
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pv != NULL )
 422              		.loc 1 271 4
 423 000c 7B68     		ldr	r3, [r7, #4]
 424 000e 002B     		cmp	r3, #0
 425 0010 4FD0     		beq	.L24
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		before it. */
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		puc -= xHeapStructSize;
 426              		.loc 1 275 7
 427 0012 0823     		movs	r3, #8
 428 0014 5B42     		rsbs	r3, r3, #0
 429 0016 7A69     		ldr	r2, [r7, #20]
 430 0018 1344     		add	r3, r3, r2
 431 001a 7B61     		str	r3, [r7, #20]
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxLink = ( void * ) puc;
 432              		.loc 1 278 10
 433 001c 7B69     		ldr	r3, [r7, #20]
 434 001e 3B61     		str	r3, [r7, #16]
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the block is actually allocated. */
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 435              		.loc 1 281 3
 436 0020 3B69     		ldr	r3, [r7, #16]
 437 0022 5A68     		ldr	r2, [r3, #4]
 438 0024 254B     		ldr	r3, .L25
ARM GAS  /tmp/ccRviNSh.s 			page 17


 439 0026 1B68     		ldr	r3, [r3]
 440 0028 1340     		ands	r3, r3, r2
 441 002a 002B     		cmp	r3, #0
 442 002c 0BD1     		bne	.L20
 443              	.LBB18:
 444              	.LBB19:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 445              		.loc 2 195 2
 446              		.syntax unified
 447              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 448 002e 4FF05003 			mov r3, #80												
 449 0032 83F31188 		msr basepri, r3											
 450 0036 BFF36F8F 		isb														
 451 003a BFF34F8F 		dsb														
 452              	
 453              	@ 0 "" 2
 454              		.thumb
 455              		.syntax unified
 456 003e FB60     		str	r3, [r7, #12]
 457              		.loc 2 203 1
 458 0040 00BF     		nop
 459              	.L21:
 460              	.LBE19:
 461              	.LBE18:
 462              		.loc 1 281 3 discriminator 1
 463 0042 00BF     		nop
 464 0044 FDE7     		b	.L21
 465              	.L20:
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 466              		.loc 1 282 3
 467 0046 3B69     		ldr	r3, [r7, #16]
 468 0048 1B68     		ldr	r3, [r3]
 469 004a 002B     		cmp	r3, #0
 470 004c 0BD0     		beq	.L22
 471              	.LBB20:
 472              	.LBB21:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 473              		.loc 2 195 2
 474              		.syntax unified
 475              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 476 004e 4FF05003 			mov r3, #80												
 477 0052 83F31188 		msr basepri, r3											
 478 0056 BFF36F8F 		isb														
 479 005a BFF34F8F 		dsb														
 480              	
 481              	@ 0 "" 2
 482              		.thumb
 483              		.syntax unified
 484 005e BB60     		str	r3, [r7, #8]
 485              		.loc 2 203 1
 486 0060 00BF     		nop
 487              	.L23:
 488              	.LBE21:
 489              	.LBE20:
 490              		.loc 1 282 3 discriminator 2
 491 0062 00BF     		nop
 492 0064 FDE7     		b	.L23
ARM GAS  /tmp/ccRviNSh.s 			page 18


 493              	.L22:
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 494              		.loc 1 284 15
 495 0066 3B69     		ldr	r3, [r7, #16]
 496 0068 5A68     		ldr	r2, [r3, #4]
 497              		.loc 1 284 28
 498 006a 144B     		ldr	r3, .L25
 499 006c 1B68     		ldr	r3, [r3]
 500 006e 1340     		ands	r3, r3, r2
 501              		.loc 1 284 5
 502 0070 002B     		cmp	r3, #0
 503 0072 1ED0     		beq	.L24
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 504              		.loc 1 286 14
 505 0074 3B69     		ldr	r3, [r7, #16]
 506 0076 1B68     		ldr	r3, [r3]
 507              		.loc 1 286 6
 508 0078 002B     		cmp	r3, #0
 509 007a 1AD1     		bne	.L24
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* The block is being returned to the heap - it is no longer
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				allocated. */
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 510              		.loc 1 290 11
 511 007c 3B69     		ldr	r3, [r7, #16]
 512 007e 5A68     		ldr	r2, [r3, #4]
 513              		.loc 1 290 27
 514 0080 0E4B     		ldr	r3, .L25
 515 0082 1B68     		ldr	r3, [r3]
 516 0084 DB43     		mvns	r3, r3
 517              		.loc 1 290 24
 518 0086 1A40     		ands	r2, r2, r3
 519 0088 3B69     		ldr	r3, [r7, #16]
 520 008a 5A60     		str	r2, [r3, #4]
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				vTaskSuspendAll();
 521              		.loc 1 292 5
 522 008c FFF7FEFF 		bl	vTaskSuspendAll
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Add this block to the list of free blocks. */
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 523              		.loc 1 295 35
 524 0090 3B69     		ldr	r3, [r7, #16]
 525 0092 5A68     		ldr	r2, [r3, #4]
 526              		.loc 1 295 26
 527 0094 0A4B     		ldr	r3, .L25+4
 528 0096 1B68     		ldr	r3, [r3]
 529 0098 1344     		add	r3, r3, r2
 530 009a 094A     		ldr	r2, .L25+4
 531 009c 1360     		str	r3, [r2]
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 532              		.loc 1 297 6
 533 009e 3869     		ldr	r0, [r7, #16]
 534 00a0 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
ARM GAS  /tmp/ccRviNSh.s 			page 19


 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xNumberOfSuccessfulFrees++;
 535              		.loc 1 298 30
 536 00a4 074B     		ldr	r3, .L25+8
 537 00a6 1B68     		ldr	r3, [r3]
 538 00a8 0133     		adds	r3, r3, #1
 539 00aa 064A     		ldr	r2, .L25+8
 540 00ac 1360     		str	r3, [r2]
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				( void ) xTaskResumeAll();
 541              		.loc 1 300 14
 542 00ae FFF7FEFF 		bl	xTaskResumeAll
 543              	.L24:
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 304:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 544              		.loc 1 312 1
 545 00b2 00BF     		nop
 546 00b4 1837     		adds	r7, r7, #24
 547              	.LCFI8:
 548              		.cfi_def_cfa_offset 8
 549 00b6 BD46     		mov	sp, r7
 550              	.LCFI9:
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 00b8 80BD     		pop	{r7, pc}
 554              	.L26:
 555 00ba 00BF     		.align	2
 556              	.L25:
 557 00bc 00000000 		.word	xBlockAllocatedBit
 558 00c0 00000000 		.word	xFreeBytesRemaining
 559 00c4 00000000 		.word	xNumberOfSuccessfulFrees
 560              		.cfi_endproc
 561              	.LFE5:
 563              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 564              		.align	1
 565              		.global	xPortGetFreeHeapSize
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	xPortGetFreeHeapSize:
 571              	.LFB6:
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetFreeHeapSize( void )
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 572              		.loc 1 316 1
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccRviNSh.s 			page 20


 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              	.LCFI10:
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 00AF     		add	r7, sp, #0
 582              	.LCFI11:
 583              		.cfi_def_cfa_register 7
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 584              		.loc 1 317 9
 585 0004 034B     		ldr	r3, .L29
 586 0006 1B68     		ldr	r3, [r3]
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 587              		.loc 1 318 1
 588 0008 1846     		mov	r0, r3
 589 000a BD46     		mov	sp, r7
 590              	.LCFI12:
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 000c 5DF8047B 		ldr	r7, [sp], #4
 594              	.LCFI13:
 595              		.cfi_restore 7
 596              		.cfi_def_cfa_offset 0
 597 0010 7047     		bx	lr
 598              	.L30:
 599 0012 00BF     		.align	2
 600              	.L29:
 601 0014 00000000 		.word	xFreeBytesRemaining
 602              		.cfi_endproc
 603              	.LFE6:
 605              		.section	.text.xPortGetMinimumEverFreeHeapSize,"ax",%progbits
 606              		.align	1
 607              		.global	xPortGetMinimumEverFreeHeapSize
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 612              	xPortGetMinimumEverFreeHeapSize:
 613              	.LFB7:
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetMinimumEverFreeHeapSize( void )
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 614              		.loc 1 322 1
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619 0000 80B4     		push	{r7}
 620              	.LCFI14:
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 7, -4
 623 0002 00AF     		add	r7, sp, #0
 624              	.LCFI15:
 625              		.cfi_def_cfa_register 7
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 626              		.loc 1 323 9
ARM GAS  /tmp/ccRviNSh.s 			page 21


 627 0004 034B     		ldr	r3, .L33
 628 0006 1B68     		ldr	r3, [r3]
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 629              		.loc 1 324 1
 630 0008 1846     		mov	r0, r3
 631 000a BD46     		mov	sp, r7
 632              	.LCFI16:
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 000c 5DF8047B 		ldr	r7, [sp], #4
 636              	.LCFI17:
 637              		.cfi_restore 7
 638              		.cfi_def_cfa_offset 0
 639 0010 7047     		bx	lr
 640              	.L34:
 641 0012 00BF     		.align	2
 642              	.L33:
 643 0014 00000000 		.word	xMinimumEverFreeBytesRemaining
 644              		.cfi_endproc
 645              	.LFE7:
 647              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 648              		.align	1
 649              		.global	vPortInitialiseBlocks
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	vPortInitialiseBlocks:
 655              	.LFB8:
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortInitialiseBlocks( void )
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 656              		.loc 1 328 1
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661 0000 80B4     		push	{r7}
 662              	.LCFI18:
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 00AF     		add	r7, sp, #0
 666              	.LCFI19:
 667              		.cfi_def_cfa_register 7
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 668              		.loc 1 330 1
 669 0004 00BF     		nop
 670 0006 BD46     		mov	sp, r7
 671              	.LCFI20:
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0008 5DF8047B 		ldr	r7, [sp], #4
 675              	.LCFI21:
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 000c 7047     		bx	lr
ARM GAS  /tmp/ccRviNSh.s 			page 22


 679              		.cfi_endproc
 680              	.LFE8:
 682              		.section	.text.prvHeapInit,"ax",%progbits
 683              		.align	1
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 688              	prvHeapInit:
 689              	.LFB9:
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void )
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 690              		.loc 1 334 1
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 16
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695 0000 80B4     		push	{r7}
 696              	.LCFI22:
 697              		.cfi_def_cfa_offset 4
 698              		.cfi_offset 7, -4
 699 0002 85B0     		sub	sp, sp, #20
 700              	.LCFI23:
 701              		.cfi_def_cfa_offset 24
 702 0004 00AF     		add	r7, sp, #0
 703              	.LCFI24:
 704              		.cfi_def_cfa_register 7
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxFirstFreeBlock;
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *pucAlignedHeap;
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t uxAddress;
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 705              		.loc 1 338 8
 706 0006 4FF40063 		mov	r3, #2048
 707 000a BB60     		str	r3, [r7, #8]
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( size_t ) ucHeap;
 708              		.loc 1 341 12
 709 000c 274B     		ldr	r3, .L38
 710 000e FB60     		str	r3, [r7, #12]
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 711              		.loc 1 343 18
 712 0010 FB68     		ldr	r3, [r7, #12]
 713 0012 03F00703 		and	r3, r3, #7
 714              		.loc 1 343 4
 715 0016 002B     		cmp	r3, #0
 716 0018 0CD0     		beq	.L37
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 717              		.loc 1 345 13
 718 001a FB68     		ldr	r3, [r7, #12]
 719 001c 0733     		adds	r3, r3, #7
 720 001e FB60     		str	r3, [r7, #12]
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 721              		.loc 1 346 13
ARM GAS  /tmp/ccRviNSh.s 			page 23


 722 0020 FB68     		ldr	r3, [r7, #12]
 723 0022 23F00703 		bic	r3, r3, #7
 724 0026 FB60     		str	r3, [r7, #12]
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 725              		.loc 1 347 18
 726 0028 BA68     		ldr	r2, [r7, #8]
 727 002a FB68     		ldr	r3, [r7, #12]
 728 002c D31A     		subs	r3, r2, r3
 729              		.loc 1 347 33
 730 002e 1F4A     		ldr	r2, .L38
 731              		.loc 1 347 18
 732 0030 1344     		add	r3, r3, r2
 733 0032 BB60     		str	r3, [r7, #8]
 734              	.L37:
 348:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
 735              		.loc 1 350 17
 736 0034 FB68     		ldr	r3, [r7, #12]
 737 0036 7B60     		str	r3, [r7, #4]
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 353:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 738              		.loc 1 354 25
 739 0038 1D4A     		ldr	r2, .L38+4
 740 003a 7B68     		ldr	r3, [r7, #4]
 741 003c 1360     		str	r3, [r2]
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.xBlockSize = ( size_t ) 0;
 742              		.loc 1 355 20
 743 003e 1C4B     		ldr	r3, .L38+4
 744 0040 0022     		movs	r2, #0
 745 0042 5A60     		str	r2, [r3, #4]
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	at the end of the heap space. */
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 746              		.loc 1 359 16
 747 0044 7B68     		ldr	r3, [r7, #4]
 748              		.loc 1 359 12
 749 0046 BA68     		ldr	r2, [r7, #8]
 750 0048 1344     		add	r3, r3, r2
 751 004a FB60     		str	r3, [r7, #12]
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress -= xHeapStructSize;
 752              		.loc 1 360 12
 753 004c 0822     		movs	r2, #8
 754 004e FB68     		ldr	r3, [r7, #12]
 755 0050 9B1A     		subs	r3, r3, r2
 756 0052 FB60     		str	r3, [r7, #12]
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 757              		.loc 1 361 12
 758 0054 FB68     		ldr	r3, [r7, #12]
 759 0056 23F00703 		bic	r3, r3, #7
 760 005a FB60     		str	r3, [r7, #12]
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd = ( void * ) uxAddress;
 761              		.loc 1 362 10
 762 005c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRviNSh.s 			page 24


 763              		.loc 1 362 8
 764 005e 154A     		ldr	r2, .L38+8
 765 0060 1360     		str	r3, [r2]
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->xBlockSize = 0;
 766              		.loc 1 363 7
 767 0062 144B     		ldr	r3, .L38+8
 768 0064 1B68     		ldr	r3, [r3]
 769              		.loc 1 363 20
 770 0066 0022     		movs	r2, #0
 771 0068 5A60     		str	r2, [r3, #4]
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->pxNextFreeBlock = NULL;
 772              		.loc 1 364 7
 773 006a 124B     		ldr	r3, .L38+8
 774 006c 1B68     		ldr	r3, [r3]
 775              		.loc 1 364 25
 776 006e 0022     		movs	r2, #0
 777 0070 1A60     		str	r2, [r3]
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* To start with there is a single free block that is sized to take up the
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	entire heap space, minus the space taken by pxEnd. */
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 778              		.loc 1 368 19
 779 0072 7B68     		ldr	r3, [r7, #4]
 780 0074 3B60     		str	r3, [r7]
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 781              		.loc 1 369 45
 782 0076 3B68     		ldr	r3, [r7]
 783              		.loc 1 369 43
 784 0078 FA68     		ldr	r2, [r7, #12]
 785 007a D21A     		subs	r2, r2, r3
 786              		.loc 1 369 31
 787 007c 3B68     		ldr	r3, [r7]
 788 007e 5A60     		str	r2, [r3, #4]
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 789              		.loc 1 370 36
 790 0080 0C4B     		ldr	r3, .L38+8
 791 0082 1A68     		ldr	r2, [r3]
 792 0084 3B68     		ldr	r3, [r7]
 793 0086 1A60     		str	r2, [r3]
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 794              		.loc 1 373 51
 795 0088 3B68     		ldr	r3, [r7]
 796 008a 5B68     		ldr	r3, [r3, #4]
 797              		.loc 1 373 33
 798 008c 0A4A     		ldr	r2, .L38+12
 799 008e 1360     		str	r3, [r2]
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800              		.loc 1 374 40
 801 0090 3B68     		ldr	r3, [r7]
 802 0092 5B68     		ldr	r3, [r3, #4]
 803              		.loc 1 374 22
 804 0094 094A     		ldr	r2, .L38+16
 805 0096 1360     		str	r3, [r2]
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Work out the position of the top bit in a size_t variable. */
ARM GAS  /tmp/ccRviNSh.s 			page 25


 377:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 806              		.loc 1 377 21
 807 0098 094B     		ldr	r3, .L38+20
 808 009a 4FF00042 		mov	r2, #-2147483648
 809 009e 1A60     		str	r2, [r3]
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 810              		.loc 1 378 1
 811 00a0 00BF     		nop
 812 00a2 1437     		adds	r7, r7, #20
 813              	.LCFI25:
 814              		.cfi_def_cfa_offset 4
 815 00a4 BD46     		mov	sp, r7
 816              	.LCFI26:
 817              		.cfi_def_cfa_register 13
 818              		@ sp needed
 819 00a6 5DF8047B 		ldr	r7, [sp], #4
 820              	.LCFI27:
 821              		.cfi_restore 7
 822              		.cfi_def_cfa_offset 0
 823 00aa 7047     		bx	lr
 824              	.L39:
 825              		.align	2
 826              	.L38:
 827 00ac 00000000 		.word	ucHeap
 828 00b0 00000000 		.word	xStart
 829 00b4 00000000 		.word	pxEnd
 830 00b8 00000000 		.word	xMinimumEverFreeBytesRemaining
 831 00bc 00000000 		.word	xFreeBytesRemaining
 832 00c0 00000000 		.word	xBlockAllocatedBit
 833              		.cfi_endproc
 834              	.LFE9:
 836              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 837              		.align	1
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 842              	prvInsertBlockIntoFreeList:
 843              	.LFB10:
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 844              		.loc 1 382 1
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 16
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849 0000 80B4     		push	{r7}
 850              	.LCFI28:
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 7, -4
 853 0002 85B0     		sub	sp, sp, #20
 854              	.LCFI29:
 855              		.cfi_def_cfa_offset 24
 856 0004 00AF     		add	r7, sp, #0
 857              	.LCFI30:
 858              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccRviNSh.s 			page 26


 859 0006 7860     		str	r0, [r7, #4]
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxIterator;
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc;
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Iterate through the list until a block is found that has a higher address
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	than the block being inserted. */
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 860              		.loc 1 388 18
 861 0008 284B     		ldr	r3, .L49
 862 000a FB60     		str	r3, [r7, #12]
 863              		.loc 1 388 2
 864 000c 02E0     		b	.L41
 865              	.L42:
 866              		.loc 1 388 87 discriminator 3
 867 000e FB68     		ldr	r3, [r7, #12]
 868 0010 1B68     		ldr	r3, [r3]
 869 0012 FB60     		str	r3, [r7, #12]
 870              	.L41:
 871              		.loc 1 388 39 discriminator 1
 872 0014 FB68     		ldr	r3, [r7, #12]
 873 0016 1B68     		ldr	r3, [r3]
 874              		.loc 1 388 57 discriminator 1
 875 0018 7A68     		ldr	r2, [r7, #4]
 876 001a 9A42     		cmp	r2, r3
 877 001c F7D8     		bhi	.L42
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Nothing to do here, just iterate to the right position. */
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted after
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxIterator;
 878              		.loc 1 395 6
 879 001e FB68     		ldr	r3, [r7, #12]
 880 0020 BB60     		str	r3, [r7, #8]
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 881              		.loc 1 396 24
 882 0022 FB68     		ldr	r3, [r7, #12]
 883 0024 5B68     		ldr	r3, [r3, #4]
 884              		.loc 1 396 12
 885 0026 BA68     		ldr	r2, [r7, #8]
 886 0028 1344     		add	r3, r3, r2
 887              		.loc 1 396 4
 888 002a 7A68     		ldr	r2, [r7, #4]
 889 002c 9A42     		cmp	r2, r3
 890 002e 08D1     		bne	.L43
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 891              		.loc 1 398 13
 892 0030 FB68     		ldr	r3, [r7, #12]
 893 0032 5A68     		ldr	r2, [r3, #4]
 894              		.loc 1 398 44
 895 0034 7B68     		ldr	r3, [r7, #4]
 896 0036 5B68     		ldr	r3, [r3, #4]
 897              		.loc 1 398 26
 898 0038 1A44     		add	r2, r2, r3
 899 003a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRviNSh.s 			page 27


 900 003c 5A60     		str	r2, [r3, #4]
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert = pxIterator;
 901              		.loc 1 399 19
 902 003e FB68     		ldr	r3, [r7, #12]
 903 0040 7B60     		str	r3, [r7, #4]
 904              	.L43:
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 401:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted before
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 905              		.loc 1 408 6
 906 0042 7B68     		ldr	r3, [r7, #4]
 907 0044 BB60     		str	r3, [r7, #8]
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 908              		.loc 1 409 29
 909 0046 7B68     		ldr	r3, [r7, #4]
 910 0048 5B68     		ldr	r3, [r3, #4]
 911              		.loc 1 409 12
 912 004a BA68     		ldr	r2, [r7, #8]
 913 004c 1A44     		add	r2, r2, r3
 914              		.loc 1 409 71
 915 004e FB68     		ldr	r3, [r7, #12]
 916 0050 1B68     		ldr	r3, [r3]
 917              		.loc 1 409 4
 918 0052 9A42     		cmp	r2, r3
 919 0054 18D1     		bne	.L44
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 920              		.loc 1 411 17
 921 0056 FB68     		ldr	r3, [r7, #12]
 922 0058 1A68     		ldr	r2, [r3]
 923              		.loc 1 411 35
 924 005a 154B     		ldr	r3, .L49+4
 925 005c 1B68     		ldr	r3, [r3]
 926              		.loc 1 411 5
 927 005e 9A42     		cmp	r2, r3
 928 0060 0DD0     		beq	.L45
 412:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* Form one big block from the two blocks. */
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 929              		.loc 1 414 19
 930 0062 7B68     		ldr	r3, [r7, #4]
 931 0064 5A68     		ldr	r2, [r3, #4]
 932              		.loc 1 414 45
 933 0066 FB68     		ldr	r3, [r7, #12]
 934 0068 1B68     		ldr	r3, [r3]
 935              		.loc 1 414 62
 936 006a 5B68     		ldr	r3, [r3, #4]
 937              		.loc 1 414 32
 938 006c 1A44     		add	r2, r2, r3
 939 006e 7B68     		ldr	r3, [r7, #4]
 940 0070 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccRviNSh.s 			page 28


 415:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 941              		.loc 1 415 49
 942 0072 FB68     		ldr	r3, [r7, #12]
 943 0074 1B68     		ldr	r3, [r3]
 944              		.loc 1 415 66
 945 0076 1A68     		ldr	r2, [r3]
 946              		.loc 1 415 37
 947 0078 7B68     		ldr	r3, [r7, #4]
 948 007a 1A60     		str	r2, [r3]
 949 007c 08E0     		b	.L46
 950              	.L45:
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 951              		.loc 1 419 37
 952 007e 0C4B     		ldr	r3, .L49+4
 953 0080 1A68     		ldr	r2, [r3]
 954 0082 7B68     		ldr	r3, [r7, #4]
 955 0084 1A60     		str	r2, [r3]
 956 0086 03E0     		b	.L46
 957              	.L44:
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 421:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 958              		.loc 1 424 48
 959 0088 FB68     		ldr	r3, [r7, #12]
 960 008a 1A68     		ldr	r2, [r3]
 961              		.loc 1 424 36
 962 008c 7B68     		ldr	r3, [r7, #4]
 963 008e 1A60     		str	r2, [r3]
 964              	.L46:
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 427:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	already been set, and should not be set here as that would make it point
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	to itself. */
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pxIterator != pxBlockToInsert )
 965              		.loc 1 431 4
 966 0090 FA68     		ldr	r2, [r7, #12]
 967 0092 7B68     		ldr	r3, [r7, #4]
 968 0094 9A42     		cmp	r2, r3
 969 0096 02D0     		beq	.L48
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 970              		.loc 1 433 31
 971 0098 FB68     		ldr	r3, [r7, #12]
 972 009a 7A68     		ldr	r2, [r7, #4]
 973 009c 1A60     		str	r2, [r3]
 974              	.L48:
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 436:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 437:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccRviNSh.s 			page 29


 438:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 439:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 975              		.loc 1 439 1
 976 009e 00BF     		nop
 977 00a0 1437     		adds	r7, r7, #20
 978              	.LCFI31:
 979              		.cfi_def_cfa_offset 4
 980 00a2 BD46     		mov	sp, r7
 981              	.LCFI32:
 982              		.cfi_def_cfa_register 13
 983              		@ sp needed
 984 00a4 5DF8047B 		ldr	r7, [sp], #4
 985              	.LCFI33:
 986              		.cfi_restore 7
 987              		.cfi_def_cfa_offset 0
 988 00a8 7047     		bx	lr
 989              	.L50:
 990 00aa 00BF     		.align	2
 991              	.L49:
 992 00ac 00000000 		.word	xStart
 993 00b0 00000000 		.word	pxEnd
 994              		.cfi_endproc
 995              	.LFE10:
 997              		.section	.text.vPortGetHeapStats,"ax",%progbits
 998              		.align	1
 999              		.global	vPortGetHeapStats
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	vPortGetHeapStats:
 1005              	.LFB11:
 440:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortGetHeapStats( HeapStats_t *pxHeapStats )
 443:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 1006              		.loc 1 443 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 24
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI34:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 86B0     		sub	sp, sp, #24
 1016              	.LCFI35:
 1017              		.cfi_def_cfa_offset 32
 1018 0004 00AF     		add	r7, sp, #0
 1019              	.LCFI36:
 1020              		.cfi_def_cfa_register 7
 1021 0006 7860     		str	r0, [r7, #4]
 444:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock;
 445:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xBlocks = 0, xMaxSize = 0, xMinSize = portMAX_DELAY; /* portMAX_DELAY used as a portable way
 1022              		.loc 1 445 8
 1023 0008 0023     		movs	r3, #0
 1024 000a 3B61     		str	r3, [r7, #16]
 1025              		.loc 1 445 21
ARM GAS  /tmp/ccRviNSh.s 			page 30


 1026 000c 0023     		movs	r3, #0
 1027 000e FB60     		str	r3, [r7, #12]
 1028              		.loc 1 445 35
 1029 0010 4FF0FF33 		mov	r3, #-1
 1030 0014 BB60     		str	r3, [r7, #8]
 446:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
 1031              		.loc 1 447 2
 1032 0016 FFF7FEFF 		bl	vTaskSuspendAll
 448:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlock = xStart.pxNextFreeBlock;
 1033              		.loc 1 449 11
 1034 001a 224B     		ldr	r3, .L56
 1035 001c 1B68     		ldr	r3, [r3]
 1036 001e 7B61     		str	r3, [r7, #20]
 450:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 451:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* pxBlock will be NULL if the heap has not been initialised.  The heap
 452:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is initialised automatically when the first allocation is made. */
 453:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxBlock != NULL )
 1037              		.loc 1 453 5
 1038 0020 7B69     		ldr	r3, [r7, #20]
 1039 0022 002B     		cmp	r3, #0
 1040 0024 1AD0     		beq	.L52
 1041              	.L55:
 454:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			do
 456:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 457:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Increment the number of blocks and record the largest block seen
 458:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				so far. */
 459:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xBlocks++;
 1042              		.loc 1 459 12
 1043 0026 3B69     		ldr	r3, [r7, #16]
 1044 0028 0133     		adds	r3, r3, #1
 1045 002a 3B61     		str	r3, [r7, #16]
 460:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock->xBlockSize > xMaxSize )
 1046              		.loc 1 461 16
 1047 002c 7B69     		ldr	r3, [r7, #20]
 1048 002e 5B68     		ldr	r3, [r3, #4]
 1049              		.loc 1 461 7
 1050 0030 FA68     		ldr	r2, [r7, #12]
 1051 0032 9A42     		cmp	r2, r3
 1052 0034 02D2     		bcs	.L53
 462:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 463:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xMaxSize = pxBlock->xBlockSize;
 1053              		.loc 1 463 15
 1054 0036 7B69     		ldr	r3, [r7, #20]
 1055 0038 5B68     		ldr	r3, [r3, #4]
 1056 003a FB60     		str	r3, [r7, #12]
 1057              	.L53:
 464:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 465:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock->xBlockSize < xMinSize )
 1058              		.loc 1 466 16
 1059 003c 7B69     		ldr	r3, [r7, #20]
 1060 003e 5B68     		ldr	r3, [r3, #4]
 1061              		.loc 1 466 7
ARM GAS  /tmp/ccRviNSh.s 			page 31


 1062 0040 BA68     		ldr	r2, [r7, #8]
 1063 0042 9A42     		cmp	r2, r3
 1064 0044 02D9     		bls	.L54
 467:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 468:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xMinSize = pxBlock->xBlockSize;
 1065              		.loc 1 468 15
 1066 0046 7B69     		ldr	r3, [r7, #20]
 1067 0048 5B68     		ldr	r3, [r3, #4]
 1068 004a BB60     		str	r3, [r7, #8]
 1069              	.L54:
 469:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 470:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Move to the next block in the chain until the last block is
 472:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				reached. */
 473:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = pxBlock->pxNextFreeBlock;
 1070              		.loc 1 473 13
 1071 004c 7B69     		ldr	r3, [r7, #20]
 1072 004e 1B68     		ldr	r3, [r3]
 1073 0050 7B61     		str	r3, [r7, #20]
 474:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			} while( pxBlock != pxEnd );
 1074              		.loc 1 474 21
 1075 0052 154B     		ldr	r3, .L56+4
 1076 0054 1B68     		ldr	r3, [r3]
 1077 0056 7A69     		ldr	r2, [r7, #20]
 1078 0058 9A42     		cmp	r2, r3
 1079 005a E4D1     		bne	.L55
 1080              	.L52:
 475:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 476:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 477:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xTaskResumeAll();
 1081              		.loc 1 477 2
 1082 005c FFF7FEFF 		bl	xTaskResumeAll
 478:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 479:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxHeapStats->xSizeOfLargestFreeBlockInBytes = xMaxSize;
 1083              		.loc 1 479 46
 1084 0060 7B68     		ldr	r3, [r7, #4]
 1085 0062 FA68     		ldr	r2, [r7, #12]
 1086 0064 5A60     		str	r2, [r3, #4]
 480:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxHeapStats->xSizeOfSmallestFreeBlockInBytes = xMinSize;
 1087              		.loc 1 480 47
 1088 0066 7B68     		ldr	r3, [r7, #4]
 1089 0068 BA68     		ldr	r2, [r7, #8]
 1090 006a 9A60     		str	r2, [r3, #8]
 481:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxHeapStats->xNumberOfFreeBlocks = xBlocks;
 1091              		.loc 1 481 35
 1092 006c 7B68     		ldr	r3, [r7, #4]
 1093 006e 3A69     		ldr	r2, [r7, #16]
 1094 0070 DA60     		str	r2, [r3, #12]
 482:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	taskENTER_CRITICAL();
 1095              		.loc 1 483 2
 1096 0072 FFF7FEFF 		bl	vPortEnterCritical
 484:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 485:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xAvailableHeapSpaceInBytes = xFreeBytesRemaining;
 1097              		.loc 1 485 43
 1098 0076 0D4B     		ldr	r3, .L56+8
 1099 0078 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccRviNSh.s 			page 32


 1100 007a 7B68     		ldr	r3, [r7, #4]
 1101 007c 1A60     		str	r2, [r3]
 486:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xNumberOfSuccessfulAllocations = xNumberOfSuccessfulAllocations;
 1102              		.loc 1 486 47
 1103 007e 0C4B     		ldr	r3, .L56+12
 1104 0080 1A68     		ldr	r2, [r3]
 1105 0082 7B68     		ldr	r3, [r7, #4]
 1106 0084 5A61     		str	r2, [r3, #20]
 487:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xNumberOfSuccessfulFrees = xNumberOfSuccessfulFrees;
 1107              		.loc 1 487 41
 1108 0086 0B4B     		ldr	r3, .L56+16
 1109 0088 1A68     		ldr	r2, [r3]
 1110 008a 7B68     		ldr	r3, [r7, #4]
 1111 008c 9A61     		str	r2, [r3, #24]
 488:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxHeapStats->xMinimumEverFreeBytesRemaining = xMinimumEverFreeBytesRemaining;
 1112              		.loc 1 488 47
 1113 008e 0A4B     		ldr	r3, .L56+20
 1114 0090 1A68     		ldr	r2, [r3]
 1115 0092 7B68     		ldr	r3, [r7, #4]
 1116 0094 1A61     		str	r2, [r3, #16]
 489:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 490:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	taskEXIT_CRITICAL();
 1117              		.loc 1 490 2
 1118 0096 FFF7FEFF 		bl	vPortExitCritical
 491:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 1119              		.loc 1 491 1
 1120 009a 00BF     		nop
 1121 009c 1837     		adds	r7, r7, #24
 1122              	.LCFI37:
 1123              		.cfi_def_cfa_offset 8
 1124 009e BD46     		mov	sp, r7
 1125              	.LCFI38:
 1126              		.cfi_def_cfa_register 13
 1127              		@ sp needed
 1128 00a0 80BD     		pop	{r7, pc}
 1129              	.L57:
 1130 00a2 00BF     		.align	2
 1131              	.L56:
 1132 00a4 00000000 		.word	xStart
 1133 00a8 00000000 		.word	pxEnd
 1134 00ac 00000000 		.word	xFreeBytesRemaining
 1135 00b0 00000000 		.word	xNumberOfSuccessfulAllocations
 1136 00b4 00000000 		.word	xNumberOfSuccessfulFrees
 1137 00b8 00000000 		.word	xMinimumEverFreeBytesRemaining
 1138              		.cfi_endproc
 1139              	.LFE11:
 1141              		.text
 1142              	.Letext0:
 1143              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/lib/gcc/arm-none-eabi/12.2.1/includ
 1144              		.file 4 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 1145              		.file 5 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1146              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 1147              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccRviNSh.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap_4.c
     /tmp/ccRviNSh.s:21     .bss.ucHeap:0000000000000000 $d
     /tmp/ccRviNSh.s:24     .bss.ucHeap:0000000000000000 ucHeap
     /tmp/ccRviNSh.s:27     .rodata.xHeapStructSize:0000000000000000 $d
     /tmp/ccRviNSh.s:30     .rodata.xHeapStructSize:0000000000000000 xHeapStructSize
     /tmp/ccRviNSh.s:33     .bss.xStart:0000000000000000 $d
     /tmp/ccRviNSh.s:36     .bss.xStart:0000000000000000 xStart
     /tmp/ccRviNSh.s:39     .bss.pxEnd:0000000000000000 $d
     /tmp/ccRviNSh.s:42     .bss.pxEnd:0000000000000000 pxEnd
     /tmp/ccRviNSh.s:45     .bss.xFreeBytesRemaining:0000000000000000 $d
     /tmp/ccRviNSh.s:48     .bss.xFreeBytesRemaining:0000000000000000 xFreeBytesRemaining
     /tmp/ccRviNSh.s:51     .bss.xMinimumEverFreeBytesRemaining:0000000000000000 $d
     /tmp/ccRviNSh.s:54     .bss.xMinimumEverFreeBytesRemaining:0000000000000000 xMinimumEverFreeBytesRemaining
     /tmp/ccRviNSh.s:57     .bss.xNumberOfSuccessfulAllocations:0000000000000000 $d
     /tmp/ccRviNSh.s:60     .bss.xNumberOfSuccessfulAllocations:0000000000000000 xNumberOfSuccessfulAllocations
     /tmp/ccRviNSh.s:63     .bss.xNumberOfSuccessfulFrees:0000000000000000 $d
     /tmp/ccRviNSh.s:66     .bss.xNumberOfSuccessfulFrees:0000000000000000 xNumberOfSuccessfulFrees
     /tmp/ccRviNSh.s:69     .bss.xBlockAllocatedBit:0000000000000000 $d
     /tmp/ccRviNSh.s:72     .bss.xBlockAllocatedBit:0000000000000000 xBlockAllocatedBit
     /tmp/ccRviNSh.s:75     .text.pvPortMalloc:0000000000000000 $t
     /tmp/ccRviNSh.s:81     .text.pvPortMalloc:0000000000000000 pvPortMalloc
     /tmp/ccRviNSh.s:688    .text.prvHeapInit:0000000000000000 prvHeapInit
     /tmp/ccRviNSh.s:842    .text.prvInsertBlockIntoFreeList:0000000000000000 prvInsertBlockIntoFreeList
     /tmp/ccRviNSh.s:385    .text.pvPortMalloc:0000000000000184 $d
     /tmp/ccRviNSh.s:395    .text.vPortFree:0000000000000000 $t
     /tmp/ccRviNSh.s:401    .text.vPortFree:0000000000000000 vPortFree
     /tmp/ccRviNSh.s:557    .text.vPortFree:00000000000000bc $d
     /tmp/ccRviNSh.s:564    .text.xPortGetFreeHeapSize:0000000000000000 $t
     /tmp/ccRviNSh.s:570    .text.xPortGetFreeHeapSize:0000000000000000 xPortGetFreeHeapSize
     /tmp/ccRviNSh.s:601    .text.xPortGetFreeHeapSize:0000000000000014 $d
     /tmp/ccRviNSh.s:606    .text.xPortGetMinimumEverFreeHeapSize:0000000000000000 $t
     /tmp/ccRviNSh.s:612    .text.xPortGetMinimumEverFreeHeapSize:0000000000000000 xPortGetMinimumEverFreeHeapSize
     /tmp/ccRviNSh.s:643    .text.xPortGetMinimumEverFreeHeapSize:0000000000000014 $d
     /tmp/ccRviNSh.s:648    .text.vPortInitialiseBlocks:0000000000000000 $t
     /tmp/ccRviNSh.s:654    .text.vPortInitialiseBlocks:0000000000000000 vPortInitialiseBlocks
     /tmp/ccRviNSh.s:683    .text.prvHeapInit:0000000000000000 $t
     /tmp/ccRviNSh.s:827    .text.prvHeapInit:00000000000000ac $d
     /tmp/ccRviNSh.s:837    .text.prvInsertBlockIntoFreeList:0000000000000000 $t
     /tmp/ccRviNSh.s:992    .text.prvInsertBlockIntoFreeList:00000000000000ac $d
     /tmp/ccRviNSh.s:998    .text.vPortGetHeapStats:0000000000000000 $t
     /tmp/ccRviNSh.s:1004   .text.vPortGetHeapStats:0000000000000000 vPortGetHeapStats
     /tmp/ccRviNSh.s:1132   .text.vPortGetHeapStats:00000000000000a4 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
vPortEnterCritical
vPortExitCritical
