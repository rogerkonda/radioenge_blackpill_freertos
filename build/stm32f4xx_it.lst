ARM GAS  /tmp/ccs190Go.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB216:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccs190Go.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  57:Core/Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  58:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  61:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  62:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim11;
  63:Core/Src/stm32f4xx_it.c **** 
  64:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f4xx_it.c **** /**
  72:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f4xx_it.c ****   */
  74:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 75 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccs190Go.s 			page 3


  41              	.L2:
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f4xx_it.c **** 
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f4xx_it.c ****   while (1)
  42              		.loc 1 80 9 discriminator 1
  43 0004 00BF     		nop
  44 0006 FDE7     		b	.L2
  45              		.cfi_endproc
  46              	.LFE216:
  48              		.section	.text.HardFault_Handler,"ax",%progbits
  49              		.align	1
  50              		.global	HardFault_Handler
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	HardFault_Handler:
  56              	.LFB217:
  81:Core/Src/stm32f4xx_it.c ****   {
  82:Core/Src/stm32f4xx_it.c ****   }
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c **** }
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c **** /**
  87:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f4xx_it.c ****   */
  89:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f4xx_it.c **** {
  57              		.loc 1 90 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              	.LCFI2:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI3:
  68              		.cfi_def_cfa_register 7
  69              	.L4:
  91:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c **** 
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****   while (1)
  70              		.loc 1 94 9 discriminator 1
  71 0004 00BF     		nop
  72 0006 FDE7     		b	.L4
  73              		.cfi_endproc
  74              	.LFE217:
  76              		.section	.text.MemManage_Handler,"ax",%progbits
  77              		.align	1
  78              		.global	MemManage_Handler
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
ARM GAS  /tmp/ccs190Go.s 			page 4


  83              	MemManage_Handler:
  84              	.LFB218:
  95:Core/Src/stm32f4xx_it.c ****   {
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****   }
  99:Core/Src/stm32f4xx_it.c **** }
 100:Core/Src/stm32f4xx_it.c **** 
 101:Core/Src/stm32f4xx_it.c **** /**
 102:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f4xx_it.c ****   */
 104:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f4xx_it.c **** {
  85              		.loc 1 105 1
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90 0000 80B4     		push	{r7}
  91              	.LCFI4:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 7, -4
  94 0002 00AF     		add	r7, sp, #0
  95              	.LCFI5:
  96              		.cfi_def_cfa_register 7
  97              	.L6:
 106:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c **** 
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****   while (1)
  98              		.loc 1 109 9 discriminator 1
  99 0004 00BF     		nop
 100 0006 FDE7     		b	.L6
 101              		.cfi_endproc
 102              	.LFE218:
 104              		.section	.text.BusFault_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	BusFault_Handler
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	BusFault_Handler:
 112              	.LFB219:
 110:Core/Src/stm32f4xx_it.c ****   {
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   }
 114:Core/Src/stm32f4xx_it.c **** }
 115:Core/Src/stm32f4xx_it.c **** 
 116:Core/Src/stm32f4xx_it.c **** /**
 117:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f4xx_it.c ****   */
 119:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f4xx_it.c **** {
 113              		.loc 1 120 1
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccs190Go.s 			page 5


 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              	.LCFI6:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 7, -4
 122 0002 00AF     		add	r7, sp, #0
 123              	.LCFI7:
 124              		.cfi_def_cfa_register 7
 125              	.L8:
 121:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c **** 
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****   while (1)
 126              		.loc 1 124 9 discriminator 1
 127 0004 00BF     		nop
 128 0006 FDE7     		b	.L8
 129              		.cfi_endproc
 130              	.LFE219:
 132              		.section	.text.UsageFault_Handler,"ax",%progbits
 133              		.align	1
 134              		.global	UsageFault_Handler
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 139              	UsageFault_Handler:
 140              	.LFB220:
 125:Core/Src/stm32f4xx_it.c ****   {
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c ****   }
 129:Core/Src/stm32f4xx_it.c **** }
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c **** /**
 132:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f4xx_it.c ****   */
 134:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f4xx_it.c **** {
 141              		.loc 1 135 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI8:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 00AF     		add	r7, sp, #0
 151              	.LCFI9:
 152              		.cfi_def_cfa_register 7
 153              	.L10:
 136:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c **** 
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****   while (1)
 154              		.loc 1 139 9 discriminator 1
 155 0004 00BF     		nop
ARM GAS  /tmp/ccs190Go.s 			page 6


 156 0006 FDE7     		b	.L10
 157              		.cfi_endproc
 158              	.LFE220:
 160              		.section	.text.DebugMon_Handler,"ax",%progbits
 161              		.align	1
 162              		.global	DebugMon_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	DebugMon_Handler:
 168              	.LFB221:
 140:Core/Src/stm32f4xx_it.c ****   {
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   }
 144:Core/Src/stm32f4xx_it.c **** }
 145:Core/Src/stm32f4xx_it.c **** 
 146:Core/Src/stm32f4xx_it.c **** /**
 147:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 148:Core/Src/stm32f4xx_it.c ****   */
 149:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 150:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 150 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI10:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 00AF     		add	r7, sp, #0
 179              	.LCFI11:
 180              		.cfi_def_cfa_register 7
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** }
 181              		.loc 1 157 1
 182 0004 00BF     		nop
 183 0006 BD46     		mov	sp, r7
 184              	.LCFI12:
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0008 5DF8047B 		ldr	r7, [sp], #4
 188              	.LCFI13:
 189              		.cfi_restore 7
 190              		.cfi_def_cfa_offset 0
 191 000c 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE221:
 195              		.section	.text.TIM1_TRG_COM_TIM11_IRQHandler,"ax",%progbits
 196              		.align	1
 197              		.global	TIM1_TRG_COM_TIM11_IRQHandler
ARM GAS  /tmp/ccs190Go.s 			page 7


 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	TIM1_TRG_COM_TIM11_IRQHandler:
 203              	.LFB222:
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 160:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 161:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 162:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 163:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 164:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c **** /**
 167:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt
 168:Core/Src/stm32f4xx_it.c ****   */
 169:Core/Src/stm32f4xx_it.c **** void TIM1_TRG_COM_TIM11_IRQHandler(void)
 170:Core/Src/stm32f4xx_it.c **** {
 204              		.loc 1 170 1
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI14:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 00AF     		add	r7, sp, #0
 214              	.LCFI15:
 215              		.cfi_def_cfa_register 7
 171:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
 173:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 216              		.loc 1 173 3
 217 0004 0348     		ldr	r0, .L13
 218 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 174:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim11);
 219              		.loc 1 174 3
 220 000a 0348     		ldr	r0, .L13+4
 221 000c FFF7FEFF 		bl	HAL_TIM_IRQHandler
 175:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */
 176:Core/Src/stm32f4xx_it.c **** 
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
 178:Core/Src/stm32f4xx_it.c **** }
 222              		.loc 1 178 1
 223 0010 00BF     		nop
 224 0012 80BD     		pop	{r7, pc}
 225              	.L14:
 226              		.align	2
 227              	.L13:
 228 0014 00000000 		.word	htim1
 229 0018 00000000 		.word	htim11
 230              		.cfi_endproc
 231              	.LFE222:
 233              		.section	.text.USART1_IRQHandler,"ax",%progbits
 234              		.align	1
 235              		.global	USART1_IRQHandler
ARM GAS  /tmp/ccs190Go.s 			page 8


 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	USART1_IRQHandler:
 241              	.LFB223:
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c **** /**
 181:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 182:Core/Src/stm32f4xx_it.c ****   */
 183:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 184:Core/Src/stm32f4xx_it.c **** {
 242              		.loc 1 184 1
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI16:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 00AF     		add	r7, sp, #0
 252              	.LCFI17:
 253              		.cfi_def_cfa_register 7
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 186:Core/Src/stm32f4xx_it.c **** 
 187:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 188:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 254              		.loc 1 188 3
 255 0004 0248     		ldr	r0, .L16
 256 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 190:Core/Src/stm32f4xx_it.c **** 
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 192:Core/Src/stm32f4xx_it.c **** }
 257              		.loc 1 192 1
 258 000a 00BF     		nop
 259 000c 80BD     		pop	{r7, pc}
 260              	.L17:
 261 000e 00BF     		.align	2
 262              	.L16:
 263 0010 00000000 		.word	huart1
 264              		.cfi_endproc
 265              	.LFE223:
 267              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 268              		.align	1
 269              		.global	DMA2_Stream2_IRQHandler
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	DMA2_Stream2_IRQHandler:
 275              	.LFB224:
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c **** /**
 195:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 196:Core/Src/stm32f4xx_it.c ****   */
 197:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 198:Core/Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccs190Go.s 			page 9


 276              		.loc 1 198 1
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              	.LCFI18:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 00AF     		add	r7, sp, #0
 286              	.LCFI19:
 287              		.cfi_def_cfa_register 7
 199:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 200:Core/Src/stm32f4xx_it.c **** 
 201:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 202:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 288              		.loc 1 202 3
 289 0004 0248     		ldr	r0, .L19
 290 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 203:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 204:Core/Src/stm32f4xx_it.c **** 
 205:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 206:Core/Src/stm32f4xx_it.c **** }
 291              		.loc 1 206 1
 292 000a 00BF     		nop
 293 000c 80BD     		pop	{r7, pc}
 294              	.L20:
 295 000e 00BF     		.align	2
 296              	.L19:
 297 0010 00000000 		.word	hdma_usart1_rx
 298              		.cfi_endproc
 299              	.LFE224:
 301              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 302              		.align	1
 303              		.global	OTG_FS_IRQHandler
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	OTG_FS_IRQHandler:
 309              	.LFB225:
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c **** /**
 209:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 210:Core/Src/stm32f4xx_it.c ****   */
 211:Core/Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 212:Core/Src/stm32f4xx_it.c **** {
 310              		.loc 1 212 1
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI20:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 00AF     		add	r7, sp, #0
 320              	.LCFI21:
ARM GAS  /tmp/ccs190Go.s 			page 10


 321              		.cfi_def_cfa_register 7
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 214:Core/Src/stm32f4xx_it.c **** 
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 216:Core/Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 322              		.loc 1 216 3
 323 0004 0248     		ldr	r0, .L22
 324 0006 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 218:Core/Src/stm32f4xx_it.c **** 
 219:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 220:Core/Src/stm32f4xx_it.c **** }
 325              		.loc 1 220 1
 326 000a 00BF     		nop
 327 000c 80BD     		pop	{r7, pc}
 328              	.L23:
 329 000e 00BF     		.align	2
 330              	.L22:
 331 0010 00000000 		.word	hpcd_USB_OTG_FS
 332              		.cfi_endproc
 333              	.LFE225:
 335              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 336              		.align	1
 337              		.global	DMA2_Stream7_IRQHandler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	DMA2_Stream7_IRQHandler:
 343              	.LFB226:
 221:Core/Src/stm32f4xx_it.c **** 
 222:Core/Src/stm32f4xx_it.c **** /**
 223:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 224:Core/Src/stm32f4xx_it.c ****   */
 225:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 226:Core/Src/stm32f4xx_it.c **** {
 344              		.loc 1 226 1
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI22:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 00AF     		add	r7, sp, #0
 354              	.LCFI23:
 355              		.cfi_def_cfa_register 7
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 228:Core/Src/stm32f4xx_it.c **** 
 229:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 230:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 356              		.loc 1 230 3
 357 0004 0248     		ldr	r0, .L25
 358 0006 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 232:Core/Src/stm32f4xx_it.c **** 
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
ARM GAS  /tmp/ccs190Go.s 			page 11


 234:Core/Src/stm32f4xx_it.c **** }
 359              		.loc 1 234 1
 360 000a 00BF     		nop
 361 000c 80BD     		pop	{r7, pc}
 362              	.L26:
 363 000e 00BF     		.align	2
 364              	.L25:
 365 0010 00000000 		.word	hdma_usart1_tx
 366              		.cfi_endproc
 367              	.LFE226:
 369              		.text
 370              	.Letext0:
 371              		.file 2 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 372              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 373              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 374              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 375              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 376              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 377              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 378              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 379              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
ARM GAS  /tmp/ccs190Go.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccs190Go.s:21     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccs190Go.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccs190Go.s:49     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccs190Go.s:55     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccs190Go.s:77     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccs190Go.s:83     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccs190Go.s:105    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccs190Go.s:111    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccs190Go.s:133    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccs190Go.s:139    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccs190Go.s:161    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccs190Go.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccs190Go.s:196    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000000 $t
     /tmp/ccs190Go.s:202    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000000 TIM1_TRG_COM_TIM11_IRQHandler
     /tmp/ccs190Go.s:228    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000000000014 $d
     /tmp/ccs190Go.s:234    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccs190Go.s:240    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccs190Go.s:263    .text.USART1_IRQHandler:0000000000000010 $d
     /tmp/ccs190Go.s:268    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccs190Go.s:274    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccs190Go.s:297    .text.DMA2_Stream2_IRQHandler:0000000000000010 $d
     /tmp/ccs190Go.s:302    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccs190Go.s:308    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccs190Go.s:331    .text.OTG_FS_IRQHandler:0000000000000010 $d
     /tmp/ccs190Go.s:336    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccs190Go.s:342    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccs190Go.s:365    .text.DMA2_Stream7_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim1
htim11
HAL_UART_IRQHandler
huart1
HAL_DMA_IRQHandler
hdma_usart1_rx
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
hdma_usart1_tx
