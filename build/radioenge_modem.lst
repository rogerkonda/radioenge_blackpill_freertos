ARM GAS  /tmp/cc1Fepem.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"radioenge_modem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/radioenge_modem.c"
  20              		.global	gJoinedFSM
  21              		.section	.bss.gJoinedFSM,"aw",%nobits
  24              	gJoinedFSM:
  25 0000 00       		.space	1
  26              		.global	gRadioState
  27              		.section	.data.gRadioState,"aw"
  30              	gRadioState:
  31 0000 01       		.byte	1
  32              		.global	gConfigCmds
  33              		.section	.data.gConfigCmds,"aw"
  34              		.align	2
  37              	gConfigCmds:
  38 0000 41540D0A 		.ascii	"AT\015\012\000"
  38      00
  39 0005 00000000 		.space	251
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40 0100 41540D0A 		.ascii	"AT\015\012\000"
  40      00
  41 0105 00000000 		.space	251
  41      00000000 
  41      00000000 
  41      00000000 
  41      00000000 
  42              		.global	gConsecutiveJoinErrors
  43              		.section	.bss.gConsecutiveJoinErrors,"aw",%nobits
  44              		.align	2
  47              	gConsecutiveJoinErrors:
  48 0000 00000000 		.space	4
  49              		.section	.text.LoRaWAN_JoinCallback,"ax",%progbits
  50              		.align	1
  51              		.global	LoRaWAN_JoinCallback
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	LoRaWAN_JoinCallback:
ARM GAS  /tmp/cc1Fepem.s 			page 2


  57              	.LFB220:
   1:Core/Src/radioenge_modem.c **** #include "cmsis_os.h"
   2:Core/Src/radioenge_modem.c **** #include "radioenge_modem.h"
   3:Core/Src/radioenge_modem.c **** #include "uart_at.h"
   4:Core/Src/radioenge_modem.c **** #include "main.h"
   5:Core/Src/radioenge_modem.c **** #include <string.h>
   6:Core/Src/radioenge_modem.c **** 
   7:Core/Src/radioenge_modem.c **** volatile JOINED_STATE gJoinedFSM = JOINED_TX;
   8:Core/Src/radioenge_modem.c **** volatile RADIO_STATE gRadioState = RADIO_RESET;
   9:Core/Src/radioenge_modem.c **** 
  10:Core/Src/radioenge_modem.c **** extern osThreadId_t ModemMngrTaskHandle;
  11:Core/Src/radioenge_modem.c **** extern osThreadId_t ModemSendTaskHandle;
  12:Core/Src/radioenge_modem.c **** extern osSemaphoreId_t RadioStateSemaphoreHandle;
  13:Core/Src/radioenge_modem.c **** extern osMessageQueueId_t ModemSendQueueHandle;
  14:Core/Src/radioenge_modem.c **** extern osSemaphoreId_t LoRaTXSemaphoreHandle;
  15:Core/Src/radioenge_modem.c **** extern osEventFlagsId_t ModemStatusFlagsHandle;
  16:Core/Src/radioenge_modem.c **** extern osTimerId_t ModemLedTimerHandle;
  17:Core/Src/radioenge_modem.c **** extern osMessageQueueId_t uartQueueHandle;
  18:Core/Src/radioenge_modem.c **** extern osTimerId_t DutyCycleTimerHandle;
  19:Core/Src/radioenge_modem.c **** 
  20:Core/Src/radioenge_modem.c **** #define NUMBER_OF_STRINGS (2)
  21:Core/Src/radioenge_modem.c **** #define STRING_LENGTH (255)
  22:Core/Src/radioenge_modem.c **** char gConfigCmds[NUMBER_OF_STRINGS][STRING_LENGTH + 1] = {
  23:Core/Src/radioenge_modem.c ****     "AT\r\n",
  24:Core/Src/radioenge_modem.c ****     "AT\r\n"
  25:Core/Src/radioenge_modem.c ****     };
  26:Core/Src/radioenge_modem.c **** 
  27:Core/Src/radioenge_modem.c **** 
  28:Core/Src/radioenge_modem.c **** uint32_t gConsecutiveJoinErrors = 0;
  29:Core/Src/radioenge_modem.c **** 
  30:Core/Src/radioenge_modem.c **** void LoRaWAN_JoinCallback(ATResponse response)
  31:Core/Src/radioenge_modem.c **** {
  58              		.loc 1 31 1
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62 0000 80B5     		push	{r7, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 82B0     		sub	sp, sp, #8
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 16
  70 0004 00AF     		add	r7, sp, #0
  71              	.LCFI2:
  72              		.cfi_def_cfa_register 7
  73 0006 0346     		mov	r3, r0
  74 0008 FB71     		strb	r3, [r7, #7]
  32:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
  75              		.loc 1 32 5
  76 000a 184B     		ldr	r3, .L5
  77 000c 1B68     		ldr	r3, [r3]
  78 000e 4FF0FF31 		mov	r1, #-1
  79 0012 1846     		mov	r0, r3
  80 0014 FFF7FEFF 		bl	osSemaphoreAcquire
  33:Core/Src/radioenge_modem.c ****     if (gRadioState == RADIO_JOINING)
ARM GAS  /tmp/cc1Fepem.s 			page 3


  81              		.loc 1 33 21
  82 0018 154B     		ldr	r3, .L5+4
  83 001a 1B78     		ldrb	r3, [r3]
  84 001c DBB2     		uxtb	r3, r3
  85              		.loc 1 33 8
  86 001e 042B     		cmp	r3, #4
  87 0020 1BD1     		bne	.L2
  34:Core/Src/radioenge_modem.c ****     {
  35:Core/Src/radioenge_modem.c ****         if (response == AT_JOINED)
  88              		.loc 1 35 12
  89 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  90 0024 042B     		cmp	r3, #4
  91 0026 06D1     		bne	.L3
  92              	.LBB2:
  36:Core/Src/radioenge_modem.c ****         {
  37:Core/Src/radioenge_modem.c ****             gConsecutiveJoinErrors = 0;
  93              		.loc 1 37 36
  94 0028 124B     		ldr	r3, .L5+8
  95 002a 0022     		movs	r2, #0
  96 002c 1A60     		str	r2, [r3]
  38:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_READY);
  97              		.loc 1 38 13
  98 002e 0820     		movs	r0, #8
  99 0030 FFF7FEFF 		bl	SetRadioState
 100              	.LBE2:
 101 0034 0BE0     		b	.L4
 102              	.L3:
  39:Core/Src/radioenge_modem.c ****         }
  40:Core/Src/radioenge_modem.c ****         else
  41:Core/Src/radioenge_modem.c ****         {
  42:Core/Src/radioenge_modem.c ****             gConsecutiveJoinErrors++;
 103              		.loc 1 42 35
 104 0036 0F4B     		ldr	r3, .L5+8
 105 0038 1B68     		ldr	r3, [r3]
 106 003a 0133     		adds	r3, r3, #1
 107 003c 0D4A     		ldr	r2, .L5+8
 108 003e 1360     		str	r3, [r2]
  43:Core/Src/radioenge_modem.c ****             if(gConsecutiveJoinErrors==9) //radioenge modem stops after 9 join errors
 109              		.loc 1 43 38
 110 0040 0C4B     		ldr	r3, .L5+8
 111 0042 1B68     		ldr	r3, [r3]
 112              		.loc 1 43 15
 113 0044 092B     		cmp	r3, #9
 114 0046 02D1     		bne	.L4
 115              	.LBB3:
  44:Core/Src/radioenge_modem.c ****             {
  45:Core/Src/radioenge_modem.c ****                 SetRadioState(RADIO_RESET);
 116              		.loc 1 45 17
 117 0048 0120     		movs	r0, #1
 118 004a FFF7FEFF 		bl	SetRadioState
 119              	.L4:
 120              	.LBE3:
  46:Core/Src/radioenge_modem.c ****             }
  47:Core/Src/radioenge_modem.c ****         }
  48:Core/Src/radioenge_modem.c ****         osThreadFlagsSet(ModemMngrTaskHandle, 0x01);
 121              		.loc 1 48 9
 122 004e 0A4B     		ldr	r3, .L5+12
ARM GAS  /tmp/cc1Fepem.s 			page 4


 123 0050 1B68     		ldr	r3, [r3]
 124 0052 0121     		movs	r1, #1
 125 0054 1846     		mov	r0, r3
 126 0056 FFF7FEFF 		bl	osThreadFlagsSet
 127              	.L2:
  49:Core/Src/radioenge_modem.c ****     }
  50:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);
 128              		.loc 1 50 5
 129 005a 044B     		ldr	r3, .L5
 130 005c 1B68     		ldr	r3, [r3]
 131 005e 1846     		mov	r0, r3
 132 0060 FFF7FEFF 		bl	osSemaphoreRelease
  51:Core/Src/radioenge_modem.c **** }
 133              		.loc 1 51 1
 134 0064 00BF     		nop
 135 0066 0837     		adds	r7, r7, #8
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 8
 138 0068 BD46     		mov	sp, r7
 139              	.LCFI4:
 140              		.cfi_def_cfa_register 13
 141              		@ sp needed
 142 006a 80BD     		pop	{r7, pc}
 143              	.L6:
 144              		.align	2
 145              	.L5:
 146 006c 00000000 		.word	RadioStateSemaphoreHandle
 147 0070 00000000 		.word	gRadioState
 148 0074 00000000 		.word	gConsecutiveJoinErrors
 149 0078 00000000 		.word	ModemMngrTaskHandle
 150              		.cfi_endproc
 151              	.LFE220:
 153              		.section	.text.DutyCycleTimerCallback,"ax",%progbits
 154              		.align	1
 155              		.global	DutyCycleTimerCallback
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DutyCycleTimerCallback:
 161              	.LFB221:
  52:Core/Src/radioenge_modem.c **** 
  53:Core/Src/radioenge_modem.c **** void DutyCycleTimerCallback (void *argument) 
  54:Core/Src/radioenge_modem.c **** {
 162              		.loc 1 54 1
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 82B0     		sub	sp, sp, #8
 172              	.LCFI6:
 173              		.cfi_def_cfa_offset 16
 174 0004 00AF     		add	r7, sp, #0
 175              	.LCFI7:
ARM GAS  /tmp/cc1Fepem.s 			page 5


 176              		.cfi_def_cfa_register 7
 177 0006 7860     		str	r0, [r7, #4]
  55:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 178              		.loc 1 55 5
 179 0008 0B4B     		ldr	r3, .L9
 180 000a 1B68     		ldr	r3, [r3]
 181 000c 4FF0FF31 		mov	r1, #-1
 182 0010 1846     		mov	r0, r3
 183 0012 FFF7FEFF 		bl	osSemaphoreAcquire
  56:Core/Src/radioenge_modem.c ****     if(gRadioState==RADIO_DUTYCYCLED)
 184              		.loc 1 56 19
 185 0016 094B     		ldr	r3, .L9+4
 186 0018 1B78     		ldrb	r3, [r3]
 187 001a DBB2     		uxtb	r3, r3
 188              		.loc 1 56 7
 189 001c 102B     		cmp	r3, #16
 190 001e 02D1     		bne	.L8
 191              	.LBB4:
  57:Core/Src/radioenge_modem.c ****     {
  58:Core/Src/radioenge_modem.c ****         SetRadioState(RADIO_READY);
 192              		.loc 1 58 9
 193 0020 0820     		movs	r0, #8
 194 0022 FFF7FEFF 		bl	SetRadioState
 195              	.L8:
 196              	.LBE4:
  59:Core/Src/radioenge_modem.c ****     }  
  60:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);  
 197              		.loc 1 60 5
 198 0026 044B     		ldr	r3, .L9
 199 0028 1B68     		ldr	r3, [r3]
 200 002a 1846     		mov	r0, r3
 201 002c FFF7FEFF 		bl	osSemaphoreRelease
  61:Core/Src/radioenge_modem.c **** }
 202              		.loc 1 61 1
 203 0030 00BF     		nop
 204 0032 0837     		adds	r7, r7, #8
 205              	.LCFI8:
 206              		.cfi_def_cfa_offset 8
 207 0034 BD46     		mov	sp, r7
 208              	.LCFI9:
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 0036 80BD     		pop	{r7, pc}
 212              	.L10:
 213              		.align	2
 214              	.L9:
 215 0038 00000000 		.word	RadioStateSemaphoreHandle
 216 003c 00000000 		.word	gRadioState
 217              		.cfi_endproc
 218              	.LFE221:
 220              		.section	.rodata
 221              		.align	2
 222              	.LC0:
 223 0000 41545A0D 		.ascii	"ATZ\015\012\000"
 223      0A00
 224              		.section	.text.resetRadio,"ax",%progbits
 225              		.align	1
ARM GAS  /tmp/cc1Fepem.s 			page 6


 226              		.global	resetRadio
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	resetRadio:
 232              	.LFB222:
  62:Core/Src/radioenge_modem.c **** 
  63:Core/Src/radioenge_modem.c **** void resetRadio(void)
  64:Core/Src/radioenge_modem.c **** {
 233              		.loc 1 64 1
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              	.LCFI10:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI11:
 244              		.cfi_def_cfa_register 7
  65:Core/Src/radioenge_modem.c ****     while (sendRAWAT("ATZ\r\n") != AT_RESET)
 245              		.loc 1 65 11
 246 0004 03E0     		b	.L12
 247              	.L13:
  66:Core/Src/radioenge_modem.c ****     {
  67:Core/Src/radioenge_modem.c ****         osDelay(5000);
 248              		.loc 1 67 9
 249 0006 41F28830 		movw	r0, #5000
 250 000a FFF7FEFF 		bl	osDelay
 251              	.L12:
  65:Core/Src/radioenge_modem.c ****     while (sendRAWAT("ATZ\r\n") != AT_RESET)
 252              		.loc 1 65 12
 253 000e 0448     		ldr	r0, .L15
 254 0010 FFF7FEFF 		bl	sendRAWAT
 255 0014 0346     		mov	r3, r0
  65:Core/Src/radioenge_modem.c ****     while (sendRAWAT("ATZ\r\n") != AT_RESET)
 256              		.loc 1 65 33
 257 0016 082B     		cmp	r3, #8
 258 0018 F5D1     		bne	.L13
  68:Core/Src/radioenge_modem.c ****     }
  69:Core/Src/radioenge_modem.c ****     return;
 259              		.loc 1 69 5
 260 001a 00BF     		nop
  70:Core/Src/radioenge_modem.c **** }
 261              		.loc 1 70 1
 262 001c 80BD     		pop	{r7, pc}
 263              	.L16:
 264 001e 00BF     		.align	2
 265              	.L15:
 266 0020 00000000 		.word	.LC0
 267              		.cfi_endproc
 268              	.LFE222:
 270              		.section	.text.SetRadioState,"ax",%progbits
 271              		.align	1
 272              		.global	SetRadioState
 273              		.syntax unified
ARM GAS  /tmp/cc1Fepem.s 			page 7


 274              		.thumb
 275              		.thumb_func
 277              	SetRadioState:
 278              	.LFB223:
  71:Core/Src/radioenge_modem.c **** 
  72:Core/Src/radioenge_modem.c **** //calls to this function must be protected by semaphore RadioStateSemaphoreHandle
  73:Core/Src/radioenge_modem.c **** void SetRadioState(RADIO_STATE state)
  74:Core/Src/radioenge_modem.c **** {    
 279              		.loc 1 74 1
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 8
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              	.LCFI12:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              	.LCFI13:
 290              		.cfi_def_cfa_offset 16
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI14:
 293              		.cfi_def_cfa_register 7
 294 0006 0346     		mov	r3, r0
 295 0008 FB71     		strb	r3, [r7, #7]
  75:Core/Src/radioenge_modem.c ****     gRadioState = state;
 296              		.loc 1 75 17
 297 000a 064A     		ldr	r2, .L18
 298 000c FB79     		ldrb	r3, [r7, #7]
 299 000e 1370     		strb	r3, [r2]
  76:Core/Src/radioenge_modem.c ****     osThreadFlagsSet(ModemMngrTaskHandle, 0x01); 
 300              		.loc 1 76 5
 301 0010 054B     		ldr	r3, .L18+4
 302 0012 1B68     		ldr	r3, [r3]
 303 0014 0121     		movs	r1, #1
 304 0016 1846     		mov	r0, r3
 305 0018 FFF7FEFF 		bl	osThreadFlagsSet
  77:Core/Src/radioenge_modem.c **** }
 306              		.loc 1 77 1
 307 001c 00BF     		nop
 308 001e 0837     		adds	r7, r7, #8
 309              	.LCFI15:
 310              		.cfi_def_cfa_offset 8
 311 0020 BD46     		mov	sp, r7
 312              	.LCFI16:
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 0022 80BD     		pop	{r7, pc}
 316              	.L19:
 317              		.align	2
 318              	.L18:
 319 0024 00000000 		.word	gRadioState
 320 0028 00000000 		.word	ModemMngrTaskHandle
 321              		.cfi_endproc
 322              	.LFE223:
 324              		.section	.text.ModemLedCallback,"ax",%progbits
 325              		.align	1
ARM GAS  /tmp/cc1Fepem.s 			page 8


 326              		.global	ModemLedCallback
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	ModemLedCallback:
 332              	.LFB224:
  78:Core/Src/radioenge_modem.c **** 
  79:Core/Src/radioenge_modem.c **** void ModemLedCallback(void *argument) 
  80:Core/Src/radioenge_modem.c **** {
 333              		.loc 1 80 1
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 8
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI17:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 83B0     		sub	sp, sp, #12
 343              	.LCFI18:
 344              		.cfi_def_cfa_offset 16
 345 0004 00AF     		add	r7, sp, #0
 346              	.LCFI19:
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
  81:Core/Src/radioenge_modem.c ****     //here we use gRadioState without semaphore because a preemption will only cause a momentary le
  82:Core/Src/radioenge_modem.c ****     
  83:Core/Src/radioenge_modem.c **** }
 349              		.loc 1 83 1
 350 0008 00BF     		nop
 351 000a 0C37     		adds	r7, r7, #12
 352              	.LCFI20:
 353              		.cfi_def_cfa_offset 4
 354 000c BD46     		mov	sp, r7
 355              	.LCFI21:
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 000e 5DF8047B 		ldr	r7, [sp], #4
 359              	.LCFI22:
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 0012 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE224:
 366              		.section	.text.ModemManagerTaskCode,"ax",%progbits
 367              		.align	1
 368              		.global	ModemManagerTaskCode
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	ModemManagerTaskCode:
 374              	.LFB225:
  84:Core/Src/radioenge_modem.c **** 
  85:Core/Src/radioenge_modem.c **** 
  86:Core/Src/radioenge_modem.c **** void ModemManagerTaskCode(void *argument)
  87:Core/Src/radioenge_modem.c **** {
 375              		.loc 1 87 1
ARM GAS  /tmp/cc1Fepem.s 			page 9


 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 24
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 80B5     		push	{r7, lr}
 380              	.LCFI23:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 7, -8
 383              		.cfi_offset 14, -4
 384 0002 86B0     		sub	sp, sp, #24
 385              	.LCFI24:
 386              		.cfi_def_cfa_offset 32
 387 0004 00AF     		add	r7, sp, #0
 388              	.LCFI25:
 389              		.cfi_def_cfa_register 7
 390 0006 7860     		str	r0, [r7, #4]
  88:Core/Src/radioenge_modem.c ****     /* USER CODE BEGIN 5 */
  89:Core/Src/radioenge_modem.c ****     /* Infinite loop */    
  90:Core/Src/radioenge_modem.c ****     uint32_t ConfigCmdIndex = 0;
 391              		.loc 1 90 14
 392 0008 0023     		movs	r3, #0
 393 000a 7B61     		str	r3, [r7, #20]
  91:Core/Src/radioenge_modem.c ****     uint32_t flags;
  92:Core/Src/radioenge_modem.c ****     uint32_t modemflags;
  93:Core/Src/radioenge_modem.c ****     osTimerStart(ModemLedTimerHandle, 50U);
 394              		.loc 1 93 5
 395 000c 4A4B     		ldr	r3, .L34
 396 000e 1B68     		ldr	r3, [r3]
 397 0010 3221     		movs	r1, #50
 398 0012 1846     		mov	r0, r3
 399 0014 FFF7FEFF 		bl	osTimerStart
  94:Core/Src/radioenge_modem.c ****     osThreadFlagsSet(ModemMngrTaskHandle, 0x01);    
 400              		.loc 1 94 5
 401 0018 484B     		ldr	r3, .L34+4
 402 001a 1B68     		ldr	r3, [r3]
 403 001c 0121     		movs	r1, #1
 404 001e 1846     		mov	r0, r3
 405 0020 FFF7FEFF 		bl	osThreadFlagsSet
 406              	.L32:
  95:Core/Src/radioenge_modem.c ****     while (1)
  96:Core/Src/radioenge_modem.c ****     {
  97:Core/Src/radioenge_modem.c ****         flags = osThreadFlagsWait (0x01, osFlagsWaitAny,osWaitForever);
 407              		.loc 1 97 17
 408 0024 4FF0FF32 		mov	r2, #-1
 409 0028 0021     		movs	r1, #0
 410 002a 0120     		movs	r0, #1
 411 002c FFF7FEFF 		bl	osThreadFlagsWait
 412 0030 3861     		str	r0, [r7, #16]
  98:Core/Src/radioenge_modem.c ****         osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 413              		.loc 1 98 9
 414 0032 434B     		ldr	r3, .L34+8
 415 0034 1B68     		ldr	r3, [r3]
 416 0036 4FF0FF31 		mov	r1, #-1
 417 003a 1846     		mov	r0, r3
 418 003c FFF7FEFF 		bl	osSemaphoreAcquire
  99:Core/Src/radioenge_modem.c ****         osEventFlagsClear(ModemStatusFlagsHandle, RADIO_STATE_ALL);        
 419              		.loc 1 99 9
 420 0040 404B     		ldr	r3, .L34+12
ARM GAS  /tmp/cc1Fepem.s 			page 10


 421 0042 1B68     		ldr	r3, [r3]
 422 0044 1F21     		movs	r1, #31
 423 0046 1846     		mov	r0, r3
 424 0048 FFF7FEFF 		bl	osEventFlagsClear
 100:Core/Src/radioenge_modem.c ****         switch (gRadioState)
 425              		.loc 1 100 9
 426 004c 3E4B     		ldr	r3, .L34+16
 427 004e 1B78     		ldrb	r3, [r3]
 428 0050 DBB2     		uxtb	r3, r3
 429 0052 013B     		subs	r3, r3, #1
 430 0054 0F2B     		cmp	r3, #15
 431 0056 5ED8     		bhi	.L22
 432 0058 01A2     		adr	r2, .L24
 433 005a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 434 005e 00BF     		.p2align 2
 435              	.L24:
 436 0060 A1000000 		.word	.L28+1
 437 0064 C5000000 		.word	.L27+1
 438 0068 17010000 		.word	.L22+1
 439 006c 17010000 		.word	.L22+1
 440 0070 17010000 		.word	.L22+1
 441 0074 17010000 		.word	.L22+1
 442 0078 17010000 		.word	.L22+1
 443 007c 17010000 		.word	.L22+1
 444 0080 17010000 		.word	.L22+1
 445 0084 17010000 		.word	.L22+1
 446 0088 17010000 		.word	.L22+1
 447 008c 17010000 		.word	.L22+1
 448 0090 17010000 		.word	.L22+1
 449 0094 17010000 		.word	.L22+1
 450 0098 17010000 		.word	.L22+1
 451 009c 07010000 		.word	.L23+1
 452              		.p2align 1
 453              	.L28:
 101:Core/Src/radioenge_modem.c ****         {
 102:Core/Src/radioenge_modem.c ****         case RADIO_RESET:
 103:Core/Src/radioenge_modem.c ****         {
 104:Core/Src/radioenge_modem.c ****             // CDC_Transmit_FS("Resetting the radio...\r\n", strlen("Resetting the radio...\r\n"));
 105:Core/Src/radioenge_modem.c ****             resetRadio();
 454              		.loc 1 105 13
 455 00a0 FFF7FEFF 		bl	resetRadio
 106:Core/Src/radioenge_modem.c ****             ConfigCmdIndex = 0;
 456              		.loc 1 106 28
 457 00a4 0023     		movs	r3, #0
 458 00a6 7B61     		str	r3, [r7, #20]
 107:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_CONFIGURING);
 459              		.loc 1 107 13
 460 00a8 0220     		movs	r0, #2
 461 00aa FFF7FEFF 		bl	SetRadioState
 108:Core/Src/radioenge_modem.c ****             osThreadFlagsSet(ModemMngrTaskHandle, 0x01);
 462              		.loc 1 108 13
 463 00ae 234B     		ldr	r3, .L34+4
 464 00b0 1B68     		ldr	r3, [r3]
 465 00b2 0121     		movs	r1, #1
 466 00b4 1846     		mov	r0, r3
 467 00b6 FFF7FEFF 		bl	osThreadFlagsSet
 109:Core/Src/radioenge_modem.c ****             osDelay(1000);
ARM GAS  /tmp/cc1Fepem.s 			page 11


 468              		.loc 1 109 13
 469 00ba 4FF47A70 		mov	r0, #1000
 470 00be FFF7FEFF 		bl	osDelay
 110:Core/Src/radioenge_modem.c ****             break;
 471              		.loc 1 110 13
 472 00c2 28E0     		b	.L22
 473              	.L27:
 111:Core/Src/radioenge_modem.c ****         }
 112:Core/Src/radioenge_modem.c ****         case RADIO_CONFIGURING:
 113:Core/Src/radioenge_modem.c ****         {
 114:Core/Src/radioenge_modem.c ****             if (sendRAWAT(gConfigCmds[ConfigCmdIndex]) == AT_OK)
 474              		.loc 1 114 38
 475 00c4 7B69     		ldr	r3, [r7, #20]
 476 00c6 1B02     		lsls	r3, r3, #8
 477 00c8 204A     		ldr	r2, .L34+20
 478 00ca 1344     		add	r3, r3, r2
 479              		.loc 1 114 17
 480 00cc 1846     		mov	r0, r3
 481 00ce FFF7FEFF 		bl	sendRAWAT
 482 00d2 0346     		mov	r3, r0
 483              		.loc 1 114 16
 484 00d4 002B     		cmp	r3, #0
 485 00d6 0CD1     		bne	.L29
 115:Core/Src/radioenge_modem.c ****             {                
 116:Core/Src/radioenge_modem.c ****                 ConfigCmdIndex++;
 486              		.loc 1 116 31
 487 00d8 7B69     		ldr	r3, [r7, #20]
 488 00da 0133     		adds	r3, r3, #1
 489 00dc 7B61     		str	r3, [r7, #20]
 117:Core/Src/radioenge_modem.c ****                 if (ConfigCmdIndex == NUMBER_OF_STRINGS)
 490              		.loc 1 117 20
 491 00de 7B69     		ldr	r3, [r7, #20]
 492 00e0 022B     		cmp	r3, #2
 493 00e2 02D1     		bne	.L30
 118:Core/Src/radioenge_modem.c ****                 {
 119:Core/Src/radioenge_modem.c ****                     SetRadioState(RADIO_JOINING);
 494              		.loc 1 119 21
 495 00e4 0420     		movs	r0, #4
 496 00e6 FFF7FEFF 		bl	SetRadioState
 497              	.L30:
 120:Core/Src/radioenge_modem.c ****                 }
 121:Core/Src/radioenge_modem.c ****                 osDelay(100);
 498              		.loc 1 121 17
 499 00ea 6420     		movs	r0, #100
 500 00ec FFF7FEFF 		bl	osDelay
 501 00f0 02E0     		b	.L31
 502              	.L29:
 122:Core/Src/radioenge_modem.c ****             }
 123:Core/Src/radioenge_modem.c ****             else
 124:Core/Src/radioenge_modem.c ****             {
 125:Core/Src/radioenge_modem.c ****                 SetRadioState(RADIO_RESET);
 503              		.loc 1 125 17
 504 00f2 0120     		movs	r0, #1
 505 00f4 FFF7FEFF 		bl	SetRadioState
 506              	.L31:
 126:Core/Src/radioenge_modem.c ****             }
 127:Core/Src/radioenge_modem.c ****             osThreadFlagsSet(ModemMngrTaskHandle, 0x01);
ARM GAS  /tmp/cc1Fepem.s 			page 12


 507              		.loc 1 127 13
 508 00f8 104B     		ldr	r3, .L34+4
 509 00fa 1B68     		ldr	r3, [r3]
 510 00fc 0121     		movs	r1, #1
 511 00fe 1846     		mov	r0, r3
 512 0100 FFF7FEFF 		bl	osThreadFlagsSet
 128:Core/Src/radioenge_modem.c ****             break;
 513              		.loc 1 128 13
 514 0104 07E0     		b	.L22
 515              	.L23:
 129:Core/Src/radioenge_modem.c ****         }
 130:Core/Src/radioenge_modem.c ****         case RADIO_JOINING:
 131:Core/Src/radioenge_modem.c ****         {
 132:Core/Src/radioenge_modem.c ****             // wait for radio callback
 133:Core/Src/radioenge_modem.c ****             break;
 134:Core/Src/radioenge_modem.c ****         }
 135:Core/Src/radioenge_modem.c ****         case RADIO_READY:
 136:Core/Src/radioenge_modem.c ****         {
 137:Core/Src/radioenge_modem.c ****             // now we can send data
 138:Core/Src/radioenge_modem.c ****             break;
 139:Core/Src/radioenge_modem.c ****         }
 140:Core/Src/radioenge_modem.c ****         case RADIO_DUTYCYCLED:
 141:Core/Src/radioenge_modem.c ****         {
 142:Core/Src/radioenge_modem.c ****             // Wait the dutycycle period and return to ready
 143:Core/Src/radioenge_modem.c ****             osTimerStart(DutyCycleTimerHandle, 14000U);
 516              		.loc 1 143 13
 517 0106 124B     		ldr	r3, .L34+24
 518 0108 1B68     		ldr	r3, [r3]
 519 010a 43F2B061 		movw	r1, #14000
 520 010e 1846     		mov	r0, r3
 521 0110 FFF7FEFF 		bl	osTimerStart
 144:Core/Src/radioenge_modem.c ****             break;
 522              		.loc 1 144 13
 523 0114 00BF     		nop
 524              	.L22:
 145:Core/Src/radioenge_modem.c ****         }
 146:Core/Src/radioenge_modem.c ****         }
 147:Core/Src/radioenge_modem.c ****         modemflags = osEventFlagsSet(ModemStatusFlagsHandle, gRadioState);
 525              		.loc 1 147 22
 526 0116 0B4B     		ldr	r3, .L34+12
 527 0118 1B68     		ldr	r3, [r3]
 528 011a 0B4A     		ldr	r2, .L34+16
 529 011c 1278     		ldrb	r2, [r2]
 530 011e D2B2     		uxtb	r2, r2
 531 0120 1146     		mov	r1, r2
 532 0122 1846     		mov	r0, r3
 533 0124 FFF7FEFF 		bl	osEventFlagsSet
 534 0128 F860     		str	r0, [r7, #12]
 148:Core/Src/radioenge_modem.c ****         osSemaphoreRelease(RadioStateSemaphoreHandle);
 535              		.loc 1 148 9
 536 012a 054B     		ldr	r3, .L34+8
 537 012c 1B68     		ldr	r3, [r3]
 538 012e 1846     		mov	r0, r3
 539 0130 FFF7FEFF 		bl	osSemaphoreRelease
  97:Core/Src/radioenge_modem.c ****         osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 540              		.loc 1 97 15
 541 0134 76E7     		b	.L32
ARM GAS  /tmp/cc1Fepem.s 			page 13


 542              	.L35:
 543 0136 00BF     		.align	2
 544              	.L34:
 545 0138 00000000 		.word	ModemLedTimerHandle
 546 013c 00000000 		.word	ModemMngrTaskHandle
 547 0140 00000000 		.word	RadioStateSemaphoreHandle
 548 0144 00000000 		.word	ModemStatusFlagsHandle
 549 0148 00000000 		.word	gRadioState
 550 014c 00000000 		.word	gConfigCmds
 551 0150 00000000 		.word	DutyCycleTimerHandle
 552              		.cfi_endproc
 553              	.LFE225:
 555              		.global	gEncodedString
 556              		.section	.bss.gEncodedString,"aw",%nobits
 557              		.align	2
 560              	gEncodedString:
 561 0000 00000000 		.space	64
 561      00000000 
 561      00000000 
 561      00000000 
 561      00000000 
 562              		.global	gSendBuffer
 563              		.section	.bss.gSendBuffer,"aw",%nobits
 564              		.align	2
 567              	gSendBuffer:
 568 0000 00000000 		.space	80
 568      00000000 
 568      00000000 
 568      00000000 
 568      00000000 
 569              		.section	.text.LoRaSend,"ax",%progbits
 570              		.align	1
 571              		.global	LoRaSend
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 576              	LoRaSend:
 577              	.LFB226:
 149:Core/Src/radioenge_modem.c ****     }
 150:Core/Src/radioenge_modem.c **** }
 151:Core/Src/radioenge_modem.c **** 
 152:Core/Src/radioenge_modem.c **** #define OUT_BUFFER_SIZE (64)
 153:Core/Src/radioenge_modem.c **** uint8_t gEncodedString[OUT_BUFFER_SIZE]; 
 154:Core/Src/radioenge_modem.c **** uint8_t gSendBuffer[OUT_BUFFER_SIZE+16]; 
 155:Core/Src/radioenge_modem.c **** 
 156:Core/Src/radioenge_modem.c **** 
 157:Core/Src/radioenge_modem.c **** osStatus_t LoRaSend(uint32_t LoraWANPort,uint8_t* msg)
 158:Core/Src/radioenge_modem.c **** {   
 578              		.loc 1 158 1
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 8
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582 0000 80B5     		push	{r7, lr}
 583              	.LCFI26:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
ARM GAS  /tmp/cc1Fepem.s 			page 14


 587 0002 82B0     		sub	sp, sp, #8
 588              	.LCFI27:
 589              		.cfi_def_cfa_offset 16
 590 0004 00AF     		add	r7, sp, #0
 591              	.LCFI28:
 592              		.cfi_def_cfa_register 7
 593 0006 7860     		str	r0, [r7, #4]
 594 0008 3960     		str	r1, [r7]
 159:Core/Src/radioenge_modem.c ****     LoRaWaitDutyCycle();
 595              		.loc 1 159 5
 596 000a FFF7FEFF 		bl	LoRaWaitDutyCycle
 160:Core/Src/radioenge_modem.c ****     return LoRaSendNow(LoraWANPort,msg);    
 597              		.loc 1 160 12
 598 000e 3968     		ldr	r1, [r7]
 599 0010 7868     		ldr	r0, [r7, #4]
 600 0012 FFF7FEFF 		bl	LoRaSendNow
 601 0016 0346     		mov	r3, r0
 161:Core/Src/radioenge_modem.c **** }
 602              		.loc 1 161 1
 603 0018 1846     		mov	r0, r3
 604 001a 0837     		adds	r7, r7, #8
 605              	.LCFI29:
 606              		.cfi_def_cfa_offset 8
 607 001c BD46     		mov	sp, r7
 608              	.LCFI30:
 609              		.cfi_def_cfa_register 13
 610              		@ sp needed
 611 001e 80BD     		pop	{r7, pc}
 612              		.cfi_endproc
 613              	.LFE226:
 615              		.section	.rodata
 616 0006 0000     		.align	2
 617              	.LC1:
 618 0008 25303278 		.ascii	"%02x\000"
 618      00
 619              		.section	.text.bin_encode,"ax",%progbits
 620              		.align	1
 621              		.global	bin_encode
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 626              	bin_encode:
 627              	.LFB227:
 162:Core/Src/radioenge_modem.c **** 
 163:Core/Src/radioenge_modem.c **** size_t bin_encode(void* in, size_t in_size, uint8_t* out, size_t max_out_size)
 164:Core/Src/radioenge_modem.c **** {
 628              		.loc 1 164 1
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 32
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              	.LCFI31:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 88B0     		sub	sp, sp, #32
 638              	.LCFI32:
ARM GAS  /tmp/cc1Fepem.s 			page 15


 639              		.cfi_def_cfa_offset 40
 640 0004 00AF     		add	r7, sp, #0
 641              	.LCFI33:
 642              		.cfi_def_cfa_register 7
 643 0006 F860     		str	r0, [r7, #12]
 644 0008 B960     		str	r1, [r7, #8]
 645 000a 7A60     		str	r2, [r7, #4]
 646 000c 3B60     		str	r3, [r7]
 165:Core/Src/radioenge_modem.c ****     uint8_t* in_ptr = (uint8_t*)in;
 647              		.loc 1 165 14
 648 000e FB68     		ldr	r3, [r7, #12]
 649 0010 FB61     		str	r3, [r7, #28]
 166:Core/Src/radioenge_modem.c ****     size_t offset=0;
 650              		.loc 1 166 12
 651 0012 0023     		movs	r3, #0
 652 0014 BB61     		str	r3, [r7, #24]
 167:Core/Src/radioenge_modem.c ****     size_t iter = in_size;
 653              		.loc 1 167 12
 654 0016 BB68     		ldr	r3, [r7, #8]
 655 0018 7B61     		str	r3, [r7, #20]
 168:Core/Src/radioenge_modem.c ****     size_t i;
 169:Core/Src/radioenge_modem.c ****     //check for buffer overflow
 170:Core/Src/radioenge_modem.c ****     if(max_out_size<in_size*2)
 656              		.loc 1 170 28
 657 001a BB68     		ldr	r3, [r7, #8]
 658 001c 5B00     		lsls	r3, r3, #1
 659              		.loc 1 170 7
 660 001e 3A68     		ldr	r2, [r7]
 661 0020 9A42     		cmp	r2, r3
 662 0022 03D2     		bcs	.L39
 171:Core/Src/radioenge_modem.c ****     {
 172:Core/Src/radioenge_modem.c ****         iter = max_out_size/2;
 663              		.loc 1 172 14
 664 0024 3B68     		ldr	r3, [r7]
 665 0026 5B08     		lsrs	r3, r3, #1
 666 0028 7B61     		str	r3, [r7, #20]
 667 002a 01E0     		b	.L40
 668              	.L39:
 173:Core/Src/radioenge_modem.c ****     }
 174:Core/Src/radioenge_modem.c ****     else
 175:Core/Src/radioenge_modem.c ****     {
 176:Core/Src/radioenge_modem.c ****         iter = in_size;
 669              		.loc 1 176 14
 670 002c BB68     		ldr	r3, [r7, #8]
 671 002e 7B61     		str	r3, [r7, #20]
 672              	.L40:
 177:Core/Src/radioenge_modem.c ****     }
 178:Core/Src/radioenge_modem.c ****     //create the hex string expected by RadioEnge AT
 179:Core/Src/radioenge_modem.c ****     for(i=0;i<iter;i++)
 673              		.loc 1 179 10
 674 0030 0023     		movs	r3, #0
 675 0032 3B61     		str	r3, [r7, #16]
 676              		.loc 1 179 5
 677 0034 10E0     		b	.L41
 678              	.L42:
 679              	.LBB5:
 180:Core/Src/radioenge_modem.c ****     {
ARM GAS  /tmp/cc1Fepem.s 			page 16


 181:Core/Src/radioenge_modem.c ****         sprintf(out+offset,"%02x",*(in_ptr++));
 680              		.loc 1 181 20 discriminator 3
 681 0036 7A68     		ldr	r2, [r7, #4]
 682 0038 BB69     		ldr	r3, [r7, #24]
 683 003a D018     		adds	r0, r2, r3
 684              		.loc 1 181 43 discriminator 3
 685 003c FB69     		ldr	r3, [r7, #28]
 686 003e 5A1C     		adds	r2, r3, #1
 687 0040 FA61     		str	r2, [r7, #28]
 688              		.loc 1 181 35 discriminator 3
 689 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 690              		.loc 1 181 9 discriminator 3
 691 0044 1A46     		mov	r2, r3
 692 0046 0949     		ldr	r1, .L44
 693 0048 FFF7FEFF 		bl	sprintf
 182:Core/Src/radioenge_modem.c ****         offset+=2*sizeof(uint8_t);
 694              		.loc 1 182 15 discriminator 3
 695 004c BB69     		ldr	r3, [r7, #24]
 696 004e 0233     		adds	r3, r3, #2
 697 0050 BB61     		str	r3, [r7, #24]
 698              	.LBE5:
 179:Core/Src/radioenge_modem.c ****     {
 699              		.loc 1 179 21 discriminator 3
 700 0052 3B69     		ldr	r3, [r7, #16]
 701 0054 0133     		adds	r3, r3, #1
 702 0056 3B61     		str	r3, [r7, #16]
 703              	.L41:
 179:Core/Src/radioenge_modem.c ****     {
 704              		.loc 1 179 14 discriminator 1
 705 0058 3A69     		ldr	r2, [r7, #16]
 706 005a 7B69     		ldr	r3, [r7, #20]
 707 005c 9A42     		cmp	r2, r3
 708 005e EAD3     		bcc	.L42
 183:Core/Src/radioenge_modem.c ****     }
 184:Core/Src/radioenge_modem.c ****     return offset; //returns the size of the AT buffer
 709              		.loc 1 184 12
 710 0060 BB69     		ldr	r3, [r7, #24]
 185:Core/Src/radioenge_modem.c **** }
 711              		.loc 1 185 1
 712 0062 1846     		mov	r0, r3
 713 0064 2037     		adds	r7, r7, #32
 714              	.LCFI34:
 715              		.cfi_def_cfa_offset 8
 716 0066 BD46     		mov	sp, r7
 717              	.LCFI35:
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 0068 80BD     		pop	{r7, pc}
 721              	.L45:
 722 006a 00BF     		.align	2
 723              	.L44:
 724 006c 08000000 		.word	.LC1
 725              		.cfi_endproc
 726              	.LFE227:
 728              		.section	.text.LoRaSendB,"ax",%progbits
 729              		.align	1
 730              		.global	LoRaSendB
ARM GAS  /tmp/cc1Fepem.s 			page 17


 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	LoRaSendB:
 736              	.LFB228:
 186:Core/Src/radioenge_modem.c **** 
 187:Core/Src/radioenge_modem.c **** osStatus_t LoRaSendB(uint32_t LoraWANPort, uint8_t* msg, size_t size)
 188:Core/Src/radioenge_modem.c **** {
 737              		.loc 1 188 1
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 16
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0000 80B5     		push	{r7, lr}
 742              	.LCFI36:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 84B0     		sub	sp, sp, #16
 747              	.LCFI37:
 748              		.cfi_def_cfa_offset 24
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI38:
 751              		.cfi_def_cfa_register 7
 752 0006 F860     		str	r0, [r7, #12]
 753 0008 B960     		str	r1, [r7, #8]
 754 000a 7A60     		str	r2, [r7, #4]
 189:Core/Src/radioenge_modem.c ****     LoRaWaitDutyCycle();     
 755              		.loc 1 189 5
 756 000c FFF7FEFF 		bl	LoRaWaitDutyCycle
 190:Core/Src/radioenge_modem.c ****     return LoRaSendBNow(LoraWANPort,msg,size);    
 757              		.loc 1 190 12
 758 0010 7A68     		ldr	r2, [r7, #4]
 759 0012 B968     		ldr	r1, [r7, #8]
 760 0014 F868     		ldr	r0, [r7, #12]
 761 0016 FFF7FEFF 		bl	LoRaSendBNow
 762 001a 0346     		mov	r3, r0
 191:Core/Src/radioenge_modem.c **** }
 763              		.loc 1 191 1
 764 001c 1846     		mov	r0, r3
 765 001e 1037     		adds	r7, r7, #16
 766              	.LCFI39:
 767              		.cfi_def_cfa_offset 8
 768 0020 BD46     		mov	sp, r7
 769              	.LCFI40:
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 0022 80BD     		pop	{r7, pc}
 773              		.cfi_endproc
 774              	.LFE228:
 776              		.section	.text.LoRaWaitDutyCycle,"ax",%progbits
 777              		.align	1
 778              		.global	LoRaWaitDutyCycle
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	LoRaWaitDutyCycle:
 784              	.LFB229:
ARM GAS  /tmp/cc1Fepem.s 			page 18


 192:Core/Src/radioenge_modem.c **** 
 193:Core/Src/radioenge_modem.c **** 
 194:Core/Src/radioenge_modem.c **** //LoRaSendNow and LoRaSendBNow should only be used in conjunction with LoRaWaitDutyCycle()
 195:Core/Src/radioenge_modem.c **** 
 196:Core/Src/radioenge_modem.c **** void LoRaWaitDutyCycle()
 197:Core/Src/radioenge_modem.c **** {
 785              		.loc 1 197 1
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789 0000 80B5     		push	{r7, lr}
 790              	.LCFI41:
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 00AF     		add	r7, sp, #0
 795              	.LCFI42:
 796              		.cfi_def_cfa_register 7
 198:Core/Src/radioenge_modem.c ****    osEventFlagsWait(ModemStatusFlagsHandle, RADIO_READY, osFlagsWaitAny | osFlagsNoClear, osWaitFor
 797              		.loc 1 198 4
 798 0004 0C4B     		ldr	r3, .L49
 799 0006 1868     		ldr	r0, [r3]
 800 0008 4FF0FF33 		mov	r3, #-1
 801 000c 0222     		movs	r2, #2
 802 000e 0821     		movs	r1, #8
 803 0010 FFF7FEFF 		bl	osEventFlagsWait
 199:Core/Src/radioenge_modem.c ****    osSemaphoreAcquire(LoRaTXSemaphoreHandle,osWaitForever);    
 804              		.loc 1 199 4
 805 0014 094B     		ldr	r3, .L49+4
 806 0016 1B68     		ldr	r3, [r3]
 807 0018 4FF0FF31 		mov	r1, #-1
 808 001c 1846     		mov	r0, r3
 809 001e FFF7FEFF 		bl	osSemaphoreAcquire
 200:Core/Src/radioenge_modem.c ****    osEventFlagsWait(ModemStatusFlagsHandle, RADIO_READY, osFlagsWaitAny | osFlagsNoClear, osWaitFor
 810              		.loc 1 200 4
 811 0022 054B     		ldr	r3, .L49
 812 0024 1868     		ldr	r0, [r3]
 813 0026 4FF0FF33 		mov	r3, #-1
 814 002a 0222     		movs	r2, #2
 815 002c 0821     		movs	r1, #8
 816 002e FFF7FEFF 		bl	osEventFlagsWait
 201:Core/Src/radioenge_modem.c **** }
 817              		.loc 1 201 1
 818 0032 00BF     		nop
 819 0034 80BD     		pop	{r7, pc}
 820              	.L50:
 821 0036 00BF     		.align	2
 822              	.L49:
 823 0038 00000000 		.word	ModemStatusFlagsHandle
 824 003c 00000000 		.word	LoRaTXSemaphoreHandle
 825              		.cfi_endproc
 826              	.LFE229:
 828              		.section	.rodata
 829 000d 000000   		.align	2
 830              	.LC2:
 831 0010 41542B53 		.ascii	"AT+SEND=%d:%s\015\012\000"
 831      454E443D 
ARM GAS  /tmp/cc1Fepem.s 			page 19


 831      25643A25 
 831      730D0A00 
 832              		.section	.text.LoRaSendNow,"ax",%progbits
 833              		.align	1
 834              		.global	LoRaSendNow
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	LoRaSendNow:
 840              	.LFB230:
 202:Core/Src/radioenge_modem.c **** 
 203:Core/Src/radioenge_modem.c **** osStatus_t LoRaSendNow(uint32_t LoraWANPort, uint8_t* msg)
 204:Core/Src/radioenge_modem.c **** {
 841              		.loc 1 204 1
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 16
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845 0000 80B5     		push	{r7, lr}
 846              	.LCFI43:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 86B0     		sub	sp, sp, #24
 851              	.LCFI44:
 852              		.cfi_def_cfa_offset 32
 853 0004 02AF     		add	r7, sp, #8
 854              	.LCFI45:
 855              		.cfi_def_cfa 7, 24
 856 0006 7860     		str	r0, [r7, #4]
 857 0008 3960     		str	r1, [r7]
 205:Core/Src/radioenge_modem.c ****     osStatus_t ret = osError;    
 858              		.loc 1 205 16
 859 000a 4FF0FF33 		mov	r3, #-1
 860 000e FB60     		str	r3, [r7, #12]
 206:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 861              		.loc 1 206 5
 862 0010 164B     		ldr	r3, .L54
 863 0012 1B68     		ldr	r3, [r3]
 864 0014 4FF0FF31 		mov	r1, #-1
 865 0018 1846     		mov	r0, r3
 866 001a FFF7FEFF 		bl	osSemaphoreAcquire
 207:Core/Src/radioenge_modem.c ****     if (gRadioState == RADIO_READY)
 867              		.loc 1 207 21
 868 001e 144B     		ldr	r3, .L54+4
 869 0020 1B78     		ldrb	r3, [r3]
 870 0022 DBB2     		uxtb	r3, r3
 871              		.loc 1 207 8
 872 0024 082B     		cmp	r3, #8
 873 0026 12D1     		bne	.L52
 874              	.LBB6:
 208:Core/Src/radioenge_modem.c ****     {
 209:Core/Src/radioenge_modem.c ****         snprintf(gSendBuffer, OUT_BUFFER_SIZE + 16, "AT+SEND=%d:%s\r\n", LoraWANPort, msg);
 875              		.loc 1 209 9
 876 0028 3B68     		ldr	r3, [r7]
 877 002a 0093     		str	r3, [sp]
 878 002c 7B68     		ldr	r3, [r7, #4]
 879 002e 114A     		ldr	r2, .L54+8
ARM GAS  /tmp/cc1Fepem.s 			page 20


 880 0030 5021     		movs	r1, #80
 881 0032 1148     		ldr	r0, .L54+12
 882 0034 FFF7FEFF 		bl	snprintf
 210:Core/Src/radioenge_modem.c ****         if (sendRAWAT(gSendBuffer) == AT_TX_OK)
 883              		.loc 1 210 13
 884 0038 0F48     		ldr	r0, .L54+12
 885 003a FFF7FEFF 		bl	sendRAWAT
 886 003e 0346     		mov	r3, r0
 887              		.loc 1 210 12
 888 0040 012B     		cmp	r3, #1
 889 0042 04D1     		bne	.L52
 211:Core/Src/radioenge_modem.c ****         {
 212:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_DUTYCYCLED);
 890              		.loc 1 212 13
 891 0044 1020     		movs	r0, #16
 892 0046 FFF7FEFF 		bl	SetRadioState
 213:Core/Src/radioenge_modem.c ****             ret = osOK;
 893              		.loc 1 213 17
 894 004a 0023     		movs	r3, #0
 895 004c FB60     		str	r3, [r7, #12]
 896              	.L52:
 897              	.LBE6:
 214:Core/Src/radioenge_modem.c ****         }        
 215:Core/Src/radioenge_modem.c ****     }    
 216:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);
 898              		.loc 1 216 5
 899 004e 074B     		ldr	r3, .L54
 900 0050 1B68     		ldr	r3, [r3]
 901 0052 1846     		mov	r0, r3
 902 0054 FFF7FEFF 		bl	osSemaphoreRelease
 217:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(LoRaTXSemaphoreHandle);
 903              		.loc 1 217 5
 904 0058 084B     		ldr	r3, .L54+16
 905 005a 1B68     		ldr	r3, [r3]
 906 005c 1846     		mov	r0, r3
 907 005e FFF7FEFF 		bl	osSemaphoreRelease
 218:Core/Src/radioenge_modem.c ****     return ret;
 908              		.loc 1 218 12
 909 0062 FB68     		ldr	r3, [r7, #12]
 219:Core/Src/radioenge_modem.c **** }
 910              		.loc 1 219 1
 911 0064 1846     		mov	r0, r3
 912 0066 1037     		adds	r7, r7, #16
 913              	.LCFI46:
 914              		.cfi_def_cfa_offset 8
 915 0068 BD46     		mov	sp, r7
 916              	.LCFI47:
 917              		.cfi_def_cfa_register 13
 918              		@ sp needed
 919 006a 80BD     		pop	{r7, pc}
 920              	.L55:
 921              		.align	2
 922              	.L54:
 923 006c 00000000 		.word	RadioStateSemaphoreHandle
 924 0070 00000000 		.word	gRadioState
 925 0074 10000000 		.word	.LC2
 926 0078 00000000 		.word	gSendBuffer
ARM GAS  /tmp/cc1Fepem.s 			page 21


 927 007c 00000000 		.word	LoRaTXSemaphoreHandle
 928              		.cfi_endproc
 929              	.LFE230:
 931              		.section	.rodata
 932              		.align	2
 933              	.LC3:
 934 0020 41542B53 		.ascii	"AT+SENDB=%d:%s\015\012\000"
 934      454E4442 
 934      3D25643A 
 934      25730D0A 
 934      00
 935              		.section	.text.LoRaSendBNow,"ax",%progbits
 936              		.align	1
 937              		.global	LoRaSendBNow
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 942              	LoRaSendBNow:
 943              	.LFB231:
 220:Core/Src/radioenge_modem.c **** 
 221:Core/Src/radioenge_modem.c **** osStatus_t LoRaSendBNow(uint32_t LoraWANPort, uint8_t* msg, size_t size)
 222:Core/Src/radioenge_modem.c **** {
 944              		.loc 1 222 1
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 24
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948 0000 80B5     		push	{r7, lr}
 949              	.LCFI48:
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 88B0     		sub	sp, sp, #32
 954              	.LCFI49:
 955              		.cfi_def_cfa_offset 40
 956 0004 02AF     		add	r7, sp, #8
 957              	.LCFI50:
 958              		.cfi_def_cfa 7, 32
 959 0006 F860     		str	r0, [r7, #12]
 960 0008 B960     		str	r1, [r7, #8]
 961 000a 7A60     		str	r2, [r7, #4]
 223:Core/Src/radioenge_modem.c ****     osStatus_t ret = osError;
 962              		.loc 1 223 16
 963 000c 4FF0FF33 		mov	r3, #-1
 964 0010 7B61     		str	r3, [r7, #20]
 224:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 965              		.loc 1 224 5
 966 0012 1A4B     		ldr	r3, .L59
 967 0014 1B68     		ldr	r3, [r3]
 968 0016 4FF0FF31 		mov	r1, #-1
 969 001a 1846     		mov	r0, r3
 970 001c FFF7FEFF 		bl	osSemaphoreAcquire
 225:Core/Src/radioenge_modem.c ****     if (gRadioState == RADIO_READY)
 971              		.loc 1 225 21
 972 0020 174B     		ldr	r3, .L59+4
 973 0022 1B78     		ldrb	r3, [r3]
 974 0024 DBB2     		uxtb	r3, r3
 975              		.loc 1 225 8
ARM GAS  /tmp/cc1Fepem.s 			page 22


 976 0026 082B     		cmp	r3, #8
 977 0028 19D1     		bne	.L57
 978              	.LBB7:
 226:Core/Src/radioenge_modem.c ****     {
 227:Core/Src/radioenge_modem.c ****         size_t encoded_size = bin_encode((void *)(msg), size, gEncodedString, OUT_BUFFER_SIZE);
 979              		.loc 1 227 31
 980 002a 4023     		movs	r3, #64
 981 002c 154A     		ldr	r2, .L59+8
 982 002e 7968     		ldr	r1, [r7, #4]
 983 0030 B868     		ldr	r0, [r7, #8]
 984 0032 FFF7FEFF 		bl	bin_encode
 985 0036 3861     		str	r0, [r7, #16]
 228:Core/Src/radioenge_modem.c ****         snprintf(gSendBuffer, OUT_BUFFER_SIZE + 16, "AT+SENDB=%d:%s\r\n", LoraWANPort, gEncodedStri
 986              		.loc 1 228 9
 987 0038 124B     		ldr	r3, .L59+8
 988 003a 0093     		str	r3, [sp]
 989 003c FB68     		ldr	r3, [r7, #12]
 990 003e 124A     		ldr	r2, .L59+12
 991 0040 5021     		movs	r1, #80
 992 0042 1248     		ldr	r0, .L59+16
 993 0044 FFF7FEFF 		bl	snprintf
 229:Core/Src/radioenge_modem.c ****         if (sendRAWAT(gSendBuffer) == AT_TX_OK)
 994              		.loc 1 229 13
 995 0048 1048     		ldr	r0, .L59+16
 996 004a FFF7FEFF 		bl	sendRAWAT
 997 004e 0346     		mov	r3, r0
 998              		.loc 1 229 12
 999 0050 012B     		cmp	r3, #1
 1000 0052 04D1     		bne	.L57
 230:Core/Src/radioenge_modem.c ****         {
 231:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_DUTYCYCLED);
 1001              		.loc 1 231 13
 1002 0054 1020     		movs	r0, #16
 1003 0056 FFF7FEFF 		bl	SetRadioState
 232:Core/Src/radioenge_modem.c ****             ret = osOK;
 1004              		.loc 1 232 17
 1005 005a 0023     		movs	r3, #0
 1006 005c 7B61     		str	r3, [r7, #20]
 1007              	.L57:
 1008              	.LBE7:
 233:Core/Src/radioenge_modem.c ****         }
 234:Core/Src/radioenge_modem.c ****     }
 235:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);
 1009              		.loc 1 235 5
 1010 005e 074B     		ldr	r3, .L59
 1011 0060 1B68     		ldr	r3, [r3]
 1012 0062 1846     		mov	r0, r3
 1013 0064 FFF7FEFF 		bl	osSemaphoreRelease
 236:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(LoRaTXSemaphoreHandle);
 1014              		.loc 1 236 5
 1015 0068 094B     		ldr	r3, .L59+20
 1016 006a 1B68     		ldr	r3, [r3]
 1017 006c 1846     		mov	r0, r3
 1018 006e FFF7FEFF 		bl	osSemaphoreRelease
 237:Core/Src/radioenge_modem.c ****     return ret;
 1019              		.loc 1 237 12
 1020 0072 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cc1Fepem.s 			page 23


 238:Core/Src/radioenge_modem.c **** }
 1021              		.loc 1 238 1
 1022 0074 1846     		mov	r0, r3
 1023 0076 1837     		adds	r7, r7, #24
 1024              	.LCFI51:
 1025              		.cfi_def_cfa_offset 8
 1026 0078 BD46     		mov	sp, r7
 1027              	.LCFI52:
 1028              		.cfi_def_cfa_register 13
 1029              		@ sp needed
 1030 007a 80BD     		pop	{r7, pc}
 1031              	.L60:
 1032              		.align	2
 1033              	.L59:
 1034 007c 00000000 		.word	RadioStateSemaphoreHandle
 1035 0080 00000000 		.word	gRadioState
 1036 0084 00000000 		.word	gEncodedString
 1037 0088 20000000 		.word	.LC3
 1038 008c 00000000 		.word	gSendBuffer
 1039 0090 00000000 		.word	LoRaTXSemaphoreHandle
 1040              		.cfi_endproc
 1041              	.LFE231:
 1043              		.text
 1044              	.Letext0:
 1045              		.file 2 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/lib/gcc/arm-none-eabi/12.2.1/includ
 1046              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 1047              		.file 4 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1048              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1049              		.file 6 "Core/Inc/radioenge_modem.h"
 1050              		.file 7 "Core/Inc/uart_at.h"
 1051              		.file 8 "<built-in>"
ARM GAS  /tmp/cc1Fepem.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 radioenge_modem.c
     /tmp/cc1Fepem.s:24     .bss.gJoinedFSM:0000000000000000 gJoinedFSM
     /tmp/cc1Fepem.s:25     .bss.gJoinedFSM:0000000000000000 $d
     /tmp/cc1Fepem.s:30     .data.gRadioState:0000000000000000 gRadioState
     /tmp/cc1Fepem.s:37     .data.gConfigCmds:0000000000000000 gConfigCmds
     /tmp/cc1Fepem.s:34     .data.gConfigCmds:0000000000000000 $d
     /tmp/cc1Fepem.s:47     .bss.gConsecutiveJoinErrors:0000000000000000 gConsecutiveJoinErrors
     /tmp/cc1Fepem.s:44     .bss.gConsecutiveJoinErrors:0000000000000000 $d
     /tmp/cc1Fepem.s:50     .text.LoRaWAN_JoinCallback:0000000000000000 $t
     /tmp/cc1Fepem.s:56     .text.LoRaWAN_JoinCallback:0000000000000000 LoRaWAN_JoinCallback
     /tmp/cc1Fepem.s:277    .text.SetRadioState:0000000000000000 SetRadioState
     /tmp/cc1Fepem.s:146    .text.LoRaWAN_JoinCallback:000000000000006c $d
     /tmp/cc1Fepem.s:154    .text.DutyCycleTimerCallback:0000000000000000 $t
     /tmp/cc1Fepem.s:160    .text.DutyCycleTimerCallback:0000000000000000 DutyCycleTimerCallback
     /tmp/cc1Fepem.s:215    .text.DutyCycleTimerCallback:0000000000000038 $d
     /tmp/cc1Fepem.s:221    .rodata:0000000000000000 $d
     /tmp/cc1Fepem.s:225    .text.resetRadio:0000000000000000 $t
     /tmp/cc1Fepem.s:231    .text.resetRadio:0000000000000000 resetRadio
     /tmp/cc1Fepem.s:266    .text.resetRadio:0000000000000020 $d
     /tmp/cc1Fepem.s:271    .text.SetRadioState:0000000000000000 $t
     /tmp/cc1Fepem.s:319    .text.SetRadioState:0000000000000024 $d
     /tmp/cc1Fepem.s:325    .text.ModemLedCallback:0000000000000000 $t
     /tmp/cc1Fepem.s:331    .text.ModemLedCallback:0000000000000000 ModemLedCallback
     /tmp/cc1Fepem.s:367    .text.ModemManagerTaskCode:0000000000000000 $t
     /tmp/cc1Fepem.s:373    .text.ModemManagerTaskCode:0000000000000000 ModemManagerTaskCode
     /tmp/cc1Fepem.s:436    .text.ModemManagerTaskCode:0000000000000060 $d
     /tmp/cc1Fepem.s:452    .text.ModemManagerTaskCode:00000000000000a0 $t
     /tmp/cc1Fepem.s:545    .text.ModemManagerTaskCode:0000000000000138 $d
     /tmp/cc1Fepem.s:560    .bss.gEncodedString:0000000000000000 gEncodedString
     /tmp/cc1Fepem.s:557    .bss.gEncodedString:0000000000000000 $d
     /tmp/cc1Fepem.s:567    .bss.gSendBuffer:0000000000000000 gSendBuffer
     /tmp/cc1Fepem.s:564    .bss.gSendBuffer:0000000000000000 $d
     /tmp/cc1Fepem.s:570    .text.LoRaSend:0000000000000000 $t
     /tmp/cc1Fepem.s:576    .text.LoRaSend:0000000000000000 LoRaSend
     /tmp/cc1Fepem.s:783    .text.LoRaWaitDutyCycle:0000000000000000 LoRaWaitDutyCycle
     /tmp/cc1Fepem.s:839    .text.LoRaSendNow:0000000000000000 LoRaSendNow
     /tmp/cc1Fepem.s:620    .text.bin_encode:0000000000000000 $t
     /tmp/cc1Fepem.s:626    .text.bin_encode:0000000000000000 bin_encode
     /tmp/cc1Fepem.s:724    .text.bin_encode:000000000000006c $d
     /tmp/cc1Fepem.s:729    .text.LoRaSendB:0000000000000000 $t
     /tmp/cc1Fepem.s:735    .text.LoRaSendB:0000000000000000 LoRaSendB
     /tmp/cc1Fepem.s:942    .text.LoRaSendBNow:0000000000000000 LoRaSendBNow
     /tmp/cc1Fepem.s:777    .text.LoRaWaitDutyCycle:0000000000000000 $t
     /tmp/cc1Fepem.s:823    .text.LoRaWaitDutyCycle:0000000000000038 $d
     /tmp/cc1Fepem.s:833    .text.LoRaSendNow:0000000000000000 $t
     /tmp/cc1Fepem.s:923    .text.LoRaSendNow:000000000000006c $d
     /tmp/cc1Fepem.s:936    .text.LoRaSendBNow:0000000000000000 $t
     /tmp/cc1Fepem.s:1034   .text.LoRaSendBNow:000000000000007c $d

UNDEFINED SYMBOLS
osSemaphoreAcquire
osThreadFlagsSet
osSemaphoreRelease
RadioStateSemaphoreHandle
ModemMngrTaskHandle
osDelay
ARM GAS  /tmp/cc1Fepem.s 			page 25


sendRAWAT
osTimerStart
osThreadFlagsWait
osEventFlagsClear
osEventFlagsSet
ModemLedTimerHandle
ModemStatusFlagsHandle
DutyCycleTimerHandle
sprintf
osEventFlagsWait
LoRaTXSemaphoreHandle
snprintf
