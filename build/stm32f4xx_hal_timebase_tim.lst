ARM GAS  /tmp/ccd7gfXW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_timebase_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_hal_timebase_tim.c"
  20              		.global	htim11
  21              		.section	.bss.htim11,"aw",%nobits
  22              		.align	2
  25              	htim11:
  26 0000 00000000 		.space	72
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.section	.text.HAL_InitTick,"ax",%progbits
  28              		.align	1
  29              		.global	HAL_InitTick
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	HAL_InitTick:
  35              	.LFB216:
   1:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @file    stm32f4xx_hal_timebase_TIM.c
   5:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *
  16:Core/Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
  18:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  20:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_hal_timebase_tim.c **** #include "stm32f4xx_hal.h"
ARM GAS  /tmp/ccd7gfXW.s 			page 2


  22:Core/Src/stm32f4xx_hal_timebase_tim.c **** #include "stm32f4xx_hal_tim.h"
  23:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  24:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Core/Src/stm32f4xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim11;
  29:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/stm32f4xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  31:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  32:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
  33:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM11 as a time base source.
  34:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Core/Src/stm32f4xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
  41:Core/Src/stm32f4xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Core/Src/stm32f4xx_hal_timebase_tim.c **** {
  36              		.loc 1 42 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 48
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 8CB0     		sub	sp, sp, #48
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 56
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  43:Core/Src/stm32f4xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  44:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0U;
  52              		.loc 1 44 25
  53 0008 0023     		movs	r3, #0
  54 000a BB62     		str	r3, [r7, #40]
  45:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  46:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0U;
  55              		.loc 1 46 25
  56 000c 0023     		movs	r3, #0
  57 000e 7B62     		str	r3, [r7, #36]
  58              	.LBB2:
  47:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Core/Src/stm32f4xx_hal_timebase_tim.c ****   HAL_StatusTypeDef     status;
  49:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  50:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable TIM11 clock */
  51:Core/Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_RCC_TIM11_CLK_ENABLE();
  59              		.loc 1 51 3
  60 0010 0023     		movs	r3, #0
  61 0012 BB60     		str	r3, [r7, #8]
  62 0014 2E4B     		ldr	r3, .L5
ARM GAS  /tmp/ccd7gfXW.s 			page 3


  63 0016 5B6C     		ldr	r3, [r3, #68]
  64 0018 2D4A     		ldr	r2, .L5
  65 001a 43F48023 		orr	r3, r3, #262144
  66 001e 5364     		str	r3, [r2, #68]
  67 0020 2B4B     		ldr	r3, .L5
  68 0022 5B6C     		ldr	r3, [r3, #68]
  69 0024 03F48023 		and	r3, r3, #262144
  70 0028 BB60     		str	r3, [r7, #8]
  71 002a BB68     		ldr	r3, [r7, #8]
  72              	.LBE2:
  52:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  53:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Get clock configuration */
  54:Core/Src/stm32f4xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  73              		.loc 1 54 3
  74 002c 07F10C02 		add	r2, r7, #12
  75 0030 07F11003 		add	r3, r7, #16
  76 0034 1146     		mov	r1, r2
  77 0036 1846     		mov	r0, r3
  78 0038 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  55:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  56:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Compute TIM11 clock */
  57:Core/Src/stm32f4xx_hal_timebase_tim.c ****       uwTimclock = HAL_RCC_GetPCLK2Freq();
  79              		.loc 1 57 20
  80 003c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  81 0040 B862     		str	r0, [r7, #40]
  58:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  59:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM11 counter clock equal to 1MHz */
  60:Core/Src/stm32f4xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  82              		.loc 1 60 46
  83 0042 BB6A     		ldr	r3, [r7, #40]
  84 0044 234A     		ldr	r2, .L5+4
  85 0046 A2FB0323 		umull	r2, r3, r2, r3
  86 004a 9B0C     		lsrs	r3, r3, #18
  87              		.loc 1 60 20
  88 004c 013B     		subs	r3, r3, #1
  89 004e 7B62     		str	r3, [r7, #36]
  61:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  62:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Initialize TIM11 */
  63:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim11.Instance = TIM11;
  90              		.loc 1 63 19
  91 0050 214B     		ldr	r3, .L5+8
  92 0052 224A     		ldr	r2, .L5+12
  93 0054 1A60     		str	r2, [r3]
  64:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  65:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  66:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  67:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + Period = [(TIM11CLK/1000) - 1]. to have a (1/1000) s time base.
  68:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  69:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + ClockDivision = 0
  70:Core/Src/stm32f4xx_hal_timebase_tim.c ****   + Counter direction = Up
  71:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
  72:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim11.Init.Period = (1000000U / 1000U) - 1U;
  94              		.loc 1 72 22
  95 0056 204B     		ldr	r3, .L5+8
  96 0058 40F2E732 		movw	r2, #999
  97 005c DA60     		str	r2, [r3, #12]
  73:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim11.Init.Prescaler = uwPrescalerValue;
ARM GAS  /tmp/ccd7gfXW.s 			page 4


  98              		.loc 1 73 25
  99 005e 1E4A     		ldr	r2, .L5+8
 100 0060 7B6A     		ldr	r3, [r7, #36]
 101 0062 5360     		str	r3, [r2, #4]
  74:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim11.Init.ClockDivision = 0;
 102              		.loc 1 74 29
 103 0064 1C4B     		ldr	r3, .L5+8
 104 0066 0022     		movs	r2, #0
 105 0068 1A61     		str	r2, [r3, #16]
  75:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 106              		.loc 1 75 27
 107 006a 1B4B     		ldr	r3, .L5+8
 108 006c 0022     		movs	r2, #0
 109 006e 9A60     		str	r2, [r3, #8]
  76:Core/Src/stm32f4xx_hal_timebase_tim.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 110              		.loc 1 76 33
 111 0070 194B     		ldr	r3, .L5+8
 112 0072 0022     		movs	r2, #0
 113 0074 9A61     		str	r2, [r3, #24]
  77:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
  78:Core/Src/stm32f4xx_hal_timebase_tim.c ****   status = HAL_TIM_Base_Init(&htim11);
 114              		.loc 1 78 12
 115 0076 1848     		ldr	r0, .L5+8
 116 0078 FFF7FEFF 		bl	HAL_TIM_Base_Init
 117 007c 0346     		mov	r3, r0
 118 007e 87F82F30 		strb	r3, [r7, #47]
  79:Core/Src/stm32f4xx_hal_timebase_tim.c ****   if (status == HAL_OK)
 119              		.loc 1 79 6
 120 0082 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 121 0086 002B     		cmp	r3, #0
 122 0088 1BD1     		bne	.L2
  80:Core/Src/stm32f4xx_hal_timebase_tim.c ****   {
  81:Core/Src/stm32f4xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  82:Core/Src/stm32f4xx_hal_timebase_tim.c ****     status = HAL_TIM_Base_Start_IT(&htim11);
 123              		.loc 1 82 14
 124 008a 1348     		ldr	r0, .L5+8
 125 008c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 126 0090 0346     		mov	r3, r0
 127 0092 87F82F30 		strb	r3, [r7, #47]
  83:Core/Src/stm32f4xx_hal_timebase_tim.c ****     if (status == HAL_OK)
 128              		.loc 1 83 8
 129 0096 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 130 009a 002B     		cmp	r3, #0
 131 009c 11D1     		bne	.L2
  84:Core/Src/stm32f4xx_hal_timebase_tim.c ****     {
  85:Core/Src/stm32f4xx_hal_timebase_tim.c ****     /* Enable the TIM11 global Interrupt */
  86:Core/Src/stm32f4xx_hal_timebase_tim.c ****         HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM11_IRQn);
 132              		.loc 1 86 9
 133 009e 1A20     		movs	r0, #26
 134 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  87:Core/Src/stm32f4xx_hal_timebase_tim.c ****       /* Configure the SysTick IRQ priority */
  88:Core/Src/stm32f4xx_hal_timebase_tim.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 135              		.loc 1 88 10
 136 00a4 7B68     		ldr	r3, [r7, #4]
 137 00a6 0F2B     		cmp	r3, #15
 138 00a8 08D8     		bhi	.L3
  89:Core/Src/stm32f4xx_hal_timebase_tim.c ****       {
ARM GAS  /tmp/ccd7gfXW.s 			page 5


  90:Core/Src/stm32f4xx_hal_timebase_tim.c ****         /* Configure the TIM IRQ priority */
  91:Core/Src/stm32f4xx_hal_timebase_tim.c ****         HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM11_IRQn, TickPriority, 0U);
 139              		.loc 1 91 9
 140 00aa 0022     		movs	r2, #0
 141 00ac 7968     		ldr	r1, [r7, #4]
 142 00ae 1A20     		movs	r0, #26
 143 00b0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  92:Core/Src/stm32f4xx_hal_timebase_tim.c ****         uwTickPrio = TickPriority;
 144              		.loc 1 92 20
 145 00b4 0A4A     		ldr	r2, .L5+16
 146 00b6 7B68     		ldr	r3, [r7, #4]
 147 00b8 1360     		str	r3, [r2]
 148 00ba 02E0     		b	.L2
 149              	.L3:
  93:Core/Src/stm32f4xx_hal_timebase_tim.c ****       }
  94:Core/Src/stm32f4xx_hal_timebase_tim.c ****       else
  95:Core/Src/stm32f4xx_hal_timebase_tim.c ****       {
  96:Core/Src/stm32f4xx_hal_timebase_tim.c ****         status = HAL_ERROR;
 150              		.loc 1 96 16
 151 00bc 0123     		movs	r3, #1
 152 00be 87F82F30 		strb	r3, [r7, #47]
 153              	.L2:
  97:Core/Src/stm32f4xx_hal_timebase_tim.c ****       }
  98:Core/Src/stm32f4xx_hal_timebase_tim.c ****     }
  99:Core/Src/stm32f4xx_hal_timebase_tim.c ****   }
 100:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
 101:Core/Src/stm32f4xx_hal_timebase_tim.c ****  /* Return function status */
 102:Core/Src/stm32f4xx_hal_timebase_tim.c ****   return status;
 154              		.loc 1 102 10
 155 00c2 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 103:Core/Src/stm32f4xx_hal_timebase_tim.c **** }
 156              		.loc 1 103 1
 157 00c6 1846     		mov	r0, r3
 158 00c8 3037     		adds	r7, r7, #48
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161 00ca BD46     		mov	sp, r7
 162              	.LCFI4:
 163              		.cfi_def_cfa_register 13
 164              		@ sp needed
 165 00cc 80BD     		pop	{r7, pc}
 166              	.L6:
 167 00ce 00BF     		.align	2
 168              	.L5:
 169 00d0 00380240 		.word	1073887232
 170 00d4 83DE1B43 		.word	1125899907
 171 00d8 00000000 		.word	htim11
 172 00dc 00480140 		.word	1073825792
 173 00e0 00000000 		.word	uwTickPrio
 174              		.cfi_endproc
 175              	.LFE216:
 177              		.section	.text.HAL_SuspendTick,"ax",%progbits
 178              		.align	1
 179              		.global	HAL_SuspendTick
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
ARM GAS  /tmp/ccd7gfXW.s 			page 6


 184              	HAL_SuspendTick:
 185              	.LFB217:
 104:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
 105:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
 106:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 107:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM11 update interrupt.
 108:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @param  None
 109:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @retval None
 110:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
 111:Core/Src/stm32f4xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 112:Core/Src/stm32f4xx_hal_timebase_tim.c **** {
 186              		.loc 1 112 1
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191 0000 80B4     		push	{r7}
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 7, -4
 195 0002 00AF     		add	r7, sp, #0
 196              	.LCFI6:
 197              		.cfi_def_cfa_register 7
 113:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Disable TIM11 update Interrupt */
 114:Core/Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim11, TIM_IT_UPDATE);
 198              		.loc 1 114 3
 199 0004 064B     		ldr	r3, .L8
 200 0006 1B68     		ldr	r3, [r3]
 201 0008 DA68     		ldr	r2, [r3, #12]
 202 000a 054B     		ldr	r3, .L8
 203 000c 1B68     		ldr	r3, [r3]
 204 000e 22F00102 		bic	r2, r2, #1
 205 0012 DA60     		str	r2, [r3, #12]
 115:Core/Src/stm32f4xx_hal_timebase_tim.c **** }
 206              		.loc 1 115 1
 207 0014 00BF     		nop
 208 0016 BD46     		mov	sp, r7
 209              	.LCFI7:
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 0018 5DF8047B 		ldr	r7, [sp], #4
 213              	.LCFI8:
 214              		.cfi_restore 7
 215              		.cfi_def_cfa_offset 0
 216 001c 7047     		bx	lr
 217              	.L9:
 218 001e 00BF     		.align	2
 219              	.L8:
 220 0020 00000000 		.word	htim11
 221              		.cfi_endproc
 222              	.LFE217:
 224              		.section	.text.HAL_ResumeTick,"ax",%progbits
 225              		.align	1
 226              		.global	HAL_ResumeTick
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
ARM GAS  /tmp/ccd7gfXW.s 			page 7


 231              	HAL_ResumeTick:
 232              	.LFB218:
 116:Core/Src/stm32f4xx_hal_timebase_tim.c **** 
 117:Core/Src/stm32f4xx_hal_timebase_tim.c **** /**
 118:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 119:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM11 update interrupt.
 120:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @param  None
 121:Core/Src/stm32f4xx_hal_timebase_tim.c ****   * @retval None
 122:Core/Src/stm32f4xx_hal_timebase_tim.c ****   */
 123:Core/Src/stm32f4xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 124:Core/Src/stm32f4xx_hal_timebase_tim.c **** {
 233              		.loc 1 124 1
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI9:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI10:
 244              		.cfi_def_cfa_register 7
 125:Core/Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable TIM11 Update interrupt */
 126:Core/Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim11, TIM_IT_UPDATE);
 245              		.loc 1 126 3
 246 0004 064B     		ldr	r3, .L11
 247 0006 1B68     		ldr	r3, [r3]
 248 0008 DA68     		ldr	r2, [r3, #12]
 249 000a 054B     		ldr	r3, .L11
 250 000c 1B68     		ldr	r3, [r3]
 251 000e 42F00102 		orr	r2, r2, #1
 252 0012 DA60     		str	r2, [r3, #12]
 127:Core/Src/stm32f4xx_hal_timebase_tim.c **** }
 253              		.loc 1 127 1
 254 0014 00BF     		nop
 255 0016 BD46     		mov	sp, r7
 256              	.LCFI11:
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 0018 5DF8047B 		ldr	r7, [sp], #4
 260              	.LCFI12:
 261              		.cfi_restore 7
 262              		.cfi_def_cfa_offset 0
 263 001c 7047     		bx	lr
 264              	.L12:
 265 001e 00BF     		.align	2
 266              	.L11:
 267 0020 00000000 		.word	htim11
 268              		.cfi_endproc
 269              	.LFE218:
 271              		.text
 272              	.Letext0:
 273              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 274              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 275              		.file 4 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 276              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/ccd7gfXW.s 			page 8


 277              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 278              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 279              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 280              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 281              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccd7gfXW.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_tim.c
     /tmp/ccd7gfXW.s:25     .bss.htim11:0000000000000000 htim11
     /tmp/ccd7gfXW.s:22     .bss.htim11:0000000000000000 $d
     /tmp/ccd7gfXW.s:28     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccd7gfXW.s:34     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccd7gfXW.s:169    .text.HAL_InitTick:00000000000000d0 $d
     /tmp/ccd7gfXW.s:178    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccd7gfXW.s:184    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccd7gfXW.s:220    .text.HAL_SuspendTick:0000000000000020 $d
     /tmp/ccd7gfXW.s:225    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccd7gfXW.s:231    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccd7gfXW.s:267    .text.HAL_ResumeTick:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
uwTickPrio
