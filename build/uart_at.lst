ARM GAS  /tmp/cc9jRPED.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"uart_at.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/uart_at.c"
  20              		.global	cmd_buffer
  21              		.section	.bss.cmd_buffer,"aw",%nobits
  22              		.align	2
  25              	cmd_buffer:
  26 0000 00000000 		.space	20
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.global	cmd_len
  28              		.section	.bss.cmd_len,"aw",%nobits
  31              	cmd_len:
  32 0000 00       		.space	1
  33              		.global	byte
  34              		.section	.bss.byte,"aw",%nobits
  37              	byte:
  38 0000 00       		.space	1
  39              		.global	mpid_ATCMD_MemPool
  40              		.section	.bss.mpid_ATCMD_MemPool,"aw",%nobits
  41              		.align	2
  44              	mpid_ATCMD_MemPool:
  45 0000 00000000 		.space	4
  46              		.global	mpid_LoRaPayload_MemPool
  47              		.section	.bss.mpid_LoRaPayload_MemPool,"aw",%nobits
  48              		.align	2
  51              	mpid_LoRaPayload_MemPool:
  52 0000 00000000 		.space	4
  53              		.global	AT_COMMANDS
  54              		.section	.rodata.AT_COMMANDS,"a"
  55              		.align	2
  58              	AT_COMMANDS:
  59 0000 00       		.byte	0
  60 0001 08       		.byte	8
  61 0002 03       		.byte	3
  62 0003 00       		.space	1
  63 0004 2C010000 		.word	300
  64 0008 41545A00 		.ascii	"ATZ\000"
  65 000c 00000000 		.space	12
ARM GAS  /tmp/cc9jRPED.s 			page 2


  65      00000000 
  65      00000000 
  66 0018 01       		.byte	1
  67 0019 00       		.byte	0
  68 001a 03       		.byte	3
  69 001b 00       		.space	1
  70 001c 2C010000 		.word	300
  71 0020 41542B43 		.ascii	"AT+CFM\000"
  71      464D00
  72 0027 00000000 		.space	9
  72      00000000 
  72      00
  73 0030 02       		.byte	2
  74 0031 00       		.byte	0
  75 0032 03       		.byte	3
  76 0033 00       		.space	1
  77 0034 2C010000 		.word	300
  78 0038 41542B41 		.ascii	"AT+APPKEY\000"
  78      50504B45 
  78      5900
  79 0042 00000000 		.space	6
  79      0000
  80 0048 03       		.byte	3
  81 0049 00       		.byte	0
  82 004a 03       		.byte	3
  83 004b 00       		.space	1
  84 004c 2C010000 		.word	300
  85 0050 41542B41 		.ascii	"AT+APPEUI\000"
  85      50504555 
  85      4900
  86 005a 00000000 		.space	6
  86      0000
  87 0060 04       		.byte	4
  88 0061 00       		.byte	0
  89 0062 03       		.byte	3
  90 0063 00       		.space	1
  91 0064 2C010000 		.word	300
  92 0068 41542B41 		.ascii	"AT+ADR\000"
  92      445200
  93 006f 00000000 		.space	9
  93      00000000 
  93      00
  94 0078 05       		.byte	5
  95 0079 00       		.byte	0
  96 007a 03       		.byte	3
  97 007b 00       		.space	1
  98 007c 2C010000 		.word	300
  99 0080 41542B4E 		.ascii	"AT+NJM\000"
  99      4A4D00
 100 0087 00000000 		.space	9
 100      00000000 
 100      00
 101 0090 06       		.byte	6
 102 0091 00       		.byte	0
 103 0092 03       		.byte	3
 104 0093 00       		.space	1
 105 0094 2C010000 		.word	300
ARM GAS  /tmp/cc9jRPED.s 			page 3


 106 0098 41542B4A 		.ascii	"AT+JOIN\000"
 106      4F494E00 
 107 00a0 00000000 		.space	8
 107      00000000 
 108 00a8 07       		.byte	7
 109 00a9 00       		.byte	0
 110 00aa 03       		.byte	3
 111 00ab 00       		.space	1
 112 00ac 2C010000 		.word	300
 113 00b0 41542B43 		.ascii	"AT+CHMASK\000"
 113      484D4153 
 113      4B00
 114 00ba 00000000 		.space	6
 114      0000
 115 00c0 08       		.byte	8
 116 00c1 01       		.byte	1
 117 00c2 03       		.byte	3
 118 00c3 00       		.space	1
 119 00c4 2C010000 		.word	300
 120 00c8 41542B53 		.ascii	"AT+SENDB\000"
 120      454E4442 
 120      00
 121 00d1 00000000 		.space	7
 121      000000
 122 00d8 09       		.byte	9
 123 00d9 01       		.byte	1
 124 00da 03       		.byte	3
 125 00db 00       		.space	1
 126 00dc 2C010000 		.word	300
 127 00e0 41542B53 		.ascii	"AT+SEND\000"
 127      454E4400 
 128 00e8 00000000 		.space	8
 128      00000000 
 129 00f0 0A       		.byte	10
 130 00f1 00       		.byte	0
 131 00f2 03       		.byte	3
 132 00f3 00       		.space	1
 133 00f4 2C010000 		.word	300
 134 00f8 41540D0A 		.ascii	"AT\015\012\000"
 134      00
 135 00fd 00000000 		.space	11
 135      00000000 
 135      000000
 136 0108 0B       		.byte	11
 137 0109 00       		.byte	0
 138 010a 03       		.byte	3
 139 010b 00       		.space	1
 140 010c 2C010000 		.word	300
 141 0110 554E4445 		.ascii	"UNDEFINED\000"
 141      46494E45 
 141      4400
 142 011a 00000000 		.space	6
 142      0000
 143              		.global	AT_RESPONSES
 144              		.section	.rodata.AT_RESPONSES,"a"
 145              		.align	2
 148              	AT_RESPONSES:
ARM GAS  /tmp/cc9jRPED.s 			page 4


 149 0000 00       		.byte	0
 150 0001 41545F4F 		.ascii	"AT_OK\000"
 150      4B00
 151 0007 00000000 		.space	10
 151      00000000 
 151      0000
 152 0011 01       		.byte	1
 153 0012 41545F54 		.ascii	"AT_TX_OK\000"
 153      585F4F4B 
 153      00
 154 001b 00000000 		.space	7
 154      000000
 155 0022 02       		.byte	2
 156 0023 52583A00 		.ascii	"RX:\000"
 157 0027 00000000 		.space	12
 157      00000000 
 157      00000000 
 158 0033 03       		.byte	3
 159 0034 41545F45 		.ascii	"AT_ERROR\000"
 159      52524F52 
 159      00
 160 003d 00000000 		.space	7
 160      000000
 161 0044 04       		.byte	4
 162 0045 41545F4A 		.ascii	"AT_JOIN_OK\000"
 162      4F494E5F 
 162      4F4B00
 163 0050 00000000 		.space	5
 163      00
 164 0055 05       		.byte	5
 165 0056 41545F54 		.ascii	"AT_TIMEOUT\000"
 165      494D454F 
 165      555400
 166 0061 00000000 		.space	5
 166      00
 167 0066 06       		.byte	6
 168 0067 41545F42 		.ascii	"AT_BUSY\000"
 168      55535900 
 169 006f 00000000 		.space	8
 169      00000000 
 170 0077 07       		.byte	7
 171 0078 41545F4A 		.ascii	"AT_JOIN_ERROR\000"
 171      4F494E5F 
 171      4552524F 
 171      5200
 172 0086 0000     		.space	2
 173 0088 08       		.byte	8
 174 0089 52616469 		.ascii	"Radioenge\000"
 174      6F656E67 
 174      6500
 175 0093 00000000 		.space	6
 175      0000
 176 0099 09       		.byte	9
 177 009a 41545F4E 		.ascii	"AT_NO_NETWORK_JO"
 177      4F5F4E45 
 177      54574F52 
 177      4B5F4A4F 
ARM GAS  /tmp/cc9jRPED.s 			page 5


 178 00aa 0A       		.byte	10
 179 00ab 554E4445 		.ascii	"UNDEFINED\000"
 179      46494E45 
 179      4400
 180 00b5 00000000 		.space	6
 180      0000
 181              		.global	gPendingResponse
 182              		.section	.bss.gPendingResponse,"aw",%nobits
 185              	gPendingResponse:
 186 0000 00       		.space	1
 187              		.global	gATPayload
 188              		.section	.bss.gATPayload,"aw",%nobits
 189              		.align	2
 192              	gATPayload:
 193 0000 00000000 		.space	64
 193      00000000 
 193      00000000 
 193      00000000 
 193      00000000 
 194              		.section	.text.sendRAWAT,"ax",%progbits
 195              		.align	1
 196              		.global	sendRAWAT
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	sendRAWAT:
 202              	.LFB4:
   1:Core/Src/uart_at.c **** #include "cmsis_os.h"
   2:Core/Src/uart_at.c **** #include "uart_at.h"
   3:Core/Src/uart_at.c **** #include "uartRingBufDMA.h"
   4:Core/Src/uart_at.c **** 
   5:Core/Src/uart_at.c **** #define SEND_RAW_AT_WAIT_FLAG (0x80)
   6:Core/Src/uart_at.c **** 
   7:Core/Src/uart_at.c **** uint8_t cmd_buffer[20];
   8:Core/Src/uart_at.c **** uint8_t cmd_len = 0;
   9:Core/Src/uart_at.c **** uint8_t byte = 0;
  10:Core/Src/uart_at.c **** osMemoryPoolId_t mpid_ATCMD_MemPool; // memory pool id
  11:Core/Src/uart_at.c **** osMemoryPoolId_t mpid_LoRaPayload_MemPool; // memory pool id
  12:Core/Src/uart_at.c **** extern osMessageQueueId_t uartQueueHandle;
  13:Core/Src/uart_at.c **** 
  14:Core/Src/uart_at.c **** ATResponse ParseAT(char *buffer);
  15:Core/Src/uart_at.c **** ATResponse ParseResponse(char *buffer);
  16:Core/Src/uart_at.c **** 
  17:Core/Src/uart_at.c **** const AT_CMD_DEF_t AT_COMMANDS[NUM_AT_COMMANDS] =
  18:Core/Src/uart_at.c ****     {
  19:Core/Src/uart_at.c ****         {.command = ATZ, .expected_response = AT_RESET, .retries = 3, .timeout_ms = 300, .command_s
  20:Core/Src/uart_at.c ****         {.command = AT_CFM, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .command_s
  21:Core/Src/uart_at.c ****         {.command = AT_APPKEY, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .comman
  22:Core/Src/uart_at.c ****         {.command = AT_APPEUI, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .comman
  23:Core/Src/uart_at.c ****         {.command = AT_ADR, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .command_s
  24:Core/Src/uart_at.c ****         {.command = AT_NJM, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .command_s
  25:Core/Src/uart_at.c ****         {.command = AT_JOIN, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .command_
  26:Core/Src/uart_at.c ****         {.command = AT_CHMASK, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .comman
  27:Core/Src/uart_at.c ****         {.command = AT_SENDB, .expected_response = AT_TX_OK, .retries = 3, .timeout_ms = 300, .comm
  28:Core/Src/uart_at.c ****         {.command = AT_SEND, .expected_response = AT_TX_OK, .retries = 3, .timeout_ms = 300, .comma
  29:Core/Src/uart_at.c ****         {.command = AT, .expected_response = AT_OK, .retries = 3, .timeout_ms = 300, .command_strin
  30:Core/Src/uart_at.c ****         {.command = AT_COMMAND_UNDEFINED, .expected_response = AT_OK, .retries = 3, .timeout_ms = 3
ARM GAS  /tmp/cc9jRPED.s 			page 6


  31:Core/Src/uart_at.c **** 
  32:Core/Src/uart_at.c **** const AT_RESPONSE_DEF_t AT_RESPONSES[NUM_AT_RESPONSES] =
  33:Core/Src/uart_at.c ****     {
  34:Core/Src/uart_at.c ****         {.response = AT_OK, .response_string = "AT_OK"},
  35:Core/Src/uart_at.c ****         {.response = AT_TX_OK, .response_string = "AT_TX_OK"},
  36:Core/Src/uart_at.c ****         {.response = AT_RX_OK, .response_string = "RX:"},
  37:Core/Src/uart_at.c ****         {.response = AT_ERROR, .response_string = "AT_ERROR"},
  38:Core/Src/uart_at.c ****         {.response = AT_JOINED, .response_string = "AT_JOIN_OK"},
  39:Core/Src/uart_at.c ****         {.response = AT_TIMEOUT, .response_string = "AT_TIMEOUT"},
  40:Core/Src/uart_at.c ****         {.response = AT_BUSY, .response_string = "AT_BUSY"},
  41:Core/Src/uart_at.c ****         {.response = AT_JOIN_ERROR, .response_string = "AT_JOIN_ERROR"},
  42:Core/Src/uart_at.c ****         {.response = AT_RESET, .response_string = "Radioenge"},
  43:Core/Src/uart_at.c ****         {.response = AT_NO_NETWORK_JOINED, .response_string = "AT_NO_NETWORK_JOINED"},
  44:Core/Src/uart_at.c ****         {.response = AT_RESPONSE_UNDEFINED, .response_string = "UNDEFINED"}};
  45:Core/Src/uart_at.c **** 
  46:Core/Src/uart_at.c **** extern void LoRaWAN_RxEventCallback(uint8_t *data, uint32_t length, uint32_t port, int32_t rssi, in
  47:Core/Src/uart_at.c **** extern void LoRaWAN_JoinCallback(ATResponse response);
  48:Core/Src/uart_at.c **** 
  49:Core/Src/uart_at.c **** ATResponse gPendingResponse;
  50:Core/Src/uart_at.c **** UART_MEM_BLOCK_t gATPayload;
  51:Core/Src/uart_at.c **** 
  52:Core/Src/uart_at.c **** ATResponse sendRAWAT(uint8_t *cmd)
  53:Core/Src/uart_at.c **** {    
 203              		.loc 1 53 1
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 24
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 90B5     		push	{r4, r7, lr}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 87B0     		sub	sp, sp, #28
 214              	.LCFI1:
 215              		.cfi_def_cfa_offset 40
 216 0004 00AF     		add	r7, sp, #0
 217              	.LCFI2:
 218              		.cfi_def_cfa_register 7
 219 0006 7860     		str	r0, [r7, #4]
  54:Core/Src/uart_at.c ****     CMD_t* pATCommand;
  55:Core/Src/uart_at.c ****     osStatus_t ret;
  56:Core/Src/uart_at.c ****     uint32_t retries = 0;
 220              		.loc 1 56 14
 221 0008 0023     		movs	r3, #0
 222 000a 7B61     		str	r3, [r7, #20]
  57:Core/Src/uart_at.c ****     osSemaphoreAcquire(ATCommandSemaphoreHandle, osWaitForever);
 223              		.loc 1 57 5
 224 000c 364B     		ldr	r3, .L9
 225 000e 1B68     		ldr	r3, [r3]
 226 0010 4FF0FF31 		mov	r1, #-1
 227 0014 1846     		mov	r0, r3
 228 0016 FFF7FEFF 		bl	osSemaphoreAcquire
  58:Core/Src/uart_at.c ****     pATCommand = (CMD_t *)osMemoryPoolAlloc(mpid_ATCMD_MemPool, 0U); // get Mem Block
 229              		.loc 1 58 27
 230 001a 344B     		ldr	r3, .L9+4
 231 001c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9jRPED.s 			page 7


 232 001e 0021     		movs	r1, #0
 233 0020 1846     		mov	r0, r3
 234 0022 FFF7FEFF 		bl	osMemoryPoolAlloc
 235 0026 0346     		mov	r3, r0
 236              		.loc 1 58 16
 237 0028 FB60     		str	r3, [r7, #12]
  59:Core/Src/uart_at.c ****     if(pATCommand != NULL)
 238              		.loc 1 59 19
 239 002a FB68     		ldr	r3, [r7, #12]
 240              		.loc 1 59 7
 241 002c 002B     		cmp	r3, #0
 242 002e 4CD0     		beq	.L2
  60:Core/Src/uart_at.c ****     {
  61:Core/Src/uart_at.c ****         pATCommand->command = ParseAT(cmd);
 243              		.loc 1 61 19
 244 0030 FC68     		ldr	r4, [r7, #12]
 245              		.loc 1 61 31
 246 0032 7868     		ldr	r0, [r7, #4]
 247 0034 FFF7FEFF 		bl	ParseAT
 248 0038 0346     		mov	r3, r0
 249              		.loc 1 61 29
 250 003a 2370     		strb	r3, [r4]
  62:Core/Src/uart_at.c ****         pATCommand->response = AT_RESPONSE_UNDEFINED;
 251              		.loc 1 62 19
 252 003c FB68     		ldr	r3, [r7, #12]
 253              		.loc 1 62 30
 254 003e 0A22     		movs	r2, #10
 255 0040 5A70     		strb	r2, [r3, #1]
  63:Core/Src/uart_at.c ****         if(pATCommand->command != AT_COMMAND_UNDEFINED )
 256              		.loc 1 63 22
 257 0042 FB68     		ldr	r3, [r7, #12]
 258 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259              		.loc 1 63 11
 260 0046 0B2B     		cmp	r3, #11
 261 0048 34D0     		beq	.L3
 262              	.LBB2:
  64:Core/Src/uart_at.c ****         {
  65:Core/Src/uart_at.c ****             memcpy(gATPayload.Buf,cmd,strlen(cmd)+1);
 263              		.loc 1 65 39
 264 004a 7868     		ldr	r0, [r7, #4]
 265 004c FFF7FEFF 		bl	strlen
 266 0050 0346     		mov	r3, r0
 267              		.loc 1 65 13
 268 0052 0133     		adds	r3, r3, #1
 269 0054 1A46     		mov	r2, r3
 270 0056 7968     		ldr	r1, [r7, #4]
 271 0058 2548     		ldr	r0, .L9+8
 272 005a FFF7FEFF 		bl	memcpy
  66:Core/Src/uart_at.c ****             pATCommand->tx_payload = &gATPayload;
 273              		.loc 1 66 23
 274 005e FB68     		ldr	r3, [r7, #12]
 275              		.loc 1 66 36
 276 0060 234A     		ldr	r2, .L9+8
 277 0062 5A60     		str	r2, [r3, #4]
  67:Core/Src/uart_at.c ****             gPendingResponse = AT_RESPONSE_UNDEFINED;
 278              		.loc 1 67 30
 279 0064 234B     		ldr	r3, .L9+12
ARM GAS  /tmp/cc9jRPED.s 			page 8


 280 0066 0A22     		movs	r2, #10
 281 0068 1A70     		strb	r2, [r3]
  68:Core/Src/uart_at.c ****             pATCommand->RequestedBy = osThreadGetId();	
 282              		.loc 1 68 23
 283 006a FC68     		ldr	r4, [r7, #12]
 284              		.loc 1 68 39
 285 006c FFF7FEFF 		bl	osThreadGetId
 286 0070 0346     		mov	r3, r0
 287              		.loc 1 68 37
 288 0072 A360     		str	r3, [r4, #8]
 289              	.L6:
  69:Core/Src/uart_at.c ****             do
  70:Core/Src/uart_at.c ****             {
  71:Core/Src/uart_at.c ****                 ret = osMessageQueuePut(ATQueueHandle, &pATCommand, 0U, 250U);
 290              		.loc 1 71 23
 291 0074 204B     		ldr	r3, .L9+16
 292 0076 1868     		ldr	r0, [r3]
 293 0078 07F10C01 		add	r1, r7, #12
 294 007c FA23     		movs	r3, #250
 295 007e 0022     		movs	r2, #0
 296 0080 FFF7FEFF 		bl	osMessageQueuePut
 297 0084 3861     		str	r0, [r7, #16]
  72:Core/Src/uart_at.c ****                 if (ret != osOK)
 298              		.loc 1 72 20
 299 0086 3B69     		ldr	r3, [r7, #16]
 300 0088 002B     		cmp	r3, #0
 301 008a 06D0     		beq	.L4
  73:Core/Src/uart_at.c ****                 {
  74:Core/Src/uart_at.c ****                     if(retries++>4)
 302              		.loc 1 74 31
 303 008c 7B69     		ldr	r3, [r7, #20]
 304 008e 5A1C     		adds	r2, r3, #1
 305 0090 7A61     		str	r2, [r7, #20]
 306              		.loc 1 74 23
 307 0092 042B     		cmp	r3, #4
 308 0094 01D9     		bls	.L4
  75:Core/Src/uart_at.c ****                     {
  76:Core/Src/uart_at.c ****                         return AT_ERROR;                
 309              		.loc 1 76 32
 310 0096 0323     		movs	r3, #3
 311 0098 21E0     		b	.L8
 312              	.L4:
  77:Core/Src/uart_at.c ****                     }
  78:Core/Src/uart_at.c ****                 }
  79:Core/Src/uart_at.c ****             }while(ret != osOK);
 313              		.loc 1 79 24
 314 009a 3B69     		ldr	r3, [r7, #16]
 315 009c 002B     		cmp	r3, #0
 316 009e E9D1     		bne	.L6
  80:Core/Src/uart_at.c ****             //wait for response
  81:Core/Src/uart_at.c ****             osThreadFlagsClear (SEND_RAW_AT_WAIT_FLAG);            
 317              		.loc 1 81 13
 318 00a0 8020     		movs	r0, #128
 319 00a2 FFF7FEFF 		bl	osThreadFlagsClear
  82:Core/Src/uart_at.c ****             osThreadFlagsWait (SEND_RAW_AT_WAIT_FLAG, osFlagsWaitAny, osWaitForever);            
 320              		.loc 1 82 13
 321 00a6 4FF0FF32 		mov	r2, #-1
ARM GAS  /tmp/cc9jRPED.s 			page 9


 322 00aa 0021     		movs	r1, #0
 323 00ac 8020     		movs	r0, #128
 324 00ae FFF7FEFF 		bl	osThreadFlagsWait
 325              	.LBE2:
 326 00b2 0DE0     		b	.L7
 327              	.L3:
  83:Core/Src/uart_at.c ****         }
  84:Core/Src/uart_at.c ****         else
  85:Core/Src/uart_at.c ****         {
  86:Core/Src/uart_at.c ****             osMemoryPoolFree(mpid_ATCMD_MemPool,pATCommand);
 328              		.loc 1 86 13
 329 00b4 0D4B     		ldr	r3, .L9+4
 330 00b6 1B68     		ldr	r3, [r3]
 331 00b8 FA68     		ldr	r2, [r7, #12]
 332 00ba 1146     		mov	r1, r2
 333 00bc 1846     		mov	r0, r3
 334 00be FFF7FEFF 		bl	osMemoryPoolFree
  87:Core/Src/uart_at.c ****             gPendingResponse = AT_ERROR;
 335              		.loc 1 87 30
 336 00c2 0C4B     		ldr	r3, .L9+12
 337 00c4 0322     		movs	r2, #3
 338 00c6 1A70     		strb	r2, [r3]
 339 00c8 02E0     		b	.L7
 340              	.L2:
  88:Core/Src/uart_at.c ****         }
  89:Core/Src/uart_at.c ****     }
  90:Core/Src/uart_at.c ****     else
  91:Core/Src/uart_at.c ****     {
  92:Core/Src/uart_at.c ****         gPendingResponse = AT_ERROR;
 341              		.loc 1 92 26
 342 00ca 0A4B     		ldr	r3, .L9+12
 343 00cc 0322     		movs	r2, #3
 344 00ce 1A70     		strb	r2, [r3]
 345              	.L7:
  93:Core/Src/uart_at.c ****     }
  94:Core/Src/uart_at.c ****     
  95:Core/Src/uart_at.c ****     osSemaphoreRelease(ATCommandSemaphoreHandle);
 346              		.loc 1 95 5
 347 00d0 054B     		ldr	r3, .L9
 348 00d2 1B68     		ldr	r3, [r3]
 349 00d4 1846     		mov	r0, r3
 350 00d6 FFF7FEFF 		bl	osSemaphoreRelease
  96:Core/Src/uart_at.c ****     return gPendingResponse;
 351              		.loc 1 96 12
 352 00da 064B     		ldr	r3, .L9+12
 353 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354              	.L8:
  97:Core/Src/uart_at.c **** }
 355              		.loc 1 97 1 discriminator 1
 356 00de 1846     		mov	r0, r3
 357 00e0 1C37     		adds	r7, r7, #28
 358              	.LCFI3:
 359              		.cfi_def_cfa_offset 12
 360 00e2 BD46     		mov	sp, r7
 361              	.LCFI4:
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
ARM GAS  /tmp/cc9jRPED.s 			page 10


 364 00e4 90BD     		pop	{r4, r7, pc}
 365              	.L10:
 366 00e6 00BF     		.align	2
 367              	.L9:
 368 00e8 00000000 		.word	ATCommandSemaphoreHandle
 369 00ec 00000000 		.word	mpid_ATCMD_MemPool
 370 00f0 00000000 		.word	gATPayload
 371 00f4 00000000 		.word	gPendingResponse
 372 00f8 00000000 		.word	ATQueueHandle
 373              		.cfi_endproc
 374              	.LFE4:
 376              		.section	.text.ParseResponse,"ax",%progbits
 377              		.align	1
 378              		.global	ParseResponse
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	ParseResponse:
 384              	.LFB5:
  98:Core/Src/uart_at.c **** 
  99:Core/Src/uart_at.c **** ATResponse ParseResponse(char *buffer)
 100:Core/Src/uart_at.c **** { 
 385              		.loc 1 100 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 90B5     		push	{r4, r7, lr}
 390              	.LCFI5:
 391              		.cfi_def_cfa_offset 12
 392              		.cfi_offset 4, -12
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 85B0     		sub	sp, sp, #20
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 32
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI7:
 400              		.cfi_def_cfa_register 7
 401 0006 7860     		str	r0, [r7, #4]
 402              	.LBB3:
 101:Core/Src/uart_at.c ****     for (uint32_t i = 0; i < NUM_AT_RESPONSES; i++)
 403              		.loc 1 101 19
 404 0008 0023     		movs	r3, #0
 405 000a FB60     		str	r3, [r7, #12]
 406              		.loc 1 101 5
 407 000c 24E0     		b	.L12
 408              	.L15:
 409              	.LBB4:
 102:Core/Src/uart_at.c ****     {
 103:Core/Src/uart_at.c ****         if (strncmp(buffer, AT_RESPONSES[i].response_string, strlen(AT_RESPONSES[i].response_string
 410              		.loc 1 103 44
 411 000e FA68     		ldr	r2, [r7, #12]
 412 0010 1346     		mov	r3, r2
 413 0012 1B01     		lsls	r3, r3, #4
 414 0014 1344     		add	r3, r3, r2
 415 0016 144A     		ldr	r2, .L16
 416 0018 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc9jRPED.s 			page 11


 417 001a 5C1C     		adds	r4, r3, #1
 418              		.loc 1 103 84
 419 001c FA68     		ldr	r2, [r7, #12]
 420 001e 1346     		mov	r3, r2
 421 0020 1B01     		lsls	r3, r3, #4
 422 0022 1344     		add	r3, r3, r2
 423 0024 104A     		ldr	r2, .L16
 424 0026 1344     		add	r3, r3, r2
 425 0028 0133     		adds	r3, r3, #1
 426              		.loc 1 103 13
 427 002a 1846     		mov	r0, r3
 428 002c FFF7FEFF 		bl	strlen
 429 0030 0346     		mov	r3, r0
 430 0032 1A46     		mov	r2, r3
 431 0034 2146     		mov	r1, r4
 432 0036 7868     		ldr	r0, [r7, #4]
 433 0038 FFF7FEFF 		bl	strncmp
 434 003c 0346     		mov	r3, r0
 435              		.loc 1 103 12
 436 003e 002B     		cmp	r3, #0
 437 0040 07D1     		bne	.L13
 104:Core/Src/uart_at.c ****         {
 105:Core/Src/uart_at.c ****             return AT_RESPONSES[i].response;
 438              		.loc 1 105 35
 439 0042 0949     		ldr	r1, .L16
 440 0044 FA68     		ldr	r2, [r7, #12]
 441 0046 1346     		mov	r3, r2
 442 0048 1B01     		lsls	r3, r3, #4
 443 004a 1344     		add	r3, r3, r2
 444 004c 0B44     		add	r3, r3, r1
 445 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 0050 06E0     		b	.L14
 447              	.L13:
 448              	.LBE4:
 101:Core/Src/uart_at.c ****     {
 449              		.loc 1 101 49 discriminator 2
 450 0052 FB68     		ldr	r3, [r7, #12]
 451 0054 0133     		adds	r3, r3, #1
 452 0056 FB60     		str	r3, [r7, #12]
 453              	.L12:
 101:Core/Src/uart_at.c ****     {
 454              		.loc 1 101 28 discriminator 1
 455 0058 FB68     		ldr	r3, [r7, #12]
 456 005a 0A2B     		cmp	r3, #10
 457 005c D7D9     		bls	.L15
 458              	.LBE3:
 106:Core/Src/uart_at.c ****         }
 107:Core/Src/uart_at.c ****     }
 108:Core/Src/uart_at.c ****     return AT_RESPONSES[NUM_AT_RESPONSES-1].response; //undefined    
 459              		.loc 1 108 44
 460 005e 0A23     		movs	r3, #10
 461              	.L14:
 109:Core/Src/uart_at.c **** }
 462              		.loc 1 109 1
 463 0060 1846     		mov	r0, r3
 464 0062 1437     		adds	r7, r7, #20
 465              	.LCFI8:
ARM GAS  /tmp/cc9jRPED.s 			page 12


 466              		.cfi_def_cfa_offset 12
 467 0064 BD46     		mov	sp, r7
 468              	.LCFI9:
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 0066 90BD     		pop	{r4, r7, pc}
 472              	.L17:
 473              		.align	2
 474              	.L16:
 475 0068 00000000 		.word	AT_RESPONSES
 476              		.cfi_endproc
 477              	.LFE5:
 479              		.section	.text.ParseAT,"ax",%progbits
 480              		.align	1
 481              		.global	ParseAT
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 486              	ParseAT:
 487              	.LFB6:
 110:Core/Src/uart_at.c **** 
 111:Core/Src/uart_at.c **** ATResponse ParseAT(char *buffer)
 112:Core/Src/uart_at.c **** {    
 488              		.loc 1 112 1
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 16
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492 0000 90B5     		push	{r4, r7, lr}
 493              	.LCFI10:
 494              		.cfi_def_cfa_offset 12
 495              		.cfi_offset 4, -12
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 85B0     		sub	sp, sp, #20
 499              	.LCFI11:
 500              		.cfi_def_cfa_offset 32
 501 0004 00AF     		add	r7, sp, #0
 502              	.LCFI12:
 503              		.cfi_def_cfa_register 7
 504 0006 7860     		str	r0, [r7, #4]
 505              	.LBB5:
 113:Core/Src/uart_at.c ****     for (uint32_t i = 0; i < NUM_AT_COMMANDS; i++)
 506              		.loc 1 113 19
 507 0008 0023     		movs	r3, #0
 508 000a FB60     		str	r3, [r7, #12]
 509              		.loc 1 113 5
 510 000c 27E0     		b	.L19
 511              	.L22:
 512              	.LBB6:
 114:Core/Src/uart_at.c ****     {
 115:Core/Src/uart_at.c ****         if (strncmp(buffer, AT_COMMANDS[i].command_string, strlen(AT_COMMANDS[i].command_string)) =
 513              		.loc 1 115 43
 514 000e FA68     		ldr	r2, [r7, #12]
 515 0010 1346     		mov	r3, r2
 516 0012 5B00     		lsls	r3, r3, #1
 517 0014 1344     		add	r3, r3, r2
 518 0016 DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/cc9jRPED.s 			page 13


 519 0018 0833     		adds	r3, r3, #8
 520 001a 154A     		ldr	r2, .L23
 521 001c 9C18     		adds	r4, r3, r2
 522              		.loc 1 115 81
 523 001e FA68     		ldr	r2, [r7, #12]
 524 0020 1346     		mov	r3, r2
 525 0022 5B00     		lsls	r3, r3, #1
 526 0024 1344     		add	r3, r3, r2
 527 0026 DB00     		lsls	r3, r3, #3
 528 0028 0833     		adds	r3, r3, #8
 529 002a 114A     		ldr	r2, .L23
 530 002c 1344     		add	r3, r3, r2
 531              		.loc 1 115 13
 532 002e 1846     		mov	r0, r3
 533 0030 FFF7FEFF 		bl	strlen
 534 0034 0346     		mov	r3, r0
 535 0036 1A46     		mov	r2, r3
 536 0038 2146     		mov	r1, r4
 537 003a 7868     		ldr	r0, [r7, #4]
 538 003c FFF7FEFF 		bl	strncmp
 539 0040 0346     		mov	r3, r0
 540              		.loc 1 115 12
 541 0042 002B     		cmp	r3, #0
 542 0044 08D1     		bne	.L20
 116:Core/Src/uart_at.c ****         {
 117:Core/Src/uart_at.c ****             return AT_COMMANDS[i].command;
 543              		.loc 1 117 34
 544 0046 0A49     		ldr	r1, .L23
 545 0048 FA68     		ldr	r2, [r7, #12]
 546 004a 1346     		mov	r3, r2
 547 004c 5B00     		lsls	r3, r3, #1
 548 004e 1344     		add	r3, r3, r2
 549 0050 DB00     		lsls	r3, r3, #3
 550 0052 0B44     		add	r3, r3, r1
 551 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 552 0056 06E0     		b	.L21
 553              	.L20:
 554              	.LBE6:
 113:Core/Src/uart_at.c ****     {
 555              		.loc 1 113 48 discriminator 2
 556 0058 FB68     		ldr	r3, [r7, #12]
 557 005a 0133     		adds	r3, r3, #1
 558 005c FB60     		str	r3, [r7, #12]
 559              	.L19:
 113:Core/Src/uart_at.c ****     {
 560              		.loc 1 113 28 discriminator 1
 561 005e FB68     		ldr	r3, [r7, #12]
 562 0060 0B2B     		cmp	r3, #11
 563 0062 D4D9     		bls	.L22
 564              	.LBE5:
 118:Core/Src/uart_at.c ****         }
 119:Core/Src/uart_at.c ****     }
 120:Core/Src/uart_at.c ****     return AT_COMMANDS[NUM_AT_COMMANDS - 1].command; // undefined
 565              		.loc 1 120 44
 566 0064 0B23     		movs	r3, #11
 567              	.L21:
 121:Core/Src/uart_at.c **** }
ARM GAS  /tmp/cc9jRPED.s 			page 14


 568              		.loc 1 121 1
 569 0066 1846     		mov	r0, r3
 570 0068 1437     		adds	r7, r7, #20
 571              	.LCFI13:
 572              		.cfi_def_cfa_offset 12
 573 006a BD46     		mov	sp, r7
 574              	.LCFI14:
 575              		.cfi_def_cfa_register 13
 576              		@ sp needed
 577 006c 90BD     		pop	{r4, r7, pc}
 578              	.L24:
 579 006e 00BF     		.align	2
 580              	.L23:
 581 0070 00000000 		.word	AT_COMMANDS
 582              		.cfi_endproc
 583              	.LFE6:
 585              		.section	.text.ATHandlingTaskCode,"ax",%progbits
 586              		.align	1
 587              		.global	ATHandlingTaskCode
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	ATHandlingTaskCode:
 593              	.LFB7:
 122:Core/Src/uart_at.c **** 
 123:Core/Src/uart_at.c **** void ATHandlingTaskCode(void *argument)
 124:Core/Src/uart_at.c **** {
 594              		.loc 1 124 1
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 32
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 90B5     		push	{r4, r7, lr}
 599              	.LCFI15:
 600              		.cfi_def_cfa_offset 12
 601              		.cfi_offset 4, -12
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 8BB0     		sub	sp, sp, #44
 605              	.LCFI16:
 606              		.cfi_def_cfa_offset 56
 607 0004 02AF     		add	r7, sp, #8
 608              	.LCFI17:
 609              		.cfi_def_cfa 7, 48
 610 0006 7860     		str	r0, [r7, #4]
 125:Core/Src/uart_at.c ****     /* USER CODE BEGIN 5 */
 126:Core/Src/uart_at.c ****     /* Infinite loop */
 127:Core/Src/uart_at.c ****     AT_FSM ATTaskFSM = AT_IDLE;
 611              		.loc 1 127 12
 612 0008 0023     		movs	r3, #0
 613 000a FB77     		strb	r3, [r7, #31]
 128:Core/Src/uart_at.c ****     osStatus_t atevent;    
 129:Core/Src/uart_at.c ****     CMD_t* new_cmd=NULL;
 614              		.loc 1 129 12
 615 000c 0023     		movs	r3, #0
 616 000e BB60     		str	r3, [r7, #8]
 130:Core/Src/uart_at.c ****     CMD_t* send_cmd=NULL;
 617              		.loc 1 130 12
ARM GAS  /tmp/cc9jRPED.s 			page 15


 618 0010 0023     		movs	r3, #0
 619 0012 BB61     		str	r3, [r7, #24]
 131:Core/Src/uart_at.c ****     CMD_t* PendingCommand = NULL;
 620              		.loc 1 131 12
 621 0014 0023     		movs	r3, #0
 622 0016 7B61     		str	r3, [r7, #20]
 132:Core/Src/uart_at.c ****     uint32_t CurrentRetries=0;    
 623              		.loc 1 132 14
 624 0018 0023     		movs	r3, #0
 625 001a 3B61     		str	r3, [r7, #16]
 626              	.L45:
 133:Core/Src/uart_at.c **** 
 134:Core/Src/uart_at.c ****     while (1)
 135:Core/Src/uart_at.c ****     {
 136:Core/Src/uart_at.c ****         atevent = osMessageQueueGet(ATQueueHandle, &new_cmd, NULL, 3000U);   // wait for message
 627              		.loc 1 136 19
 628 001c 8E4B     		ldr	r3, .L48
 629 001e 1868     		ldr	r0, [r3]
 630 0020 07F10801 		add	r1, r7, #8
 631 0024 40F6B833 		movw	r3, #3000
 632 0028 0022     		movs	r2, #0
 633 002a FFF7FEFF 		bl	osMessageQueueGet
 634 002e F860     		str	r0, [r7, #12]
 137:Core/Src/uart_at.c ****         if(atevent == osErrorTimeout)
 635              		.loc 1 137 11
 636 0030 FB68     		ldr	r3, [r7, #12]
 637 0032 13F1020F 		cmn	r3, #2
 638 0036 2CD1     		bne	.L26
 138:Core/Src/uart_at.c ****         {
 139:Core/Src/uart_at.c ****             if(PendingCommand!=NULL)
 639              		.loc 1 139 15
 640 0038 7B69     		ldr	r3, [r7, #20]
 641 003a 002B     		cmp	r3, #0
 642 003c 00F03581 		beq	.L27
 140:Core/Src/uart_at.c ****             {
 141:Core/Src/uart_at.c ****                 if(CurrentRetries < AT_COMMANDS[PendingCommand->command].retries)
 643              		.loc 1 141 63
 644 0040 7B69     		ldr	r3, [r7, #20]
 645 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646 0044 1946     		mov	r1, r3
 647              		.loc 1 141 73
 648 0046 854A     		ldr	r2, .L48+4
 649 0048 0B46     		mov	r3, r1
 650 004a 5B00     		lsls	r3, r3, #1
 651 004c 0B44     		add	r3, r3, r1
 652 004e DB00     		lsls	r3, r3, #3
 653 0050 1344     		add	r3, r3, r2
 654 0052 0233     		adds	r3, r3, #2
 655 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656 0056 1A46     		mov	r2, r3
 657              		.loc 1 141 19
 658 0058 3B69     		ldr	r3, [r7, #16]
 659 005a 9342     		cmp	r3, r2
 660 005c 05D2     		bcs	.L28
 142:Core/Src/uart_at.c ****                 {
 143:Core/Src/uart_at.c ****                     send_cmd = PendingCommand;
 661              		.loc 1 143 30
ARM GAS  /tmp/cc9jRPED.s 			page 16


 662 005e 7B69     		ldr	r3, [r7, #20]
 663 0060 BB61     		str	r3, [r7, #24]
 144:Core/Src/uart_at.c ****                     CurrentRetries++;
 664              		.loc 1 144 35
 665 0062 3B69     		ldr	r3, [r7, #16]
 666 0064 0133     		adds	r3, r3, #1
 667 0066 3B61     		str	r3, [r7, #16]
 668 0068 1FE1     		b	.L27
 669              	.L28:
 145:Core/Src/uart_at.c ****                 }
 146:Core/Src/uart_at.c ****                 else
 147:Core/Src/uart_at.c ****                 {                    
 148:Core/Src/uart_at.c ****                     gPendingResponse = AT_TIMEOUT;
 670              		.loc 1 148 38
 671 006a 7D4B     		ldr	r3, .L48+8
 672 006c 0522     		movs	r2, #5
 673 006e 1A70     		strb	r2, [r3]
 149:Core/Src/uart_at.c ****                     osThreadFlagsSet(PendingCommand->RequestedBy, SEND_RAW_AT_WAIT_FLAG);
 674              		.loc 1 149 21
 675 0070 7B69     		ldr	r3, [r7, #20]
 676 0072 9B68     		ldr	r3, [r3, #8]
 677 0074 8021     		movs	r1, #128
 678 0076 1846     		mov	r0, r3
 679 0078 FFF7FEFF 		bl	osThreadFlagsSet
 150:Core/Src/uart_at.c ****                     osMemoryPoolFree(mpid_ATCMD_MemPool,PendingCommand);
 680              		.loc 1 150 21
 681 007c 794B     		ldr	r3, .L48+12
 682 007e 1B68     		ldr	r3, [r3]
 683 0080 7969     		ldr	r1, [r7, #20]
 684 0082 1846     		mov	r0, r3
 685 0084 FFF7FEFF 		bl	osMemoryPoolFree
 151:Core/Src/uart_at.c ****                     PendingCommand = NULL;                    
 686              		.loc 1 151 36
 687 0088 0023     		movs	r3, #0
 688 008a 7B61     		str	r3, [r7, #20]
 152:Core/Src/uart_at.c ****                     ATTaskFSM = AT_IDLE;
 689              		.loc 1 152 31
 690 008c 0023     		movs	r3, #0
 691 008e FB77     		strb	r3, [r7, #31]
 692 0090 0BE1     		b	.L27
 693              	.L26:
 153:Core/Src/uart_at.c ****                 }
 154:Core/Src/uart_at.c ****             }
 155:Core/Src/uart_at.c ****         }
 156:Core/Src/uart_at.c ****         else if (atevent == osOK)
 694              		.loc 1 156 17
 695 0092 FB68     		ldr	r3, [r7, #12]
 696 0094 002B     		cmp	r3, #0
 697 0096 40F00881 		bne	.L27
 157:Core/Src/uart_at.c ****         {         
 158:Core/Src/uart_at.c ****             switch (new_cmd->command)
 698              		.loc 1 158 28
 699 009a BB68     		ldr	r3, [r7, #8]
 700 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 701              		.loc 1 158 13
 702 009e 0A2B     		cmp	r3, #10
 703 00a0 04D8     		bhi	.L29
ARM GAS  /tmp/cc9jRPED.s 			page 17


 159:Core/Src/uart_at.c ****             {
 160:Core/Src/uart_at.c ****                 case ATZ:
 161:Core/Src/uart_at.c ****                 case AT_CFM:
 162:Core/Src/uart_at.c ****                 case AT_APPKEY:
 163:Core/Src/uart_at.c ****                 case AT_APPEUI:
 164:Core/Src/uart_at.c ****                 case AT_ADR:
 165:Core/Src/uart_at.c ****                 case AT_NJM:
 166:Core/Src/uart_at.c ****                 case AT_JOIN:
 167:Core/Src/uart_at.c ****                 case AT_SENDB:
 168:Core/Src/uart_at.c ****                 case AT_SEND:
 169:Core/Src/uart_at.c ****                 case AT_CHMASK:
 170:Core/Src/uart_at.c ****                 case AT:
 171:Core/Src/uart_at.c ****                 {
 172:Core/Src/uart_at.c ****                     send_cmd = new_cmd;
 704              		.loc 1 172 30
 705 00a2 BB68     		ldr	r3, [r7, #8]
 706 00a4 BB61     		str	r3, [r7, #24]
 173:Core/Src/uart_at.c ****                     CurrentRetries = 0;
 707              		.loc 1 173 36
 708 00a6 0023     		movs	r3, #0
 709 00a8 3B61     		str	r3, [r7, #16]
 174:Core/Src/uart_at.c ****                     break;
 710              		.loc 1 174 21
 711 00aa 21E0     		b	.L30
 712              	.L29:
 175:Core/Src/uart_at.c ****                 }    
 176:Core/Src/uart_at.c ****                 case AT_COMMAND_UNDEFINED:        
 177:Core/Src/uart_at.c ****                 default:
 178:Core/Src/uart_at.c ****                 {
 179:Core/Src/uart_at.c ****                     if(new_cmd->response == AT_RESPONSE_UNDEFINED)
 713              		.loc 1 179 31
 714 00ac BB68     		ldr	r3, [r7, #8]
 715 00ae 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 716              		.loc 1 179 23
 717 00b0 0A2B     		cmp	r3, #10
 718 00b2 1CD1     		bne	.L46
 180:Core/Src/uart_at.c ****                     {
 181:Core/Src/uart_at.c ****                         //malformed CMD_t - should not be happening
 182:Core/Src/uart_at.c ****                         gPendingResponse = AT_ERROR;
 719              		.loc 1 182 42
 720 00b4 6A4B     		ldr	r3, .L48+8
 721 00b6 0322     		movs	r2, #3
 722 00b8 1A70     		strb	r2, [r3]
 183:Core/Src/uart_at.c ****                         if(PendingCommand)
 723              		.loc 1 183 27
 724 00ba 7B69     		ldr	r3, [r7, #20]
 725 00bc 002B     		cmp	r3, #0
 726 00be 0BD0     		beq	.L32
 184:Core/Src/uart_at.c ****                         {
 185:Core/Src/uart_at.c ****                             osThreadFlagsSet(PendingCommand->RequestedBy, SEND_RAW_AT_WAIT_FLAG);
 727              		.loc 1 185 29
 728 00c0 7B69     		ldr	r3, [r7, #20]
 729 00c2 9B68     		ldr	r3, [r3, #8]
 730 00c4 8021     		movs	r1, #128
 731 00c6 1846     		mov	r0, r3
 732 00c8 FFF7FEFF 		bl	osThreadFlagsSet
 186:Core/Src/uart_at.c ****                             osMemoryPoolFree(mpid_ATCMD_MemPool,PendingCommand);
ARM GAS  /tmp/cc9jRPED.s 			page 18


 733              		.loc 1 186 29
 734 00cc 654B     		ldr	r3, .L48+12
 735 00ce 1B68     		ldr	r3, [r3]
 736 00d0 7969     		ldr	r1, [r7, #20]
 737 00d2 1846     		mov	r0, r3
 738 00d4 FFF7FEFF 		bl	osMemoryPoolFree
 739              	.L32:
 187:Core/Src/uart_at.c ****                         }
 188:Core/Src/uart_at.c ****                         osMemoryPoolFree(mpid_ATCMD_MemPool,new_cmd);                        
 740              		.loc 1 188 25
 741 00d8 624B     		ldr	r3, .L48+12
 742 00da 1B68     		ldr	r3, [r3]
 743 00dc BA68     		ldr	r2, [r7, #8]
 744 00de 1146     		mov	r1, r2
 745 00e0 1846     		mov	r0, r3
 746 00e2 FFF7FEFF 		bl	osMemoryPoolFree
 189:Core/Src/uart_at.c ****                         PendingCommand = NULL;                        
 747              		.loc 1 189 40
 748 00e6 0023     		movs	r3, #0
 749 00e8 7B61     		str	r3, [r7, #20]
 190:Core/Src/uart_at.c ****                         ATTaskFSM = AT_IDLE;
 750              		.loc 1 190 35
 751 00ea 0023     		movs	r3, #0
 752 00ec FB77     		strb	r3, [r7, #31]
 753              	.L46:
 191:Core/Src/uart_at.c ****                     }                    
 192:Core/Src/uart_at.c ****                     break;
 754              		.loc 1 192 21
 755 00ee 00BF     		nop
 756              	.L30:
 193:Core/Src/uart_at.c ****                 }                
 194:Core/Src/uart_at.c ****             }
 195:Core/Src/uart_at.c ****             if (new_cmd->response == AT_RX_OK)
 757              		.loc 1 195 24
 758 00f0 BB68     		ldr	r3, [r7, #8]
 759 00f2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 760              		.loc 1 195 16
 761 00f4 022B     		cmp	r3, #2
 762 00f6 23D1     		bne	.L33
 196:Core/Src/uart_at.c ****             {
 197:Core/Src/uart_at.c ****                 LoRaWAN_RxEventCallback(new_cmd->rx_payload->Buf, new_cmd->rx_payload->rcvDataLen, 
 763              		.loc 1 197 48
 764 00f8 BB68     		ldr	r3, [r7, #8]
 765 00fa 5B68     		ldr	r3, [r3, #4]
 766              		.loc 1 197 60
 767 00fc 03F11400 		add	r0, r3, #20
 768              		.loc 1 197 74
 769 0100 BB68     		ldr	r3, [r7, #8]
 770 0102 5B68     		ldr	r3, [r3, #4]
 771              		.loc 1 197 17
 772 0104 9968     		ldr	r1, [r3, #8]
 773              		.loc 1 197 107
 774 0106 BB68     		ldr	r3, [r7, #8]
 775 0108 5B68     		ldr	r3, [r3, #4]
 776              		.loc 1 197 17
 777 010a 1A68     		ldr	r2, [r3]
 778              		.loc 1 197 137
ARM GAS  /tmp/cc9jRPED.s 			page 19


 779 010c BB68     		ldr	r3, [r7, #8]
 780 010e 5B68     		ldr	r3, [r3, #4]
 781              		.loc 1 197 17
 782 0110 DC68     		ldr	r4, [r3, #12]
 783              		.loc 1 197 167
 784 0112 BB68     		ldr	r3, [r7, #8]
 785 0114 5B68     		ldr	r3, [r3, #4]
 786              		.loc 1 197 17
 787 0116 1B69     		ldr	r3, [r3, #16]
 788 0118 0093     		str	r3, [sp]
 789 011a 2346     		mov	r3, r4
 790 011c FFF7FEFF 		bl	LoRaWAN_RxEventCallback
 198:Core/Src/uart_at.c ****                 //osMemoryPoolFree(mpid_LoRaPayload_MemPool, PendingCommand->rx_payload);          
 199:Core/Src/uart_at.c ****                 osMemoryPoolFree(mpid_LoRaPayload_MemPool, new_cmd->rx_payload);
 791              		.loc 1 199 17
 792 0120 514B     		ldr	r3, .L48+16
 793 0122 1A68     		ldr	r2, [r3]
 794              		.loc 1 199 67
 795 0124 BB68     		ldr	r3, [r7, #8]
 796 0126 5B68     		ldr	r3, [r3, #4]
 797              		.loc 1 199 17
 798 0128 1946     		mov	r1, r3
 799 012a 1046     		mov	r0, r2
 800 012c FFF7FEFF 		bl	osMemoryPoolFree
 200:Core/Src/uart_at.c ****                 osMemoryPoolFree(mpid_ATCMD_MemPool,new_cmd);                        
 801              		.loc 1 200 17
 802 0130 4C4B     		ldr	r3, .L48+12
 803 0132 1B68     		ldr	r3, [r3]
 804 0134 BA68     		ldr	r2, [r7, #8]
 805 0136 1146     		mov	r1, r2
 806 0138 1846     		mov	r0, r3
 807 013a FFF7FEFF 		bl	osMemoryPoolFree
 808 013e B4E0     		b	.L27
 809              	.L33:
 201:Core/Src/uart_at.c ****             }
 202:Core/Src/uart_at.c ****             else if ((new_cmd->response == AT_JOINED) || (new_cmd->response == AT_JOIN_ERROR))
 810              		.loc 1 202 30
 811 0140 BB68     		ldr	r3, [r7, #8]
 812 0142 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 813              		.loc 1 202 21
 814 0144 042B     		cmp	r3, #4
 815 0146 03D0     		beq	.L34
 816              		.loc 1 202 66 discriminator 1
 817 0148 BB68     		ldr	r3, [r7, #8]
 818 014a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 819              		.loc 1 202 55 discriminator 1
 820 014c 072B     		cmp	r3, #7
 821 014e 12D1     		bne	.L35
 822              	.L34:
 203:Core/Src/uart_at.c ****             {
 204:Core/Src/uart_at.c ****                 LoRaWAN_JoinCallback(new_cmd->response);
 823              		.loc 1 204 45
 824 0150 BB68     		ldr	r3, [r7, #8]
 825              		.loc 1 204 17
 826 0152 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 827 0154 1846     		mov	r0, r3
 828 0156 FFF7FEFF 		bl	LoRaWAN_JoinCallback
ARM GAS  /tmp/cc9jRPED.s 			page 20


 205:Core/Src/uart_at.c ****                 osMemoryPoolFree(mpid_ATCMD_MemPool, PendingCommand);
 829              		.loc 1 205 17
 830 015a 424B     		ldr	r3, .L48+12
 831 015c 1B68     		ldr	r3, [r3]
 832 015e 7969     		ldr	r1, [r7, #20]
 833 0160 1846     		mov	r0, r3
 834 0162 FFF7FEFF 		bl	osMemoryPoolFree
 206:Core/Src/uart_at.c ****                 osMemoryPoolFree(mpid_ATCMD_MemPool,new_cmd);                        
 835              		.loc 1 206 17
 836 0166 3F4B     		ldr	r3, .L48+12
 837 0168 1B68     		ldr	r3, [r3]
 838 016a BA68     		ldr	r2, [r7, #8]
 839 016c 1146     		mov	r1, r2
 840 016e 1846     		mov	r0, r3
 841 0170 FFF7FEFF 		bl	osMemoryPoolFree
 842 0174 99E0     		b	.L27
 843              	.L35:
 207:Core/Src/uart_at.c ****             }
 208:Core/Src/uart_at.c ****             else if (new_cmd->command == AT_COMMAND_UNDEFINED) // it is a response
 844              		.loc 1 208 29
 845 0176 BB68     		ldr	r3, [r7, #8]
 846 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 847              		.loc 1 208 21
 848 017a 0B2B     		cmp	r3, #11
 849 017c 40F09580 		bne	.L27
 209:Core/Src/uart_at.c ****             {
 210:Core/Src/uart_at.c ****                 switch (ATTaskFSM)
 850              		.loc 1 210 17
 851 0180 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 852 0182 002B     		cmp	r3, #0
 853 0184 02D0     		beq	.L36
 854 0186 012B     		cmp	r3, #1
 855 0188 11D0     		beq	.L37
 856 018a 8EE0     		b	.L27
 857              	.L36:
 211:Core/Src/uart_at.c ****                 {
 212:Core/Src/uart_at.c ****                 case AT_IDLE:
 213:Core/Src/uart_at.c ****                 {
 214:Core/Src/uart_at.c ****                     //unexpected response - ignore
 215:Core/Src/uart_at.c ****                     if (PendingCommand)
 858              		.loc 1 215 24
 859 018c 7B69     		ldr	r3, [r7, #20]
 860 018e 002B     		cmp	r3, #0
 861 0190 05D0     		beq	.L38
 216:Core/Src/uart_at.c ****                     {
 217:Core/Src/uart_at.c ****                         osMemoryPoolFree(mpid_ATCMD_MemPool, PendingCommand);
 862              		.loc 1 217 25
 863 0192 344B     		ldr	r3, .L48+12
 864 0194 1B68     		ldr	r3, [r3]
 865 0196 7969     		ldr	r1, [r7, #20]
 866 0198 1846     		mov	r0, r3
 867 019a FFF7FEFF 		bl	osMemoryPoolFree
 868              	.L38:
 218:Core/Src/uart_at.c ****                     }
 219:Core/Src/uart_at.c ****                     osMemoryPoolFree(mpid_ATCMD_MemPool,new_cmd);                        
 869              		.loc 1 219 21
 870 019e 314B     		ldr	r3, .L48+12
ARM GAS  /tmp/cc9jRPED.s 			page 21


 871 01a0 1B68     		ldr	r3, [r3]
 872 01a2 BA68     		ldr	r2, [r7, #8]
 873 01a4 1146     		mov	r1, r2
 874 01a6 1846     		mov	r0, r3
 875 01a8 FFF7FEFF 		bl	osMemoryPoolFree
 220:Core/Src/uart_at.c ****                     break;
 876              		.loc 1 220 21
 877 01ac 7DE0     		b	.L27
 878              	.L37:
 221:Core/Src/uart_at.c ****                 }
 222:Core/Src/uart_at.c ****                 case AT_WAITING_RESPONSE:
 223:Core/Src/uart_at.c ****                 {
 224:Core/Src/uart_at.c ****                     if (new_cmd->response == AT_COMMANDS[PendingCommand->command].expected_response
 879              		.loc 1 224 32
 880 01ae BB68     		ldr	r3, [r7, #8]
 881 01b0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 882              		.loc 1 224 72
 883 01b2 7B69     		ldr	r3, [r7, #20]
 884 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 01b6 1846     		mov	r0, r3
 886              		.loc 1 224 82
 887 01b8 2849     		ldr	r1, .L48+4
 888 01ba 0346     		mov	r3, r0
 889 01bc 5B00     		lsls	r3, r3, #1
 890 01be 0344     		add	r3, r3, r0
 891 01c0 DB00     		lsls	r3, r3, #3
 892 01c2 0B44     		add	r3, r3, r1
 893 01c4 0133     		adds	r3, r3, #1
 894 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895              		.loc 1 224 24
 896 01c8 9A42     		cmp	r2, r3
 897 01ca 27D1     		bne	.L39
 225:Core/Src/uart_at.c ****                     {
 226:Core/Src/uart_at.c ****                         // all good
 227:Core/Src/uart_at.c ****                         gPendingResponse = AT_COMMANDS[PendingCommand->command].expected_response;
 898              		.loc 1 227 70
 899 01cc 7B69     		ldr	r3, [r7, #20]
 900 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 901 01d0 1946     		mov	r1, r3
 902              		.loc 1 227 80
 903 01d2 224A     		ldr	r2, .L48+4
 904 01d4 0B46     		mov	r3, r1
 905 01d6 5B00     		lsls	r3, r3, #1
 906 01d8 0B44     		add	r3, r3, r1
 907 01da DB00     		lsls	r3, r3, #3
 908 01dc 1344     		add	r3, r3, r2
 909 01de 0133     		adds	r3, r3, #1
 910 01e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 911              		.loc 1 227 42
 912 01e2 1F4B     		ldr	r3, .L48+8
 913 01e4 1A70     		strb	r2, [r3]
 228:Core/Src/uart_at.c ****                         if (PendingCommand)
 914              		.loc 1 228 28
 915 01e6 7B69     		ldr	r3, [r7, #20]
 916 01e8 002B     		cmp	r3, #0
 917 01ea 0BD0     		beq	.L40
 229:Core/Src/uart_at.c ****                         {
ARM GAS  /tmp/cc9jRPED.s 			page 22


 230:Core/Src/uart_at.c ****                             osThreadFlagsSet(PendingCommand->RequestedBy, SEND_RAW_AT_WAIT_FLAG);
 918              		.loc 1 230 29
 919 01ec 7B69     		ldr	r3, [r7, #20]
 920 01ee 9B68     		ldr	r3, [r3, #8]
 921 01f0 8021     		movs	r1, #128
 922 01f2 1846     		mov	r0, r3
 923 01f4 FFF7FEFF 		bl	osThreadFlagsSet
 231:Core/Src/uart_at.c ****                             osMemoryPoolFree(mpid_ATCMD_MemPool, PendingCommand);
 924              		.loc 1 231 29
 925 01f8 1A4B     		ldr	r3, .L48+12
 926 01fa 1B68     		ldr	r3, [r3]
 927 01fc 7969     		ldr	r1, [r7, #20]
 928 01fe 1846     		mov	r0, r3
 929 0200 FFF7FEFF 		bl	osMemoryPoolFree
 930              	.L40:
 232:Core/Src/uart_at.c ****                         }
 233:Core/Src/uart_at.c ****                         osMemoryPoolFree(mpid_ATCMD_MemPool, new_cmd);
 931              		.loc 1 233 25
 932 0204 174B     		ldr	r3, .L48+12
 933 0206 1B68     		ldr	r3, [r3]
 934 0208 BA68     		ldr	r2, [r7, #8]
 935 020a 1146     		mov	r1, r2
 936 020c 1846     		mov	r0, r3
 937 020e FFF7FEFF 		bl	osMemoryPoolFree
 234:Core/Src/uart_at.c ****                         PendingCommand = NULL;
 938              		.loc 1 234 40
 939 0212 0023     		movs	r3, #0
 940 0214 7B61     		str	r3, [r7, #20]
 235:Core/Src/uart_at.c ****                         ATTaskFSM = AT_IDLE;                        
 941              		.loc 1 235 35
 942 0216 0023     		movs	r3, #0
 943 0218 FB77     		strb	r3, [r7, #31]
 236:Core/Src/uart_at.c ****                     }
 237:Core/Src/uart_at.c ****                     else
 238:Core/Src/uart_at.c ****                     {
 239:Core/Src/uart_at.c ****                         //unexpected response - retry
 240:Core/Src/uart_at.c ****                         if (CurrentRetries < AT_COMMANDS[PendingCommand->command].retries)
 241:Core/Src/uart_at.c ****                         {
 242:Core/Src/uart_at.c ****                             CurrentRetries++;
 243:Core/Src/uart_at.c ****                             send_cmd = PendingCommand;
 244:Core/Src/uart_at.c ****                             PendingCommand = NULL;
 245:Core/Src/uart_at.c ****                             osMemoryPoolFree(mpid_ATCMD_MemPool, new_cmd);
 246:Core/Src/uart_at.c ****                         }
 247:Core/Src/uart_at.c ****                         else
 248:Core/Src/uart_at.c ****                         {
 249:Core/Src/uart_at.c ****                             // command failure after retries
 250:Core/Src/uart_at.c ****                             gPendingResponse = new_cmd->response;
 251:Core/Src/uart_at.c ****                             if(PendingCommand != NULL)
 252:Core/Src/uart_at.c ****                             {
 253:Core/Src/uart_at.c ****                                 osThreadFlagsSet(PendingCommand->RequestedBy, SEND_RAW_AT_WAIT_FLAG
 254:Core/Src/uart_at.c ****                                 osMemoryPoolFree(mpid_ATCMD_MemPool, PendingCommand);
 255:Core/Src/uart_at.c ****                             }
 256:Core/Src/uart_at.c ****                             osMemoryPoolFree(mpid_ATCMD_MemPool, new_cmd);
 257:Core/Src/uart_at.c ****                             PendingCommand = NULL;                            
 258:Core/Src/uart_at.c ****                             ATTaskFSM = AT_IDLE;                            
 259:Core/Src/uart_at.c ****                         }
 260:Core/Src/uart_at.c ****                     }
ARM GAS  /tmp/cc9jRPED.s 			page 23


 261:Core/Src/uart_at.c ****                     break;
 944              		.loc 1 261 21
 945 021a 45E0     		b	.L47
 946              	.L39:
 240:Core/Src/uart_at.c ****                         {
 947              		.loc 1 240 72
 948 021c 7B69     		ldr	r3, [r7, #20]
 949 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 950 0220 1946     		mov	r1, r3
 240:Core/Src/uart_at.c ****                         {
 951              		.loc 1 240 82
 952 0222 0E4A     		ldr	r2, .L48+4
 953 0224 0B46     		mov	r3, r1
 954 0226 5B00     		lsls	r3, r3, #1
 955 0228 0B44     		add	r3, r3, r1
 956 022a DB00     		lsls	r3, r3, #3
 957 022c 1344     		add	r3, r3, r2
 958 022e 0233     		adds	r3, r3, #2
 959 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0232 1A46     		mov	r2, r3
 240:Core/Src/uart_at.c ****                         {
 961              		.loc 1 240 28
 962 0234 3B69     		ldr	r3, [r7, #16]
 963 0236 9342     		cmp	r3, r2
 964 0238 18D2     		bcs	.L42
 242:Core/Src/uart_at.c ****                             send_cmd = PendingCommand;
 965              		.loc 1 242 43
 966 023a 3B69     		ldr	r3, [r7, #16]
 967 023c 0133     		adds	r3, r3, #1
 968 023e 3B61     		str	r3, [r7, #16]
 243:Core/Src/uart_at.c ****                             PendingCommand = NULL;
 969              		.loc 1 243 38
 970 0240 7B69     		ldr	r3, [r7, #20]
 971 0242 BB61     		str	r3, [r7, #24]
 244:Core/Src/uart_at.c ****                             osMemoryPoolFree(mpid_ATCMD_MemPool, new_cmd);
 972              		.loc 1 244 44
 973 0244 0023     		movs	r3, #0
 974 0246 7B61     		str	r3, [r7, #20]
 245:Core/Src/uart_at.c ****                         }
 975              		.loc 1 245 29
 976 0248 064B     		ldr	r3, .L48+12
 977 024a 1B68     		ldr	r3, [r3]
 978 024c BA68     		ldr	r2, [r7, #8]
 979 024e 1146     		mov	r1, r2
 980 0250 1846     		mov	r0, r3
 981 0252 FFF7FEFF 		bl	osMemoryPoolFree
 982              		.loc 1 261 21
 983 0256 27E0     		b	.L47
 984              	.L49:
 985              		.align	2
 986              	.L48:
 987 0258 00000000 		.word	ATQueueHandle
 988 025c 00000000 		.word	AT_COMMANDS
 989 0260 00000000 		.word	gPendingResponse
 990 0264 00000000 		.word	mpid_ATCMD_MemPool
 991 0268 00000000 		.word	mpid_LoRaPayload_MemPool
 992              	.L42:
ARM GAS  /tmp/cc9jRPED.s 			page 24


 250:Core/Src/uart_at.c ****                             if(PendingCommand != NULL)
 993              		.loc 1 250 55
 994 026c BB68     		ldr	r3, [r7, #8]
 995 026e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 250:Core/Src/uart_at.c ****                             if(PendingCommand != NULL)
 996              		.loc 1 250 46
 997 0270 1A4B     		ldr	r3, .L50
 998 0272 1A70     		strb	r2, [r3]
 251:Core/Src/uart_at.c ****                             {
 999              		.loc 1 251 31
 1000 0274 7B69     		ldr	r3, [r7, #20]
 1001 0276 002B     		cmp	r3, #0
 1002 0278 0BD0     		beq	.L43
 253:Core/Src/uart_at.c ****                                 osMemoryPoolFree(mpid_ATCMD_MemPool, PendingCommand);
 1003              		.loc 1 253 33
 1004 027a 7B69     		ldr	r3, [r7, #20]
 1005 027c 9B68     		ldr	r3, [r3, #8]
 1006 027e 8021     		movs	r1, #128
 1007 0280 1846     		mov	r0, r3
 1008 0282 FFF7FEFF 		bl	osThreadFlagsSet
 254:Core/Src/uart_at.c ****                             }
 1009              		.loc 1 254 33
 1010 0286 164B     		ldr	r3, .L50+4
 1011 0288 1B68     		ldr	r3, [r3]
 1012 028a 7969     		ldr	r1, [r7, #20]
 1013 028c 1846     		mov	r0, r3
 1014 028e FFF7FEFF 		bl	osMemoryPoolFree
 1015              	.L43:
 256:Core/Src/uart_at.c ****                             PendingCommand = NULL;                            
 1016              		.loc 1 256 29
 1017 0292 134B     		ldr	r3, .L50+4
 1018 0294 1B68     		ldr	r3, [r3]
 1019 0296 BA68     		ldr	r2, [r7, #8]
 1020 0298 1146     		mov	r1, r2
 1021 029a 1846     		mov	r0, r3
 1022 029c FFF7FEFF 		bl	osMemoryPoolFree
 257:Core/Src/uart_at.c ****                             ATTaskFSM = AT_IDLE;                            
 1023              		.loc 1 257 44
 1024 02a0 0023     		movs	r3, #0
 1025 02a2 7B61     		str	r3, [r7, #20]
 258:Core/Src/uart_at.c ****                         }
 1026              		.loc 1 258 39
 1027 02a4 0023     		movs	r3, #0
 1028 02a6 FB77     		strb	r3, [r7, #31]
 1029              	.L47:
 1030              		.loc 1 261 21
 1031 02a8 00BF     		nop
 1032              	.L27:
 262:Core/Src/uart_at.c ****                 }
 263:Core/Src/uart_at.c ****                 }
 264:Core/Src/uart_at.c ****             }            
 265:Core/Src/uart_at.c ****         }
 266:Core/Src/uart_at.c ****         if (send_cmd != NULL)
 1033              		.loc 1 266 12
 1034 02aa BB69     		ldr	r3, [r7, #24]
 1035 02ac 002B     		cmp	r3, #0
 1036 02ae 3FF4B5AE 		beq	.L45
ARM GAS  /tmp/cc9jRPED.s 			page 25


 1037              	.LBB7:
 267:Core/Src/uart_at.c ****         {
 268:Core/Src/uart_at.c ****             PendingCommand = send_cmd;
 1038              		.loc 1 268 28
 1039 02b2 BB69     		ldr	r3, [r7, #24]
 1040 02b4 7B61     		str	r3, [r7, #20]
 269:Core/Src/uart_at.c ****             send_cmd = NULL;
 1041              		.loc 1 269 22
 1042 02b6 0023     		movs	r3, #0
 1043 02b8 BB61     		str	r3, [r7, #24]
 270:Core/Src/uart_at.c ****             ATTaskFSM = AT_WAITING_RESPONSE;
 1044              		.loc 1 270 23
 1045 02ba 0123     		movs	r3, #1
 1046 02bc FB77     		strb	r3, [r7, #31]
 271:Core/Src/uart_at.c ****             SendToUART(PendingCommand->tx_payload->Buf, strlen(PendingCommand->tx_payload->Buf));
 1047              		.loc 1 271 38
 1048 02be 7B69     		ldr	r3, [r7, #20]
 1049 02c0 5B68     		ldr	r3, [r3, #4]
 1050              		.loc 1 271 50
 1051 02c2 1C46     		mov	r4, r3
 1052              		.loc 1 271 78
 1053 02c4 7B69     		ldr	r3, [r7, #20]
 1054 02c6 5B68     		ldr	r3, [r3, #4]
 1055              		.loc 1 271 13
 1056 02c8 1846     		mov	r0, r3
 1057 02ca FFF7FEFF 		bl	strlen
 1058 02ce 0346     		mov	r3, r0
 1059 02d0 1946     		mov	r1, r3
 1060 02d2 2046     		mov	r0, r4
 1061 02d4 FFF7FEFF 		bl	SendToUART
 1062              	.LBE7:
 136:Core/Src/uart_at.c ****         if(atevent == osErrorTimeout)
 1063              		.loc 1 136 17
 1064 02d8 A0E6     		b	.L45
 1065              	.L51:
 1066 02da 00BF     		.align	2
 1067              	.L50:
 1068 02dc 00000000 		.word	gPendingResponse
 1069 02e0 00000000 		.word	mpid_ATCMD_MemPool
 1070              		.cfi_endproc
 1071              	.LFE7:
 1073              		.section	.rodata
 1074              		.align	2
 1075              	.LC0:
 1076 0000 3A00     		.ascii	":\000"
 1077              		.section	.text.ATParsingTaskCode,"ax",%progbits
 1078              		.align	1
 1079              		.global	ATParsingTaskCode
 1080              		.syntax unified
 1081              		.thumb
 1082              		.thumb_func
 1084              	ATParsingTaskCode:
 1085              	.LFB8:
 272:Core/Src/uart_at.c ****         }
 273:Core/Src/uart_at.c ****     }
 274:Core/Src/uart_at.c ****     /* USER CODE END StartCmdProcessing */
 275:Core/Src/uart_at.c ****     /* USER CODE END 5 */
ARM GAS  /tmp/cc9jRPED.s 			page 26


 276:Core/Src/uart_at.c **** }
 277:Core/Src/uart_at.c **** 
 278:Core/Src/uart_at.c **** /* USER CODE BEGIN Header_StartATHandling */
 279:Core/Src/uart_at.c **** /**
 280:Core/Src/uart_at.c ****  * @brief Function implementing the cmdHandlingTask thread.
 281:Core/Src/uart_at.c ****  * @param argument: Not used
 282:Core/Src/uart_at.c ****  * @retval None
 283:Core/Src/uart_at.c ****  */
 284:Core/Src/uart_at.c **** /* USER CODE END Header_StartATHandling */
 285:Core/Src/uart_at.c **** void ATParsingTaskCode(void const *argument)
 286:Core/Src/uart_at.c **** {
 1086              		.loc 1 286 1
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 48
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 90B5     		push	{r4, r7, lr}
 1091              	.LCFI18:
 1092              		.cfi_def_cfa_offset 12
 1093              		.cfi_offset 4, -12
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 8DB0     		sub	sp, sp, #52
 1097              	.LCFI19:
 1098              		.cfi_def_cfa_offset 64
 1099 0004 00AF     		add	r7, sp, #0
 1100              	.LCFI20:
 1101              		.cfi_def_cfa_register 7
 1102 0006 7860     		str	r0, [r7, #4]
 287:Core/Src/uart_at.c ****     /* USER CODE BEGIN StartATHandling */
 288:Core/Src/uart_at.c ****     /* Infinite loop */
 289:Core/Src/uart_at.c ****     // REF: https://www.keil.com/pack/doc/cmsis/RTOS/html/group__CMSIS__RTOS__Mail.html
 290:Core/Src/uart_at.c ****     osStatus_t uartevent;
 291:Core/Src/uart_at.c ****     UART_MEM_BLOCK_t *pMem;
 292:Core/Src/uart_at.c ****     LORA_PAYLOAD_MEM_BLOCK_t *pLoRaPayload;
 293:Core/Src/uart_at.c ****     CMD_t *pATResponse;
 294:Core/Src/uart_at.c ****     
 295:Core/Src/uart_at.c ****     mpid_ATCMD_MemPool = osMemoryPoolNew(ATCMD_MEMPOOL_OBJECTS, sizeof(CMD_t), NULL);
 1103              		.loc 1 295 26
 1104 0008 0022     		movs	r2, #0
 1105 000a 0C21     		movs	r1, #12
 1106 000c 0820     		movs	r0, #8
 1107 000e FFF7FEFF 		bl	osMemoryPoolNew
 1108 0012 0346     		mov	r3, r0
 1109              		.loc 1 295 24
 1110 0014 604A     		ldr	r2, .L64
 1111 0016 1360     		str	r3, [r2]
 296:Core/Src/uart_at.c ****     mpid_LoRaPayload_MemPool = osMemoryPoolNew(LORAPAYLOAD_MEMPOOL_OBJECTS, sizeof(LORA_PAYLOAD_MEM
 1112              		.loc 1 296 32
 1113 0018 0022     		movs	r2, #0
 1114 001a 5421     		movs	r1, #84
 1115 001c 0220     		movs	r0, #2
 1116 001e FFF7FEFF 		bl	osMemoryPoolNew
 1117 0022 0346     		mov	r3, r0
 1118              		.loc 1 296 30
 1119 0024 5D4A     		ldr	r2, .L64+4
 1120 0026 1360     		str	r3, [r2]
 297:Core/Src/uart_at.c ****     Ringbuf_Init();
ARM GAS  /tmp/cc9jRPED.s 			page 27


 1121              		.loc 1 297 5
 1122 0028 FFF7FEFF 		bl	Ringbuf_Init
 298:Core/Src/uart_at.c ****     uint32_t CurrentRetries = 0;
 1123              		.loc 1 298 14
 1124 002c 0023     		movs	r3, #0
 1125 002e BB62     		str	r3, [r7, #40]
 1126              	.L62:
 299:Core/Src/uart_at.c ****     while (1)
 300:Core/Src/uart_at.c ****     {
 301:Core/Src/uart_at.c ****         uartevent = osMessageQueueGet(uartQueueHandle, &pMem, NULL,  osWaitForever); // wait for me
 1127              		.loc 1 301 21
 1128 0030 5B4B     		ldr	r3, .L64+8
 1129 0032 1868     		ldr	r0, [r3]
 1130 0034 07F11001 		add	r1, r7, #16
 1131 0038 4FF0FF33 		mov	r3, #-1
 1132 003c 0022     		movs	r2, #0
 1133 003e FFF7FEFF 		bl	osMessageQueueGet
 1134 0042 7862     		str	r0, [r7, #36]
 302:Core/Src/uart_at.c ****         if (uartevent == osOK)
 1135              		.loc 1 302 12
 1136 0044 7B6A     		ldr	r3, [r7, #36]
 1137 0046 002B     		cmp	r3, #0
 1138 0048 F2D1     		bne	.L62
 303:Core/Src/uart_at.c ****         {
 304:Core/Src/uart_at.c ****             pATResponse = (CMD_t *)osMemoryPoolAlloc(mpid_ATCMD_MemPool, 0U); // get Mem Block
 1139              		.loc 1 304 36
 1140 004a 534B     		ldr	r3, .L64
 1141 004c 1B68     		ldr	r3, [r3]
 1142 004e 0021     		movs	r1, #0
 1143 0050 1846     		mov	r0, r3
 1144 0052 FFF7FEFF 		bl	osMemoryPoolAlloc
 1145 0056 0346     		mov	r3, r0
 1146              		.loc 1 304 25
 1147 0058 FB60     		str	r3, [r7, #12]
 305:Core/Src/uart_at.c ****             if (pATResponse != NULL)
 1148              		.loc 1 305 29
 1149 005a FB68     		ldr	r3, [r7, #12]
 1150              		.loc 1 305 16
 1151 005c 002B     		cmp	r3, #0
 1152 005e 00F09180 		beq	.L54
 306:Core/Src/uart_at.c ****             {
 307:Core/Src/uart_at.c ****                 pATResponse->command = AT_COMMAND_UNDEFINED;
 1153              		.loc 1 307 28
 1154 0062 FB68     		ldr	r3, [r7, #12]
 1155              		.loc 1 307 38
 1156 0064 0B22     		movs	r2, #11
 1157 0066 1A70     		strb	r2, [r3]
 308:Core/Src/uart_at.c ****                 pATResponse->response = ParseResponse(pMem->Buf);
 1158              		.loc 1 308 59
 1159 0068 3B69     		ldr	r3, [r7, #16]
 1160              		.loc 1 308 28
 1161 006a FC68     		ldr	r4, [r7, #12]
 1162              		.loc 1 308 41
 1163 006c 1846     		mov	r0, r3
 1164 006e FFF7FEFF 		bl	ParseResponse
 1165 0072 0346     		mov	r3, r0
 1166              		.loc 1 308 39
ARM GAS  /tmp/cc9jRPED.s 			page 28


 1167 0074 6370     		strb	r3, [r4, #1]
 309:Core/Src/uart_at.c ****                 if(pATResponse!=AT_RESPONSE_UNDEFINED)
 1168              		.loc 1 309 31
 1169 0076 FB68     		ldr	r3, [r7, #12]
 1170              		.loc 1 309 19
 1171 0078 0A2B     		cmp	r3, #10
 1172 007a 7BD0     		beq	.L55
 310:Core/Src/uart_at.c ****                 {
 311:Core/Src/uart_at.c ****                     if(pATResponse->response==AT_RX_OK)
 1173              		.loc 1 311 35
 1174 007c FB68     		ldr	r3, [r7, #12]
 1175 007e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1176              		.loc 1 311 23
 1177 0080 022B     		cmp	r3, #2
 1178 0082 6BD1     		bne	.L56
 1179              	.LBB8:
 312:Core/Src/uart_at.c ****                     {
 313:Core/Src/uart_at.c ****                         //parse received data
 314:Core/Src/uart_at.c ****                         char *pch;
 315:Core/Src/uart_at.c ****                         char *rcvDataPointer, asciiChar[3];  
 316:Core/Src/uart_at.c ****                         uint32_t number;                      
 317:Core/Src/uart_at.c ****                         pLoRaPayload = (LORA_PAYLOAD_MEM_BLOCK_t *)osMemoryPoolAlloc(mpid_LoRaPaylo
 1180              		.loc 1 317 68
 1181 0084 454B     		ldr	r3, .L64+4
 1182 0086 1B68     		ldr	r3, [r3]
 1183 0088 0021     		movs	r1, #0
 1184 008a 1846     		mov	r0, r3
 1185 008c FFF7FEFF 		bl	osMemoryPoolAlloc
 1186 0090 3862     		str	r0, [r7, #32]
 318:Core/Src/uart_at.c ****                         // Data Format: RX:616263:2:-43:25
 319:Core/Src/uart_at.c ****                         pch = strtok(pMem->Buf, ":");
 1187              		.loc 1 319 42
 1188 0092 3B69     		ldr	r3, [r7, #16]
 1189              		.loc 1 319 31
 1190 0094 4349     		ldr	r1, .L64+12
 1191 0096 1846     		mov	r0, r3
 1192 0098 FFF7FEFF 		bl	strtok
 1193 009c 0346     		mov	r3, r0
 1194              		.loc 1 319 29
 1195 009e FB61     		str	r3, [r7, #28]
 320:Core/Src/uart_at.c ****                         pch = strtok(NULL, ":");
 1196              		.loc 1 320 31
 1197 00a0 4049     		ldr	r1, .L64+12
 1198 00a2 0020     		movs	r0, #0
 1199 00a4 FFF7FEFF 		bl	strtok
 1200 00a8 0346     		mov	r3, r0
 1201              		.loc 1 320 29
 1202 00aa FB61     		str	r3, [r7, #28]
 321:Core/Src/uart_at.c ****                         rcvDataPointer = pch;
 1203              		.loc 1 321 40
 1204 00ac FB69     		ldr	r3, [r7, #28]
 1205 00ae BB61     		str	r3, [r7, #24]
 322:Core/Src/uart_at.c ****                         asciiChar[3] = '\0';
 1206              		.loc 1 322 38
 1207 00b0 0023     		movs	r3, #0
 1208 00b2 FB72     		strb	r3, [r7, #11]
 323:Core/Src/uart_at.c ****                         pLoRaPayload->Buf[0] = '\0';
ARM GAS  /tmp/cc9jRPED.s 			page 29


 1209              		.loc 1 323 46
 1210 00b4 3B6A     		ldr	r3, [r7, #32]
 1211 00b6 0022     		movs	r2, #0
 1212 00b8 1A75     		strb	r2, [r3, #20]
 324:Core/Src/uart_at.c ****                         pLoRaPayload->rcvDataLen = strlen(rcvDataPointer);
 1213              		.loc 1 324 52
 1214 00ba B869     		ldr	r0, [r7, #24]
 1215 00bc FFF7FEFF 		bl	strlen
 1216 00c0 0246     		mov	r2, r0
 1217              		.loc 1 324 50
 1218 00c2 3B6A     		ldr	r3, [r7, #32]
 1219 00c4 9A60     		str	r2, [r3, #8]
 1220              	.LBB9:
 325:Core/Src/uart_at.c ****                         for (uint32_t i = 0; i < pLoRaPayload->rcvDataLen; i = i + 2)
 1221              		.loc 1 325 39
 1222 00c6 0023     		movs	r3, #0
 1223 00c8 FB62     		str	r3, [r7, #44]
 1224              		.loc 1 325 25
 1225 00ca 19E0     		b	.L57
 1226              	.L58:
 1227              	.LBB10:
 326:Core/Src/uart_at.c ****                         {
 327:Core/Src/uart_at.c ****                             memcpy(asciiChar, rcvDataPointer + i, 2);
 1228              		.loc 1 327 62 discriminator 3
 1229 00cc BA69     		ldr	r2, [r7, #24]
 1230 00ce FB6A     		ldr	r3, [r7, #44]
 1231 00d0 1344     		add	r3, r3, r2
 1232              		.loc 1 327 29 discriminator 3
 1233 00d2 1B88     		ldrh	r3, [r3]	@ unaligned
 1234 00d4 9BB2     		uxth	r3, r3
 1235 00d6 3B81     		strh	r3, [r7, #8]	@ movhi
 328:Core/Src/uart_at.c ****                             number = (uint32_t)strtol(asciiChar, NULL, 16);
 1236              		.loc 1 328 48 discriminator 3
 1237 00d8 07F10803 		add	r3, r7, #8
 1238 00dc 1022     		movs	r2, #16
 1239 00de 0021     		movs	r1, #0
 1240 00e0 1846     		mov	r0, r3
 1241 00e2 FFF7FEFF 		bl	strtol
 1242 00e6 0346     		mov	r3, r0
 1243              		.loc 1 328 36 discriminator 3
 1244 00e8 7B61     		str	r3, [r7, #20]
 329:Core/Src/uart_at.c ****                             //sprintf(pLoRaPayload->Buf, "%s%c", pLoRaPayload->Buf, number);
 330:Core/Src/uart_at.c ****                             pLoRaPayload->Buf[i / 2] = number & 0x00FF;
 1245              		.loc 1 330 49 discriminator 3
 1246 00ea FB6A     		ldr	r3, [r7, #44]
 1247 00ec 5B08     		lsrs	r3, r3, #1
 1248              		.loc 1 330 54 discriminator 3
 1249 00ee 7A69     		ldr	r2, [r7, #20]
 1250 00f0 D1B2     		uxtb	r1, r2
 1251 00f2 3A6A     		ldr	r2, [r7, #32]
 1252 00f4 1344     		add	r3, r3, r2
 1253 00f6 0A46     		mov	r2, r1
 1254 00f8 1A75     		strb	r2, [r3, #20]
 1255              	.LBE10:
 325:Core/Src/uart_at.c ****                         {
 1256              		.loc 1 325 78 discriminator 3
 1257 00fa FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/cc9jRPED.s 			page 30


 1258 00fc 0233     		adds	r3, r3, #2
 1259 00fe FB62     		str	r3, [r7, #44]
 1260              	.L57:
 325:Core/Src/uart_at.c ****                         {
 1261              		.loc 1 325 62 discriminator 1
 1262 0100 3B6A     		ldr	r3, [r7, #32]
 1263 0102 9B68     		ldr	r3, [r3, #8]
 325:Core/Src/uart_at.c ****                         {
 1264              		.loc 1 325 48 discriminator 1
 1265 0104 FA6A     		ldr	r2, [r7, #44]
 1266 0106 9A42     		cmp	r2, r3
 1267 0108 E0D3     		bcc	.L58
 1268              	.LBE9:
 331:Core/Src/uart_at.c ****                         }
 332:Core/Src/uart_at.c ****                         pch = strtok(NULL, ":");
 1269              		.loc 1 332 31
 1270 010a 2649     		ldr	r1, .L64+12
 1271 010c 0020     		movs	r0, #0
 1272 010e FFF7FEFF 		bl	strtok
 1273 0112 0346     		mov	r3, r0
 1274              		.loc 1 332 29
 1275 0114 FB61     		str	r3, [r7, #28]
 333:Core/Src/uart_at.c ****                         pLoRaPayload->rcvPort = atoi(pch);
 1276              		.loc 1 333 49
 1277 0116 F869     		ldr	r0, [r7, #28]
 1278 0118 FFF7FEFF 		bl	atoi
 1279 011c 0346     		mov	r3, r0
 1280 011e 1A46     		mov	r2, r3
 1281              		.loc 1 333 47
 1282 0120 3B6A     		ldr	r3, [r7, #32]
 1283 0122 1A60     		str	r2, [r3]
 334:Core/Src/uart_at.c ****                         pch = strtok(NULL, ":");
 1284              		.loc 1 334 31
 1285 0124 1F49     		ldr	r1, .L64+12
 1286 0126 0020     		movs	r0, #0
 1287 0128 FFF7FEFF 		bl	strtok
 1288 012c 0346     		mov	r3, r0
 1289              		.loc 1 334 29
 1290 012e FB61     		str	r3, [r7, #28]
 335:Core/Src/uart_at.c ****                         pLoRaPayload->rcvRSSI = atoi(pch);
 1291              		.loc 1 335 49
 1292 0130 F869     		ldr	r0, [r7, #28]
 1293 0132 FFF7FEFF 		bl	atoi
 1294 0136 0246     		mov	r2, r0
 1295              		.loc 1 335 47
 1296 0138 3B6A     		ldr	r3, [r7, #32]
 1297 013a DA60     		str	r2, [r3, #12]
 336:Core/Src/uart_at.c ****                         pch = strtok(NULL, ":");
 1298              		.loc 1 336 31
 1299 013c 1949     		ldr	r1, .L64+12
 1300 013e 0020     		movs	r0, #0
 1301 0140 FFF7FEFF 		bl	strtok
 1302 0144 0346     		mov	r3, r0
 1303              		.loc 1 336 29
 1304 0146 FB61     		str	r3, [r7, #28]
 337:Core/Src/uart_at.c ****                         pLoRaPayload->rcvSNR = atoi(pch);
 1305              		.loc 1 337 48
ARM GAS  /tmp/cc9jRPED.s 			page 31


 1306 0148 F869     		ldr	r0, [r7, #28]
 1307 014a FFF7FEFF 		bl	atoi
 1308 014e 0246     		mov	r2, r0
 1309              		.loc 1 337 46
 1310 0150 3B6A     		ldr	r3, [r7, #32]
 1311 0152 1A61     		str	r2, [r3, #16]
 338:Core/Src/uart_at.c ****                         pATResponse->rx_payload = pLoRaPayload;
 1312              		.loc 1 338 36
 1313 0154 FB68     		ldr	r3, [r7, #12]
 1314              		.loc 1 338 49
 1315 0156 3A6A     		ldr	r2, [r7, #32]
 1316 0158 5A60     		str	r2, [r3, #4]
 1317              	.LBE8:
 1318 015a 02E0     		b	.L59
 1319              	.L56:
 339:Core/Src/uart_at.c ****                     }    
 340:Core/Src/uart_at.c ****                     else
 341:Core/Src/uart_at.c ****                     {
 342:Core/Src/uart_at.c ****                         pATResponse->rx_payload = NULL;
 1320              		.loc 1 342 36
 1321 015c FB68     		ldr	r3, [r7, #12]
 1322              		.loc 1 342 49
 1323 015e 0022     		movs	r2, #0
 1324 0160 5A60     		str	r2, [r3, #4]
 1325              	.L59:
 343:Core/Src/uart_at.c ****                     }                    
 344:Core/Src/uart_at.c ****                     // Put command to queue
 345:Core/Src/uart_at.c ****                     osMessageQueuePut(ATQueueHandle, &pATResponse, 0U, 0U);
 1326              		.loc 1 345 21
 1327 0162 114B     		ldr	r3, .L64+16
 1328 0164 1868     		ldr	r0, [r3]
 1329 0166 07F10C01 		add	r1, r7, #12
 1330 016a 0023     		movs	r3, #0
 1331 016c 0022     		movs	r2, #0
 1332 016e FFF7FEFF 		bl	osMessageQueuePut
 1333 0172 08E0     		b	.L60
 1334              	.L55:
 346:Core/Src/uart_at.c ****                 }
 347:Core/Src/uart_at.c ****                 else
 348:Core/Src/uart_at.c ****                 {
 349:Core/Src/uart_at.c ****                     osMemoryPoolFree(mpid_ATCMD_MemPool,pATResponse);
 1335              		.loc 1 349 21
 1336 0174 084B     		ldr	r3, .L64
 1337 0176 1B68     		ldr	r3, [r3]
 1338 0178 FA68     		ldr	r2, [r7, #12]
 1339 017a 1146     		mov	r1, r2
 1340 017c 1846     		mov	r0, r3
 1341 017e FFF7FEFF 		bl	osMemoryPoolFree
 1342 0182 00E0     		b	.L60
 1343              	.L63:
 1344              	.L54:
 350:Core/Src/uart_at.c ****                 }
 351:Core/Src/uart_at.c ****             } 
 352:Core/Src/uart_at.c ****             else
 353:Core/Src/uart_at.c ****             {
 354:Core/Src/uart_at.c ****                 while(1);
 1345              		.loc 1 354 22 discriminator 1
ARM GAS  /tmp/cc9jRPED.s 			page 32


 1346 0184 FEE7     		b	.L63
 1347              	.L60:
 355:Core/Src/uart_at.c ****             }           
 356:Core/Src/uart_at.c ****             osMemoryPoolFree(mpid_UART_MemPool,pMem);
 1348              		.loc 1 356 13
 1349 0186 094B     		ldr	r3, .L64+20
 1350 0188 1B68     		ldr	r3, [r3]
 1351 018a 3A69     		ldr	r2, [r7, #16]
 1352 018c 1146     		mov	r1, r2
 1353 018e 1846     		mov	r0, r3
 1354 0190 FFF7FEFF 		bl	osMemoryPoolFree
 301:Core/Src/uart_at.c ****         if (uartevent == osOK)
 1355              		.loc 1 301 19
 1356 0194 4CE7     		b	.L62
 1357              	.L65:
 1358 0196 00BF     		.align	2
 1359              	.L64:
 1360 0198 00000000 		.word	mpid_ATCMD_MemPool
 1361 019c 00000000 		.word	mpid_LoRaPayload_MemPool
 1362 01a0 00000000 		.word	uartQueueHandle
 1363 01a4 00000000 		.word	.LC0
 1364 01a8 00000000 		.word	ATQueueHandle
 1365 01ac 00000000 		.word	mpid_UART_MemPool
 1366              		.cfi_endproc
 1367              	.LFE8:
 1369              		.text
 1370              	.Letext0:
 1371              		.file 2 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/lib/gcc/arm-none-eabi/12.2.1/includ
 1372              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 1373              		.file 4 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1374              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1375              		.file 6 "Core/Inc/uartRingBufDMA.h"
 1376              		.file 7 "Core/Inc/uart_at.h"
 1377              		.file 8 "<built-in>"
ARM GAS  /tmp/cc9jRPED.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart_at.c
     /tmp/cc9jRPED.s:25     .bss.cmd_buffer:0000000000000000 cmd_buffer
     /tmp/cc9jRPED.s:22     .bss.cmd_buffer:0000000000000000 $d
     /tmp/cc9jRPED.s:31     .bss.cmd_len:0000000000000000 cmd_len
     /tmp/cc9jRPED.s:32     .bss.cmd_len:0000000000000000 $d
     /tmp/cc9jRPED.s:37     .bss.byte:0000000000000000 byte
     /tmp/cc9jRPED.s:38     .bss.byte:0000000000000000 $d
     /tmp/cc9jRPED.s:44     .bss.mpid_ATCMD_MemPool:0000000000000000 mpid_ATCMD_MemPool
     /tmp/cc9jRPED.s:41     .bss.mpid_ATCMD_MemPool:0000000000000000 $d
     /tmp/cc9jRPED.s:51     .bss.mpid_LoRaPayload_MemPool:0000000000000000 mpid_LoRaPayload_MemPool
     /tmp/cc9jRPED.s:48     .bss.mpid_LoRaPayload_MemPool:0000000000000000 $d
     /tmp/cc9jRPED.s:58     .rodata.AT_COMMANDS:0000000000000000 AT_COMMANDS
     /tmp/cc9jRPED.s:55     .rodata.AT_COMMANDS:0000000000000000 $d
     /tmp/cc9jRPED.s:148    .rodata.AT_RESPONSES:0000000000000000 AT_RESPONSES
     /tmp/cc9jRPED.s:145    .rodata.AT_RESPONSES:0000000000000000 $d
     /tmp/cc9jRPED.s:185    .bss.gPendingResponse:0000000000000000 gPendingResponse
     /tmp/cc9jRPED.s:186    .bss.gPendingResponse:0000000000000000 $d
     /tmp/cc9jRPED.s:192    .bss.gATPayload:0000000000000000 gATPayload
     /tmp/cc9jRPED.s:189    .bss.gATPayload:0000000000000000 $d
     /tmp/cc9jRPED.s:195    .text.sendRAWAT:0000000000000000 $t
     /tmp/cc9jRPED.s:201    .text.sendRAWAT:0000000000000000 sendRAWAT
     /tmp/cc9jRPED.s:486    .text.ParseAT:0000000000000000 ParseAT
     /tmp/cc9jRPED.s:368    .text.sendRAWAT:00000000000000e8 $d
     /tmp/cc9jRPED.s:377    .text.ParseResponse:0000000000000000 $t
     /tmp/cc9jRPED.s:383    .text.ParseResponse:0000000000000000 ParseResponse
     /tmp/cc9jRPED.s:475    .text.ParseResponse:0000000000000068 $d
     /tmp/cc9jRPED.s:480    .text.ParseAT:0000000000000000 $t
     /tmp/cc9jRPED.s:581    .text.ParseAT:0000000000000070 $d
     /tmp/cc9jRPED.s:586    .text.ATHandlingTaskCode:0000000000000000 $t
     /tmp/cc9jRPED.s:592    .text.ATHandlingTaskCode:0000000000000000 ATHandlingTaskCode
     /tmp/cc9jRPED.s:987    .text.ATHandlingTaskCode:0000000000000258 $d
     /tmp/cc9jRPED.s:994    .text.ATHandlingTaskCode:000000000000026c $t
     /tmp/cc9jRPED.s:1068   .text.ATHandlingTaskCode:00000000000002dc $d
     /tmp/cc9jRPED.s:1074   .rodata:0000000000000000 $d
     /tmp/cc9jRPED.s:1078   .text.ATParsingTaskCode:0000000000000000 $t
     /tmp/cc9jRPED.s:1084   .text.ATParsingTaskCode:0000000000000000 ATParsingTaskCode
     /tmp/cc9jRPED.s:1360   .text.ATParsingTaskCode:0000000000000198 $d

UNDEFINED SYMBOLS
osSemaphoreAcquire
osMemoryPoolAlloc
strlen
memcpy
osThreadGetId
osMessageQueuePut
osThreadFlagsClear
osThreadFlagsWait
osMemoryPoolFree
osSemaphoreRelease
ATCommandSemaphoreHandle
ATQueueHandle
strncmp
osMessageQueueGet
osThreadFlagsSet
LoRaWAN_RxEventCallback
LoRaWAN_JoinCallback
ARM GAS  /tmp/cc9jRPED.s 			page 34


SendToUART
osMemoryPoolNew
Ringbuf_Init
strtok
strtol
atoi
uartQueueHandle
mpid_UART_MemPool
